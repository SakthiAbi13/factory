/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/libs/codemirror/mode/sieve/sieve.js":
/*!*********************************************************************!*\
  !*** ./resources/assets/vendor/libs/codemirror/mode/sieve/sieve.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (( false ? 0 : _typeof(exports)) == \"object\" && ( false ? 0 : _typeof(module)) == \"object\") // CommonJS\n    mod(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));else if (true) // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else // Plain browser env\n    {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"sieve\", function (config) {\n    function words(str) {\n      var obj = {},\n          words = str.split(\" \");\n\n      for (var i = 0; i < words.length; ++i) {\n        obj[words[i]] = true;\n      }\n\n      return obj;\n    }\n\n    var keywords = words(\"if elsif else stop require\");\n    var atoms = words(\"true false not\");\n    var indentUnit = config.indentUnit;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \"/\" && stream.eat(\"*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n\n      if (ch === '#') {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (ch == \"\\\"\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n\n      if (ch == \"(\") {\n        state._indent.push(\"(\"); // add virtual angel wings so that editor behaves...\n        // ...more sane in case of broken brackets\n\n\n        state._indent.push(\"{\");\n\n        return null;\n      }\n\n      if (ch === \"{\") {\n        state._indent.push(\"{\");\n\n        return null;\n      }\n\n      if (ch == \")\") {\n        state._indent.pop();\n\n        state._indent.pop();\n      }\n\n      if (ch === \"}\") {\n        state._indent.pop();\n\n        return null;\n      }\n\n      if (ch == \",\") return null;\n      if (ch == \";\") return null;\n      if (/[{}\\(\\),;]/.test(ch)) return null; // 1*DIGIT \"K\" / \"M\" / \"G\"\n\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\d]/);\n        stream.eat(/[KkMmGg]/);\n        return \"number\";\n      } // \":\" (ALPHA / \"_\") *(ALPHA / DIGIT / \"_\")\n\n\n      if (ch == \":\") {\n        stream.eatWhile(/[a-zA-Z_]/);\n        stream.eatWhile(/[a-zA-Z0-9_]/);\n        return \"operator\";\n      }\n\n      stream.eatWhile(/\\w/);\n      var cur = stream.current(); // \"text:\" *(SP / HTAB) (hash-comment / CRLF)\n      // *(multiline-literal / multiline-dotstart)\n      // \".\" CRLF\n\n      if (cur == \"text\" && stream.eat(\":\")) {\n        state.tokenize = tokenMultiLineString;\n        return \"string\";\n      }\n\n      if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n      if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n      return null;\n    }\n\n    function tokenMultiLineString(stream, state) {\n      state._multiLineString = true; // the first line is special it may contain a comment\n\n      if (!stream.sol()) {\n        stream.eatSpace();\n\n        if (stream.peek() == \"#\") {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        stream.skipToEnd();\n        return \"string\";\n      }\n\n      if (stream.next() == \".\" && stream.eol()) {\n        state._multiLineString = false;\n        state.tokenize = tokenBase;\n      }\n\n      return \"string\";\n    }\n\n    function tokenCComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == \"/\") {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        maybeEnd = ch == \"*\";\n      }\n\n      return \"comment\";\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) break;\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        if (!escaped) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n\n    return {\n      startState: function startState(base) {\n        return {\n          tokenize: tokenBase,\n          baseIndent: base || 0,\n          _indent: []\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.eatSpace()) return null;\n        return (state.tokenize || tokenBase)(stream, state);\n      },\n      indent: function indent(state, _textAfter) {\n        var length = state._indent.length;\n        if (_textAfter && _textAfter[0] == \"}\") length--;\n        if (length < 0) length = 0;\n        return length * indentUnit;\n      },\n      electricChars: \"}\"\n    };\n  });\n  CodeMirror.defineMIME(\"application/sieve\", \"sieve\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/vendor/libs/codemirror/mode/sieve/sieve.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/vendor/libs/codemirror/mode/sieve/sieve.js");
/******/ 	
/******/ })()
;