/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/libs/codemirror/mode/meta.js":
/*!**************************************************************!*\
  !*** ./resources/assets/vendor/libs/codemirror/mode/meta.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (( false ? 0 : _typeof(exports)) == \"object\" && ( false ? 0 : _typeof(module)) == \"object\") // CommonJS\n    mod(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));else if (true) // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else // Plain browser env\n    {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.modeInfo = [{\n    name: \"APL\",\n    mime: \"text/apl\",\n    mode: \"apl\",\n    ext: [\"dyalog\", \"apl\"]\n  }, {\n    name: \"PGP\",\n    mimes: [\"application/pgp\", \"application/pgp-encrypted\", \"application/pgp-keys\", \"application/pgp-signature\"],\n    mode: \"asciiarmor\",\n    ext: [\"asc\", \"pgp\", \"sig\"]\n  }, {\n    name: \"ASN.1\",\n    mime: \"text/x-ttcn-asn\",\n    mode: \"asn.1\",\n    ext: [\"asn\", \"asn1\"]\n  }, {\n    name: \"Asterisk\",\n    mime: \"text/x-asterisk\",\n    mode: \"asterisk\",\n    file: /^extensions\\.conf$/i\n  }, {\n    name: \"Brainfuck\",\n    mime: \"text/x-brainfuck\",\n    mode: \"brainfuck\",\n    ext: [\"b\", \"bf\"]\n  }, {\n    name: \"C\",\n    mime: \"text/x-csrc\",\n    mode: \"clike\",\n    ext: [\"c\", \"h\", \"ino\"]\n  }, {\n    name: \"C++\",\n    mime: \"text/x-c++src\",\n    mode: \"clike\",\n    ext: [\"cpp\", \"c++\", \"cc\", \"cxx\", \"hpp\", \"h++\", \"hh\", \"hxx\"],\n    alias: [\"cpp\"]\n  }, {\n    name: \"Cobol\",\n    mime: \"text/x-cobol\",\n    mode: \"cobol\",\n    ext: [\"cob\", \"cpy\", \"cbl\"]\n  }, {\n    name: \"C#\",\n    mime: \"text/x-csharp\",\n    mode: \"clike\",\n    ext: [\"cs\"],\n    alias: [\"csharp\", \"cs\"]\n  }, {\n    name: \"Clojure\",\n    mime: \"text/x-clojure\",\n    mode: \"clojure\",\n    ext: [\"clj\", \"cljc\", \"cljx\"]\n  }, {\n    name: \"ClojureScript\",\n    mime: \"text/x-clojurescript\",\n    mode: \"clojure\",\n    ext: [\"cljs\"]\n  }, {\n    name: \"Closure Stylesheets (GSS)\",\n    mime: \"text/x-gss\",\n    mode: \"css\",\n    ext: [\"gss\"]\n  }, {\n    name: \"CMake\",\n    mime: \"text/x-cmake\",\n    mode: \"cmake\",\n    ext: [\"cmake\", \"cmake.in\"],\n    file: /^CMakeLists\\.txt$/\n  }, {\n    name: \"CoffeeScript\",\n    mimes: [\"application/vnd.coffeescript\", \"text/coffeescript\", \"text/x-coffeescript\"],\n    mode: \"coffeescript\",\n    ext: [\"coffee\"],\n    alias: [\"coffee\", \"coffee-script\"]\n  }, {\n    name: \"Common Lisp\",\n    mime: \"text/x-common-lisp\",\n    mode: \"commonlisp\",\n    ext: [\"cl\", \"lisp\", \"el\"],\n    alias: [\"lisp\"]\n  }, {\n    name: \"Cypher\",\n    mime: \"application/x-cypher-query\",\n    mode: \"cypher\",\n    ext: [\"cyp\", \"cypher\"]\n  }, {\n    name: \"Cython\",\n    mime: \"text/x-cython\",\n    mode: \"python\",\n    ext: [\"pyx\", \"pxd\", \"pxi\"]\n  }, {\n    name: \"Crystal\",\n    mime: \"text/x-crystal\",\n    mode: \"crystal\",\n    ext: [\"cr\"]\n  }, {\n    name: \"CSS\",\n    mime: \"text/css\",\n    mode: \"css\",\n    ext: [\"css\"]\n  }, {\n    name: \"CQL\",\n    mime: \"text/x-cassandra\",\n    mode: \"sql\",\n    ext: [\"cql\"]\n  }, {\n    name: \"D\",\n    mime: \"text/x-d\",\n    mode: \"d\",\n    ext: [\"d\"]\n  }, {\n    name: \"Dart\",\n    mimes: [\"application/dart\", \"text/x-dart\"],\n    mode: \"dart\",\n    ext: [\"dart\"]\n  }, {\n    name: \"diff\",\n    mime: \"text/x-diff\",\n    mode: \"diff\",\n    ext: [\"diff\", \"patch\"]\n  }, {\n    name: \"Django\",\n    mime: \"text/x-django\",\n    mode: \"django\"\n  }, {\n    name: \"Dockerfile\",\n    mime: \"text/x-dockerfile\",\n    mode: \"dockerfile\",\n    file: /^Dockerfile$/\n  }, {\n    name: \"DTD\",\n    mime: \"application/xml-dtd\",\n    mode: \"dtd\",\n    ext: [\"dtd\"]\n  }, {\n    name: \"Dylan\",\n    mime: \"text/x-dylan\",\n    mode: \"dylan\",\n    ext: [\"dylan\", \"dyl\", \"intr\"]\n  }, {\n    name: \"EBNF\",\n    mime: \"text/x-ebnf\",\n    mode: \"ebnf\"\n  }, {\n    name: \"ECL\",\n    mime: \"text/x-ecl\",\n    mode: \"ecl\",\n    ext: [\"ecl\"]\n  }, {\n    name: \"edn\",\n    mime: \"application/edn\",\n    mode: \"clojure\",\n    ext: [\"edn\"]\n  }, {\n    name: \"Eiffel\",\n    mime: \"text/x-eiffel\",\n    mode: \"eiffel\",\n    ext: [\"e\"]\n  }, {\n    name: \"Elm\",\n    mime: \"text/x-elm\",\n    mode: \"elm\",\n    ext: [\"elm\"]\n  }, {\n    name: \"Embedded JavaScript\",\n    mime: \"application/x-ejs\",\n    mode: \"htmlembedded\",\n    ext: [\"ejs\"]\n  }, {\n    name: \"Embedded Ruby\",\n    mime: \"application/x-erb\",\n    mode: \"htmlembedded\",\n    ext: [\"erb\"]\n  }, {\n    name: \"Erlang\",\n    mime: \"text/x-erlang\",\n    mode: \"erlang\",\n    ext: [\"erl\"]\n  }, {\n    name: \"Esper\",\n    mime: \"text/x-esper\",\n    mode: \"sql\"\n  }, {\n    name: \"Factor\",\n    mime: \"text/x-factor\",\n    mode: \"factor\",\n    ext: [\"factor\"]\n  }, {\n    name: \"FCL\",\n    mime: \"text/x-fcl\",\n    mode: \"fcl\"\n  }, {\n    name: \"Forth\",\n    mime: \"text/x-forth\",\n    mode: \"forth\",\n    ext: [\"forth\", \"fth\", \"4th\"]\n  }, {\n    name: \"Fortran\",\n    mime: \"text/x-fortran\",\n    mode: \"fortran\",\n    ext: [\"f\", \"for\", \"f77\", \"f90\", \"f95\"]\n  }, {\n    name: \"F#\",\n    mime: \"text/x-fsharp\",\n    mode: \"mllike\",\n    ext: [\"fs\"],\n    alias: [\"fsharp\"]\n  }, {\n    name: \"Gas\",\n    mime: \"text/x-gas\",\n    mode: \"gas\",\n    ext: [\"s\"]\n  }, {\n    name: \"Gherkin\",\n    mime: \"text/x-feature\",\n    mode: \"gherkin\",\n    ext: [\"feature\"]\n  }, {\n    name: \"GitHub Flavored Markdown\",\n    mime: \"text/x-gfm\",\n    mode: \"gfm\",\n    file: /^(readme|contributing|history)\\.md$/i\n  }, {\n    name: \"Go\",\n    mime: \"text/x-go\",\n    mode: \"go\",\n    ext: [\"go\"]\n  }, {\n    name: \"Groovy\",\n    mime: \"text/x-groovy\",\n    mode: \"groovy\",\n    ext: [\"groovy\", \"gradle\"],\n    file: /^Jenkinsfile$/\n  }, {\n    name: \"HAML\",\n    mime: \"text/x-haml\",\n    mode: \"haml\",\n    ext: [\"haml\"]\n  }, {\n    name: \"Haskell\",\n    mime: \"text/x-haskell\",\n    mode: \"haskell\",\n    ext: [\"hs\"]\n  }, {\n    name: \"Haskell (Literate)\",\n    mime: \"text/x-literate-haskell\",\n    mode: \"haskell-literate\",\n    ext: [\"lhs\"]\n  }, {\n    name: \"Haxe\",\n    mime: \"text/x-haxe\",\n    mode: \"haxe\",\n    ext: [\"hx\"]\n  }, {\n    name: \"HXML\",\n    mime: \"text/x-hxml\",\n    mode: \"haxe\",\n    ext: [\"hxml\"]\n  }, {\n    name: \"ASP.NET\",\n    mime: \"application/x-aspx\",\n    mode: \"htmlembedded\",\n    ext: [\"aspx\"],\n    alias: [\"asp\", \"aspx\"]\n  }, {\n    name: \"HTML\",\n    mime: \"text/html\",\n    mode: \"htmlmixed\",\n    ext: [\"html\", \"htm\", \"handlebars\", \"hbs\"],\n    alias: [\"xhtml\"]\n  }, {\n    name: \"HTTP\",\n    mime: \"message/http\",\n    mode: \"http\"\n  }, {\n    name: \"IDL\",\n    mime: \"text/x-idl\",\n    mode: \"idl\",\n    ext: [\"pro\"]\n  }, {\n    name: \"Pug\",\n    mime: \"text/x-pug\",\n    mode: \"pug\",\n    ext: [\"jade\", \"pug\"],\n    alias: [\"jade\"]\n  }, {\n    name: \"Java\",\n    mime: \"text/x-java\",\n    mode: \"clike\",\n    ext: [\"java\"]\n  }, {\n    name: \"Java Server Pages\",\n    mime: \"application/x-jsp\",\n    mode: \"htmlembedded\",\n    ext: [\"jsp\"],\n    alias: [\"jsp\"]\n  }, {\n    name: \"JavaScript\",\n    mimes: [\"text/javascript\", \"text/ecmascript\", \"application/javascript\", \"application/x-javascript\", \"application/ecmascript\"],\n    mode: \"javascript\",\n    ext: [\"js\"],\n    alias: [\"ecmascript\", \"js\", \"node\"]\n  }, {\n    name: \"JSON\",\n    mimes: [\"application/json\", \"application/x-json\"],\n    mode: \"javascript\",\n    ext: [\"json\", \"map\"],\n    alias: [\"json5\"]\n  }, {\n    name: \"JSON-LD\",\n    mime: \"application/ld+json\",\n    mode: \"javascript\",\n    ext: [\"jsonld\"],\n    alias: [\"jsonld\"]\n  }, {\n    name: \"JSX\",\n    mime: \"text/jsx\",\n    mode: \"jsx\",\n    ext: [\"jsx\"]\n  }, {\n    name: \"Jinja2\",\n    mime: \"text/jinja2\",\n    mode: \"jinja2\",\n    ext: [\"j2\", \"jinja\", \"jinja2\"]\n  }, {\n    name: \"Julia\",\n    mime: \"text/x-julia\",\n    mode: \"julia\",\n    ext: [\"jl\"],\n    alias: [\"jl\"]\n  }, {\n    name: \"Kotlin\",\n    mime: \"text/x-kotlin\",\n    mode: \"clike\",\n    ext: [\"kt\"]\n  }, {\n    name: \"LESS\",\n    mime: \"text/x-less\",\n    mode: \"css\",\n    ext: [\"less\"]\n  }, {\n    name: \"LiveScript\",\n    mime: \"text/x-livescript\",\n    mode: \"livescript\",\n    ext: [\"ls\"],\n    alias: [\"ls\"]\n  }, {\n    name: \"Lua\",\n    mime: \"text/x-lua\",\n    mode: \"lua\",\n    ext: [\"lua\"]\n  }, {\n    name: \"Markdown\",\n    mime: \"text/x-markdown\",\n    mode: \"markdown\",\n    ext: [\"markdown\", \"md\", \"mkd\"]\n  }, {\n    name: \"mIRC\",\n    mime: \"text/mirc\",\n    mode: \"mirc\"\n  }, {\n    name: \"MariaDB SQL\",\n    mime: \"text/x-mariadb\",\n    mode: \"sql\"\n  }, {\n    name: \"Mathematica\",\n    mime: \"text/x-mathematica\",\n    mode: \"mathematica\",\n    ext: [\"m\", \"nb\", \"wl\", \"wls\"]\n  }, {\n    name: \"Modelica\",\n    mime: \"text/x-modelica\",\n    mode: \"modelica\",\n    ext: [\"mo\"]\n  }, {\n    name: \"MUMPS\",\n    mime: \"text/x-mumps\",\n    mode: \"mumps\",\n    ext: [\"mps\"]\n  }, {\n    name: \"MS SQL\",\n    mime: \"text/x-mssql\",\n    mode: \"sql\"\n  }, {\n    name: \"mbox\",\n    mime: \"application/mbox\",\n    mode: \"mbox\",\n    ext: [\"mbox\"]\n  }, {\n    name: \"MySQL\",\n    mime: \"text/x-mysql\",\n    mode: \"sql\"\n  }, {\n    name: \"Nginx\",\n    mime: \"text/x-nginx-conf\",\n    mode: \"nginx\",\n    file: /nginx.*\\.conf$/i\n  }, {\n    name: \"NSIS\",\n    mime: \"text/x-nsis\",\n    mode: \"nsis\",\n    ext: [\"nsh\", \"nsi\"]\n  }, {\n    name: \"NTriples\",\n    mimes: [\"application/n-triples\", \"application/n-quads\", \"text/n-triples\"],\n    mode: \"ntriples\",\n    ext: [\"nt\", \"nq\"]\n  }, {\n    name: \"Objective-C\",\n    mime: \"text/x-objectivec\",\n    mode: \"clike\",\n    ext: [\"m\"],\n    alias: [\"objective-c\", \"objc\"]\n  }, {\n    name: \"Objective-C++\",\n    mime: \"text/x-objectivec++\",\n    mode: \"clike\",\n    ext: [\"mm\"],\n    alias: [\"objective-c++\", \"objc++\"]\n  }, {\n    name: \"OCaml\",\n    mime: \"text/x-ocaml\",\n    mode: \"mllike\",\n    ext: [\"ml\", \"mli\", \"mll\", \"mly\"]\n  }, {\n    name: \"Octave\",\n    mime: \"text/x-octave\",\n    mode: \"octave\",\n    ext: [\"m\"]\n  }, {\n    name: \"Oz\",\n    mime: \"text/x-oz\",\n    mode: \"oz\",\n    ext: [\"oz\"]\n  }, {\n    name: \"Pascal\",\n    mime: \"text/x-pascal\",\n    mode: \"pascal\",\n    ext: [\"p\", \"pas\"]\n  }, {\n    name: \"PEG.js\",\n    mime: \"null\",\n    mode: \"pegjs\",\n    ext: [\"jsonld\"]\n  }, {\n    name: \"Perl\",\n    mime: \"text/x-perl\",\n    mode: \"perl\",\n    ext: [\"pl\", \"pm\"]\n  }, {\n    name: \"PHP\",\n    mimes: [\"text/x-php\", \"application/x-httpd-php\", \"application/x-httpd-php-open\"],\n    mode: \"php\",\n    ext: [\"php\", \"php3\", \"php4\", \"php5\", \"php7\", \"phtml\"]\n  }, {\n    name: \"Pig\",\n    mime: \"text/x-pig\",\n    mode: \"pig\",\n    ext: [\"pig\"]\n  }, {\n    name: \"Plain Text\",\n    mime: \"text/plain\",\n    mode: \"null\",\n    ext: [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\"]\n  }, {\n    name: \"PLSQL\",\n    mime: \"text/x-plsql\",\n    mode: \"sql\",\n    ext: [\"pls\"]\n  }, {\n    name: \"PostgreSQL\",\n    mime: \"text/x-pgsql\",\n    mode: \"sql\"\n  }, {\n    name: \"PowerShell\",\n    mime: \"application/x-powershell\",\n    mode: \"powershell\",\n    ext: [\"ps1\", \"psd1\", \"psm1\"]\n  }, {\n    name: \"Properties files\",\n    mime: \"text/x-properties\",\n    mode: \"properties\",\n    ext: [\"properties\", \"ini\", \"in\"],\n    alias: [\"ini\", \"properties\"]\n  }, {\n    name: \"ProtoBuf\",\n    mime: \"text/x-protobuf\",\n    mode: \"protobuf\",\n    ext: [\"proto\"]\n  }, {\n    name: \"Python\",\n    mime: \"text/x-python\",\n    mode: \"python\",\n    ext: [\"BUILD\", \"bzl\", \"py\", \"pyw\"],\n    file: /^(BUCK|BUILD)$/\n  }, {\n    name: \"Puppet\",\n    mime: \"text/x-puppet\",\n    mode: \"puppet\",\n    ext: [\"pp\"]\n  }, {\n    name: \"Q\",\n    mime: \"text/x-q\",\n    mode: \"q\",\n    ext: [\"q\"]\n  }, {\n    name: \"R\",\n    mime: \"text/x-rsrc\",\n    mode: \"r\",\n    ext: [\"r\", \"R\"],\n    alias: [\"rscript\"]\n  }, {\n    name: \"reStructuredText\",\n    mime: \"text/x-rst\",\n    mode: \"rst\",\n    ext: [\"rst\"],\n    alias: [\"rst\"]\n  }, {\n    name: \"RPM Changes\",\n    mime: \"text/x-rpm-changes\",\n    mode: \"rpm\"\n  }, {\n    name: \"RPM Spec\",\n    mime: \"text/x-rpm-spec\",\n    mode: \"rpm\",\n    ext: [\"spec\"]\n  }, {\n    name: \"Ruby\",\n    mime: \"text/x-ruby\",\n    mode: \"ruby\",\n    ext: [\"rb\"],\n    alias: [\"jruby\", \"macruby\", \"rake\", \"rb\", \"rbx\"]\n  }, {\n    name: \"Rust\",\n    mime: \"text/x-rustsrc\",\n    mode: \"rust\",\n    ext: [\"rs\"]\n  }, {\n    name: \"SAS\",\n    mime: \"text/x-sas\",\n    mode: \"sas\",\n    ext: [\"sas\"]\n  }, {\n    name: \"Sass\",\n    mime: \"text/x-sass\",\n    mode: \"sass\",\n    ext: [\"sass\"]\n  }, {\n    name: \"Scala\",\n    mime: \"text/x-scala\",\n    mode: \"clike\",\n    ext: [\"scala\"]\n  }, {\n    name: \"Scheme\",\n    mime: \"text/x-scheme\",\n    mode: \"scheme\",\n    ext: [\"scm\", \"ss\"]\n  }, {\n    name: \"SCSS\",\n    mime: \"text/x-scss\",\n    mode: \"css\",\n    ext: [\"scss\"]\n  }, {\n    name: \"Shell\",\n    mimes: [\"text/x-sh\", \"application/x-sh\"],\n    mode: \"shell\",\n    ext: [\"sh\", \"ksh\", \"bash\"],\n    alias: [\"bash\", \"sh\", \"zsh\"],\n    file: /^PKGBUILD$/\n  }, {\n    name: \"Sieve\",\n    mime: \"application/sieve\",\n    mode: \"sieve\",\n    ext: [\"siv\", \"sieve\"]\n  }, {\n    name: \"Slim\",\n    mimes: [\"text/x-slim\", \"application/x-slim\"],\n    mode: \"slim\",\n    ext: [\"slim\"]\n  }, {\n    name: \"Smalltalk\",\n    mime: \"text/x-stsrc\",\n    mode: \"smalltalk\",\n    ext: [\"st\"]\n  }, {\n    name: \"Smarty\",\n    mime: \"text/x-smarty\",\n    mode: \"smarty\",\n    ext: [\"tpl\"]\n  }, {\n    name: \"Solr\",\n    mime: \"text/x-solr\",\n    mode: \"solr\"\n  }, {\n    name: \"SML\",\n    mime: \"text/x-sml\",\n    mode: \"mllike\",\n    ext: [\"sml\", \"sig\", \"fun\", \"smackspec\"]\n  }, {\n    name: \"Soy\",\n    mime: \"text/x-soy\",\n    mode: \"soy\",\n    ext: [\"soy\"],\n    alias: [\"closure template\"]\n  }, {\n    name: \"SPARQL\",\n    mime: \"application/sparql-query\",\n    mode: \"sparql\",\n    ext: [\"rq\", \"sparql\"],\n    alias: [\"sparul\"]\n  }, {\n    name: \"Spreadsheet\",\n    mime: \"text/x-spreadsheet\",\n    mode: \"spreadsheet\",\n    alias: [\"excel\", \"formula\"]\n  }, {\n    name: \"SQL\",\n    mime: \"text/x-sql\",\n    mode: \"sql\",\n    ext: [\"sql\"]\n  }, {\n    name: \"SQLite\",\n    mime: \"text/x-sqlite\",\n    mode: \"sql\"\n  }, {\n    name: \"Squirrel\",\n    mime: \"text/x-squirrel\",\n    mode: \"clike\",\n    ext: [\"nut\"]\n  }, {\n    name: \"Stylus\",\n    mime: \"text/x-styl\",\n    mode: \"stylus\",\n    ext: [\"styl\"]\n  }, {\n    name: \"Swift\",\n    mime: \"text/x-swift\",\n    mode: \"swift\",\n    ext: [\"swift\"]\n  }, {\n    name: \"sTeX\",\n    mime: \"text/x-stex\",\n    mode: \"stex\"\n  }, {\n    name: \"LaTeX\",\n    mime: \"text/x-latex\",\n    mode: \"stex\",\n    ext: [\"text\", \"ltx\", \"tex\"],\n    alias: [\"tex\"]\n  }, {\n    name: \"SystemVerilog\",\n    mime: \"text/x-systemverilog\",\n    mode: \"verilog\",\n    ext: [\"v\", \"sv\", \"svh\"]\n  }, {\n    name: \"Tcl\",\n    mime: \"text/x-tcl\",\n    mode: \"tcl\",\n    ext: [\"tcl\"]\n  }, {\n    name: \"Textile\",\n    mime: \"text/x-textile\",\n    mode: \"textile\",\n    ext: [\"textile\"]\n  }, {\n    name: \"TiddlyWiki\",\n    mime: \"text/x-tiddlywiki\",\n    mode: \"tiddlywiki\"\n  }, {\n    name: \"Tiki wiki\",\n    mime: \"text/tiki\",\n    mode: \"tiki\"\n  }, {\n    name: \"TOML\",\n    mime: \"text/x-toml\",\n    mode: \"toml\",\n    ext: [\"toml\"]\n  }, {\n    name: \"Tornado\",\n    mime: \"text/x-tornado\",\n    mode: \"tornado\"\n  }, {\n    name: \"troff\",\n    mime: \"text/troff\",\n    mode: \"troff\",\n    ext: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n  }, {\n    name: \"TTCN\",\n    mime: \"text/x-ttcn\",\n    mode: \"ttcn\",\n    ext: [\"ttcn\", \"ttcn3\", \"ttcnpp\"]\n  }, {\n    name: \"TTCN_CFG\",\n    mime: \"text/x-ttcn-cfg\",\n    mode: \"ttcn-cfg\",\n    ext: [\"cfg\"]\n  }, {\n    name: \"Turtle\",\n    mime: \"text/turtle\",\n    mode: \"turtle\",\n    ext: [\"ttl\"]\n  }, {\n    name: \"TypeScript\",\n    mime: \"application/typescript\",\n    mode: \"javascript\",\n    ext: [\"ts\"],\n    alias: [\"ts\"]\n  }, {\n    name: \"TypeScript-JSX\",\n    mime: \"text/typescript-jsx\",\n    mode: \"jsx\",\n    ext: [\"tsx\"],\n    alias: [\"tsx\"]\n  }, {\n    name: \"Twig\",\n    mime: \"text/x-twig\",\n    mode: \"twig\"\n  }, {\n    name: \"Web IDL\",\n    mime: \"text/x-webidl\",\n    mode: \"webidl\",\n    ext: [\"webidl\"]\n  }, {\n    name: \"VB.NET\",\n    mime: \"text/x-vb\",\n    mode: \"vb\",\n    ext: [\"vb\"]\n  }, {\n    name: \"VBScript\",\n    mime: \"text/vbscript\",\n    mode: \"vbscript\",\n    ext: [\"vbs\"]\n  }, {\n    name: \"Velocity\",\n    mime: \"text/velocity\",\n    mode: \"velocity\",\n    ext: [\"vtl\"]\n  }, {\n    name: \"Verilog\",\n    mime: \"text/x-verilog\",\n    mode: \"verilog\",\n    ext: [\"v\"]\n  }, {\n    name: \"VHDL\",\n    mime: \"text/x-vhdl\",\n    mode: \"vhdl\",\n    ext: [\"vhd\", \"vhdl\"]\n  }, {\n    name: \"Vue.js Component\",\n    mimes: [\"script/x-vue\", \"text/x-vue\"],\n    mode: \"vue\",\n    ext: [\"vue\"]\n  }, {\n    name: \"XML\",\n    mimes: [\"application/xml\", \"text/xml\"],\n    mode: \"xml\",\n    ext: [\"xml\", \"xsl\", \"xsd\", \"svg\"],\n    alias: [\"rss\", \"wsdl\", \"xsd\"]\n  }, {\n    name: \"XQuery\",\n    mime: \"application/xquery\",\n    mode: \"xquery\",\n    ext: [\"xy\", \"xquery\"]\n  }, {\n    name: \"Yacas\",\n    mime: \"text/x-yacas\",\n    mode: \"yacas\",\n    ext: [\"ys\"]\n  }, {\n    name: \"YAML\",\n    mimes: [\"text/x-yaml\", \"text/yaml\"],\n    mode: \"yaml\",\n    ext: [\"yaml\", \"yml\"],\n    alias: [\"yml\"]\n  }, {\n    name: \"Z80\",\n    mime: \"text/x-z80\",\n    mode: \"z80\",\n    ext: [\"z80\"]\n  }, {\n    name: \"mscgen\",\n    mime: \"text/x-mscgen\",\n    mode: \"mscgen\",\n    ext: [\"mscgen\", \"mscin\", \"msc\"]\n  }, {\n    name: \"xu\",\n    mime: \"text/x-xu\",\n    mode: \"mscgen\",\n    ext: [\"xu\"]\n  }, {\n    name: \"msgenny\",\n    mime: \"text/x-msgenny\",\n    mode: \"mscgen\",\n    ext: [\"msgenny\"]\n  }, {\n    name: \"WebAssembly\",\n    mime: \"text/webassembly\",\n    mode: \"wast\",\n    ext: [\"wat\", \"wast\"]\n  }]; // Ensure all modes have a mime property for backwards compatibility\n\n  for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n    var info = CodeMirror.modeInfo[i];\n    if (info.mimes) info.mime = info.mimes[0];\n  }\n\n  CodeMirror.findModeByMIME = function (mime) {\n    mime = mime.toLowerCase();\n\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.mime == mime) return info;\n      if (info.mimes) for (var j = 0; j < info.mimes.length; j++) {\n        if (info.mimes[j] == mime) return info;\n      }\n    }\n\n    if (/\\+xml$/.test(mime)) return CodeMirror.findModeByMIME(\"application/xml\");\n    if (/\\+json$/.test(mime)) return CodeMirror.findModeByMIME(\"application/json\");\n  };\n\n  CodeMirror.findModeByExtension = function (ext) {\n    ext = ext.toLowerCase();\n\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.ext) for (var j = 0; j < info.ext.length; j++) {\n        if (info.ext[j] == ext) return info;\n      }\n    }\n  };\n\n  CodeMirror.findModeByFileName = function (filename) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.file && info.file.test(filename)) return info;\n    }\n\n    var dot = filename.lastIndexOf(\".\");\n    var ext = dot > -1 && filename.substring(dot + 1, filename.length);\n    if (ext) return CodeMirror.findModeByExtension(ext);\n  };\n\n  CodeMirror.findModeByName = function (name) {\n    name = name.toLowerCase();\n\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.name.toLowerCase() == name) return info;\n      if (info.alias) for (var j = 0; j < info.alias.length; j++) {\n        if (info.alias[j].toLowerCase() == name) return info;\n      }\n    }\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/vendor/libs/codemirror/mode/meta.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/vendor/libs/codemirror/mode/meta.js");
/******/ 	
/******/ })()
;