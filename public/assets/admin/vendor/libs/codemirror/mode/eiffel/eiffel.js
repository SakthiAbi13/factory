/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/libs/codemirror/mode/eiffel/eiffel.js":
/*!***********************************************************************!*\
  !*** ./resources/assets/vendor/libs/codemirror/mode/eiffel/eiffel.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (( false ? 0 : _typeof(exports)) == \"object\" && ( false ? 0 : _typeof(module)) == \"object\") // CommonJS\n    mod(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));else if (true) // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else // Plain browser env\n    {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"eiffel\", function () {\n    function wordObj(words) {\n      var o = {};\n\n      for (var i = 0, e = words.length; i < e; ++i) {\n        o[words[i]] = true;\n      }\n\n      return o;\n    }\n\n    var keywords = wordObj(['note', 'across', 'when', 'variant', 'until', 'unique', 'undefine', 'then', 'strip', 'select', 'retry', 'rescue', 'require', 'rename', 'reference', 'redefine', 'prefix', 'once', 'old', 'obsolete', 'loop', 'local', 'like', 'is', 'inspect', 'infix', 'include', 'if', 'frozen', 'from', 'external', 'export', 'ensure', 'end', 'elseif', 'else', 'do', 'creation', 'create', 'check', 'alias', 'agent', 'separate', 'invariant', 'inherit', 'indexing', 'feature', 'expanded', 'deferred', 'class', 'Void', 'True', 'Result', 'Precursor', 'False', 'Current', 'create', 'attached', 'detachable', 'as', 'and', 'implies', 'not', 'or']);\n    var operators = wordObj([\":=\", \"and then\", \"and\", \"or\", \"<<\", \">>\"]);\n\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) return null;\n      var ch = stream.next();\n\n      if (ch == '\"' || ch == \"'\") {\n        return chain(readQuoted(ch, \"string\"), stream, state);\n      } else if (ch == \"-\" && stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \":\" && stream.eat(\"=\")) {\n        return \"operator\";\n      } else if (/[0-9]/.test(ch)) {\n        stream.eatWhile(/[xXbBCc0-9\\.]/);\n        stream.eat(/[\\?\\!]/);\n        return \"ident\";\n      } else if (/[a-zA-Z_0-9]/.test(ch)) {\n        stream.eatWhile(/[a-zA-Z_0-9]/);\n        stream.eat(/[\\?\\!]/);\n        return \"ident\";\n      } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n        stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n\n    function readQuoted(quote, style, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n\n          escaped = !escaped && ch == \"%\";\n        }\n\n        return style;\n      };\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: [tokenBase]\n        };\n      },\n      token: function token(stream, state) {\n        var style = state.tokenize[state.tokenize.length - 1](stream, state);\n\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : operators.propertyIsEnumerable(stream.current()) ? \"operator\" : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\" : /^0[bB][0-1]+$/g.test(word) ? \"number\" : /^0[cC][0-7]+$/g.test(word) ? \"number\" : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\" : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\" : /^[0-9]+$/g.test(word) ? \"number\" : \"variable\";\n        }\n\n        return style;\n      },\n      lineComment: \"--\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/vendor/libs/codemirror/mode/eiffel/eiffel.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/vendor/libs/codemirror/mode/eiffel/eiffel.js");
/******/ 	
/******/ })()
;