/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/libs/codemirror/mode/mbox/mbox.js":
/*!*******************************************************************!*\
  !*** ./resources/assets/vendor/libs/codemirror/mode/mbox/mbox.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (( false ? 0 : _typeof(exports)) == \"object\" && ( false ? 0 : _typeof(module)) == \"object\") // CommonJS\n    mod(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));else if (true) // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else // Plain browser env\n    {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var rfc2822 = [\"From\", \"Sender\", \"Reply-To\", \"To\", \"Cc\", \"Bcc\", \"Message-ID\", \"In-Reply-To\", \"References\", \"Resent-From\", \"Resent-Sender\", \"Resent-To\", \"Resent-Cc\", \"Resent-Bcc\", \"Resent-Message-ID\", \"Return-Path\", \"Received\"];\n  var rfc2822NoEmail = [\"Date\", \"Subject\", \"Comments\", \"Keywords\", \"Resent-Date\"];\n  CodeMirror.registerHelper(\"hintWords\", \"mbox\", rfc2822.concat(rfc2822NoEmail));\n  var whitespace = /^[ \\t]/;\n  var separator = /^From /; // See RFC 4155\n\n  var rfc2822Header = new RegExp(\"^(\" + rfc2822.join(\"|\") + \"): \");\n  var rfc2822HeaderNoEmail = new RegExp(\"^(\" + rfc2822NoEmail.join(\"|\") + \"): \");\n  var header = /^[^:]+:/; // Optional fields defined in RFC 2822\n\n  var email = /^[^ ]+@[^ ]+/;\n  var untilEmail = /^.*?(?=[^ ]+?@[^ ]+)/;\n  var bracketedEmail = /^<.*?>/;\n  var untilBracketedEmail = /^.*?(?=<.*>)/;\n\n  function styleForHeader(header) {\n    if (header === \"Subject\") return \"header\";\n    return \"string\";\n  }\n\n  function readToken(stream, state) {\n    if (stream.sol()) {\n      // From last line\n      state.inSeparator = false;\n\n      if (state.inHeader && stream.match(whitespace)) {\n        // Header folding\n        return null;\n      } else {\n        state.inHeader = false;\n        state.header = null;\n      }\n\n      if (stream.match(separator)) {\n        state.inHeaders = true;\n        state.inSeparator = true;\n        return \"atom\";\n      }\n\n      var match;\n      var emailPermitted = false;\n\n      if ((match = stream.match(rfc2822HeaderNoEmail)) || (emailPermitted = true) && (match = stream.match(rfc2822Header))) {\n        state.inHeaders = true;\n        state.inHeader = true;\n        state.emailPermitted = emailPermitted;\n        state.header = match[1];\n        return \"atom\";\n      } // Use vim's heuristics: recognize custom headers only if the line is in a\n      // block of legitimate headers.\n\n\n      if (state.inHeaders && (match = stream.match(header))) {\n        state.inHeader = true;\n        state.emailPermitted = true;\n        state.header = match[1];\n        return \"atom\";\n      }\n\n      state.inHeaders = false;\n      stream.skipToEnd();\n      return null;\n    }\n\n    if (state.inSeparator) {\n      if (stream.match(email)) return \"link\";\n      if (stream.match(untilEmail)) return \"atom\";\n      stream.skipToEnd();\n      return \"atom\";\n    }\n\n    if (state.inHeader) {\n      var style = styleForHeader(state.header);\n\n      if (state.emailPermitted) {\n        if (stream.match(bracketedEmail)) return style + \" link\";\n        if (stream.match(untilBracketedEmail)) return style;\n      }\n\n      stream.skipToEnd();\n      return style;\n    }\n\n    stream.skipToEnd();\n    return null;\n  }\n\n  ;\n  CodeMirror.defineMode(\"mbox\", function () {\n    return {\n      startState: function startState() {\n        return {\n          // Is in a mbox separator\n          inSeparator: false,\n          // Is in a mail header\n          inHeader: false,\n          // If bracketed email is permitted. Only applicable when inHeader\n          emailPermitted: false,\n          // Name of current header\n          header: null,\n          // Is in a region of mail headers\n          inHeaders: false\n        };\n      },\n      token: readToken,\n      blankLine: function blankLine(state) {\n        state.inHeaders = state.inSeparator = state.inHeader = false;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"application/mbox\", \"mbox\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/vendor/libs/codemirror/mode/mbox/mbox.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/vendor/libs/codemirror/mode/mbox/mbox.js");
/******/ 	
/******/ })()
;