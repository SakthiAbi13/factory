/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/libs/codemirror/mode/yaml/yaml.js":
/*!*******************************************************************!*\
  !*** ./resources/assets/vendor/libs/codemirror/mode/yaml/yaml.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (( false ? 0 : _typeof(exports)) == \"object\" && ( false ? 0 : _typeof(module)) == \"object\") // CommonJS\n    mod(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));else if (true) // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else // Plain browser env\n    {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"yaml\", function () {\n    var cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\n    var keywordRegex = new RegExp(\"\\\\b((\" + cons.join(\")|(\") + \"))$\", 'i');\n    return {\n      token: function token(stream, state) {\n        var ch = stream.peek();\n        var esc = state.escaped;\n        state.escaped = false;\n        /* comments */\n\n        if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/)) return \"string\";\n\n        if (state.literal && stream.indentation() > state.keyCol) {\n          stream.skipToEnd();\n          return \"string\";\n        } else if (state.literal) {\n          state.literal = false;\n        }\n\n        if (stream.sol()) {\n          state.keyCol = 0;\n          state.pair = false;\n          state.pairStart = false;\n          /* document start */\n\n          if (stream.match('---')) {\n            return \"def\";\n          }\n          /* document end */\n\n\n          if (stream.match('...')) {\n            return \"def\";\n          }\n          /* array list item */\n\n\n          if (stream.match(/\\s*-\\s+/)) {\n            return 'meta';\n          }\n        }\n        /* inline pairs/lists */\n\n\n        if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n          if (ch == '{') state.inlinePairs++;else if (ch == '}') state.inlinePairs--;else if (ch == '[') state.inlineList++;else state.inlineList--;\n          return 'meta';\n        }\n        /* list separator */\n\n\n        if (state.inlineList > 0 && !esc && ch == ',') {\n          stream.next();\n          return 'meta';\n        }\n        /* pairs separator */\n\n\n        if (state.inlinePairs > 0 && !esc && ch == ',') {\n          state.keyCol = 0;\n          state.pair = false;\n          state.pairStart = false;\n          stream.next();\n          return 'meta';\n        }\n        /* start of value of a pair */\n\n\n        if (state.pairStart) {\n          /* block literals */\n          if (stream.match(/^\\s*(\\||\\>)\\s*/)) {\n            state.literal = true;\n            return 'meta';\n          }\n\n          ;\n          /* references */\n\n          if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) {\n            return 'variable-2';\n          }\n          /* numbers */\n\n\n          if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) {\n            return 'number';\n          }\n\n          if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) {\n            return 'number';\n          }\n          /* keywords */\n\n\n          if (stream.match(keywordRegex)) {\n            return 'keyword';\n          }\n        }\n        /* pairs (associative arrays) -> key */\n\n\n        if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n          state.pair = true;\n          state.keyCol = stream.indentation();\n          return \"atom\";\n        }\n\n        if (state.pair && stream.match(/^:\\s*/)) {\n          state.pairStart = true;\n          return 'meta';\n        }\n        /* nothing found, continue */\n\n\n        state.pairStart = false;\n        state.escaped = ch == '\\\\';\n        stream.next();\n        return null;\n      },\n      startState: function startState() {\n        return {\n          pair: false,\n          pairStart: false,\n          keyCol: 0,\n          inlinePairs: 0,\n          inlineList: 0,\n          literal: false,\n          escaped: false\n        };\n      },\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-yaml\", \"yaml\");\n  CodeMirror.defineMIME(\"text/yaml\", \"yaml\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/vendor/libs/codemirror/mode/yaml/yaml.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/vendor/libs/codemirror/mode/yaml/yaml.js");
/******/ 	
/******/ })()
;