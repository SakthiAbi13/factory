/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/libs/codemirror/mode/ntriples/ntriples.js":
/*!***************************************************************************!*\
  !*** ./resources/assets/vendor/libs/codemirror/mode/ntriples/ntriples.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**********************************************************\n* This script provides syntax highlighting support for\n* the N-Triples format.\n* N-Triples format specification:\n*     https://www.w3.org/TR/n-triples/\n***********************************************************/\n\n/*\n    The following expression defines the defined ASF grammar transitions.\n\n    pre_subject ->\n        {\n        ( writing_subject_uri | writing_bnode_uri )\n            -> pre_predicate\n                -> writing_predicate_uri\n                    -> pre_object\n                        -> writing_object_uri | writing_object_bnode |\n                          (\n                            writing_object_literal\n                                -> writing_literal_lang | writing_literal_type\n                          )\n                            -> post_object\n                                -> BEGIN\n         } otherwise {\n             -> ERROR\n         }\n*/\n(function (mod) {\n  if (( false ? 0 : _typeof(exports)) == \"object\" && ( false ? 0 : _typeof(module)) == \"object\") // CommonJS\n    mod(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));else if (true) // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../lib/codemirror'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else // Plain browser env\n    {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ntriples\", function () {\n    var Location = {\n      PRE_SUBJECT: 0,\n      WRITING_SUB_URI: 1,\n      WRITING_BNODE_URI: 2,\n      PRE_PRED: 3,\n      WRITING_PRED_URI: 4,\n      PRE_OBJ: 5,\n      WRITING_OBJ_URI: 6,\n      WRITING_OBJ_BNODE: 7,\n      WRITING_OBJ_LITERAL: 8,\n      WRITING_LIT_LANG: 9,\n      WRITING_LIT_TYPE: 10,\n      POST_OBJ: 11,\n      ERROR: 12\n    };\n\n    function transitState(currState, c) {\n      var currLocation = currState.location;\n      var ret; // Opening.\n\n      if (currLocation == Location.PRE_SUBJECT && c == '<') ret = Location.WRITING_SUB_URI;else if (currLocation == Location.PRE_SUBJECT && c == '_') ret = Location.WRITING_BNODE_URI;else if (currLocation == Location.PRE_PRED && c == '<') ret = Location.WRITING_PRED_URI;else if (currLocation == Location.PRE_OBJ && c == '<') ret = Location.WRITING_OBJ_URI;else if (currLocation == Location.PRE_OBJ && c == '_') ret = Location.WRITING_OBJ_BNODE;else if (currLocation == Location.PRE_OBJ && c == '\"') ret = Location.WRITING_OBJ_LITERAL; // Closing.\n      else if (currLocation == Location.WRITING_SUB_URI && c == '>') ret = Location.PRE_PRED;else if (currLocation == Location.WRITING_BNODE_URI && c == ' ') ret = Location.PRE_PRED;else if (currLocation == Location.WRITING_PRED_URI && c == '>') ret = Location.PRE_OBJ;else if (currLocation == Location.WRITING_OBJ_URI && c == '>') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_OBJ_BNODE && c == ' ') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '\"') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_LIT_LANG && c == ' ') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_LIT_TYPE && c == '>') ret = Location.POST_OBJ; // Closing typed and language literal.\n      else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '@') ret = Location.WRITING_LIT_LANG;else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '^') ret = Location.WRITING_LIT_TYPE; // Spaces.\n      else if (c == ' ' && (currLocation == Location.PRE_SUBJECT || currLocation == Location.PRE_PRED || currLocation == Location.PRE_OBJ || currLocation == Location.POST_OBJ)) ret = currLocation; // Reset.\n      else if (currLocation == Location.POST_OBJ && c == '.') ret = Location.PRE_SUBJECT; // Error\n      else ret = Location.ERROR;\n      currState.location = ret;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          location: Location.PRE_SUBJECT,\n          uris: [],\n          anchors: [],\n          bnodes: [],\n          langs: [],\n          types: []\n        };\n      },\n      token: function token(stream, state) {\n        var ch = stream.next();\n\n        if (ch == '<') {\n          transitState(state, ch);\n          var parsedURI = '';\n          stream.eatWhile(function (c) {\n            if (c != '#' && c != '>') {\n              parsedURI += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.uris.push(parsedURI);\n          if (stream.match('#', false)) return 'variable';\n          stream.next();\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == '#') {\n          var parsedAnchor = '';\n          stream.eatWhile(function (c) {\n            if (c != '>' && c != ' ') {\n              parsedAnchor += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.anchors.push(parsedAnchor);\n          return 'variable-2';\n        }\n\n        if (ch == '>') {\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == '_') {\n          transitState(state, ch);\n          var parsedBNode = '';\n          stream.eatWhile(function (c) {\n            if (c != ' ') {\n              parsedBNode += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.bnodes.push(parsedBNode);\n          stream.next();\n          transitState(state, ' ');\n          return 'builtin';\n        }\n\n        if (ch == '\"') {\n          transitState(state, ch);\n          stream.eatWhile(function (c) {\n            return c != '\"';\n          });\n          stream.next();\n\n          if (stream.peek() != '@' && stream.peek() != '^') {\n            transitState(state, '\"');\n          }\n\n          return 'string';\n        }\n\n        if (ch == '@') {\n          transitState(state, '@');\n          var parsedLang = '';\n          stream.eatWhile(function (c) {\n            if (c != ' ') {\n              parsedLang += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.langs.push(parsedLang);\n          stream.next();\n          transitState(state, ' ');\n          return 'string-2';\n        }\n\n        if (ch == '^') {\n          stream.next();\n          transitState(state, '^');\n          var parsedType = '';\n          stream.eatWhile(function (c) {\n            if (c != '>') {\n              parsedType += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.types.push(parsedType);\n          stream.next();\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == ' ') {\n          transitState(state, ch);\n        }\n\n        if (ch == '.') {\n          transitState(state, ch);\n        }\n      }\n    };\n  }); // define the registered Media Type for n-triples:\n  // https://www.w3.org/TR/n-triples/#n-triples-mediatype\n\n  CodeMirror.defineMIME(\"application/n-triples\", \"ntriples\"); // N-Quads is based on the N-Triples format (so same highlighting works)\n  // https://www.w3.org/TR/n-quads/\n\n  CodeMirror.defineMIME(\"application/n-quads\", \"ntriples\"); // previously used, though technically incorrect media type for n-triples\n\n  CodeMirror.defineMIME(\"text/n-triples\", \"ntriples\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/vendor/libs/codemirror/mode/ntriples/ntriples.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/vendor/libs/codemirror/mode/ntriples/ntriples.js");
/******/ 	
/******/ })()
;