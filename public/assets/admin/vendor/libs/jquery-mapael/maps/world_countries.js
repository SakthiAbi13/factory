/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/libs/jquery-mapael/maps/world_countries.js":
/*!****************************************************************************!*\
  !*** ./resources/assets/vendor/libs/jquery-mapael/maps/world_countries.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/*!\n *\n * Jquery Mapael - Dynamic maps jQuery plugin (based on raphael.js)\n * Requires jQuery and Mapael >=2.0.0\n *\n * Map of World countries\n *\n * Equirectangular projection\n * Uses the ISO 3166-1 alpha-2 for country names (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n *\n * @author Vincent Brout√©\n * @source https://commons.wikimedia.org/wiki/File:BlankMap-World6-Equirectangular.svg\n *\n * @deprecated : this map will be definitely moved to 'mapael-maps' repository starting from the next major release (3.0.0).\n * You can use instead https://github.com/neveldo/mapael-maps/blob/master/world/world_countries.js\n */\n(function (factory) {\n  if (( false ? 0 : _typeof(exports)) === 'object') {\n    // CommonJS\n    module.exports = factory(__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"), __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'jquery-mapael'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));\n  } else if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"), Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'mapael'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function ($, Mapael) {\n  \"use strict\";\n\n  $.extend(true, Mapael, {\n    maps: {\n      world_countries: {\n        width: 999.29852,\n        height: 392.03476,\n        getCoords: function getCoords(lat, lon) {\n          var xfactor = 2.775076875916;\n          var xoffset = 471.505926315;\n          var x = lon * xfactor + xoffset;\n          var yfactor = -2.8112860731578;\n          var yoffset = 235.89691962022;\n          var y = lat * yfactor + yoffset;\n          return {\n            'x': x,\n            'y': y\n          };\n        },\n        'elems': {\n          \"PE\": \"m 246.37,248.26 c 0.32,-1.79 4.23,-4.35 2.73,-1.46 -1.45,2.09 2.59,0.39 3.11,2.75 2.72,-1.13 1.47,-5.5 4.96,-5.95 3.11,-0.83 7.69,-4.81 5.11,-7.43 2.35,-1.19 4.43,3.08 6.14,4.56 0.7,2.08 3.04,2.21 4.97,1.17 2.11,-0.15 5.75,1.18 2.69,3.69 -0.51,0.71 3.29,2.56 0.76,1.93 -3.16,0.08 -7.44,1.58 -7.92,5.32 -0.06,2.05 -3.42,3.58 -1.21,5.52 0.76,1.37 2.13,3 1.77,3.78 2.26,0.16 3.53,3.49 5.91,0.61 2.26,-1.86 -1.32,6.12 2.9,3.61 2.5,1.32 3.37,4.79 2.23,7.29 0.95,2.52 -2.79,6.04 0.3,7.72 -0.57,1.85 -2.55,3 -2.55,4.98 -3.44,2.21 -5.57,-4.41 -9.39,-4.56 -3.34,-1.31 -6.28,-3.43 -8.43,-6.26 0.32,-1.93 -1.53,-4.59 -2.66,-7.02 -2.53,-2.81 -3.15,-7.33 -5.63,-10.49 -0.47,-3 -4.42,-4.05 -5.21,-5.89 1.88,0.13 -1.01,-3.15 -0.55,-3.87 z\",\n          \"BF\": \"m 456.58,206.27 c 1.04,-2.27 -0.4,-4.54 2.65,-4.79 0.7,-1.85 0.88,-4.37 3.11,-3.1 0.83,-0.73 0.44,-1.27 1.59,-1.56 1.43,-1.81 4.2,-2.03 6.48,-3.6 3.23,-0.6 1.57,4 4.41,4.53 1.15,0.24 -1.42,0.91 0.87,2 1.62,0.34 2.62,-0.07 2.39,1.8 0.95,2.4 -3.19,1.99 -4.47,3.19 -3.06,-0.32 -7.13,-0.27 -9.66,0.43 -0.06,1.39 1.22,5.92 -0.89,2.56 -2.2,-0.12 -4.4,1.93 -5.53,-1.03 -0.26,-0.14 -0.88,0.05 -0.95,-0.42 z\",\n          \"FR\": \"m 320.44,229.09 c 3.5,-2.22 -0.96,-5.61 1.06,-8.23 1.75,-3.18 5.63,1.18 6.32,2.34 0.23,-1.32 1.46,1.48 -0.36,2.69 -1.07,2.79 -2.6,4.03 -5.24,3.39 -0.49,0.72 -1.29,0.16 -1.78,-0.18 z m -17.32,-33.96 c -1.44,-0.36 -0.63,-2.45 0.08,-0.26 z m 192.61,-78.74 c 1.65,-1.47 3.13,-2.32 2.66,0.76 -1.27,4.32 -2.55,0.43 -2.66,-0.76 z m -36.96,-15.9 c 2.7,-0.08 -1.08,-0.93 1.51,-0.72 -4.33,-0.12 3.07,-2.66 4.28,-0.7 1.46,-0.41 2.78,0.1 3.08,-0.51 -0.68,-1.77 -1.57,-3.78 0.78,-2.26 1.39,1.11 5.71,0.69 4,-0.37 2.05,-0.92 4.59,-0.73 4.1,-3.44 2.64,-1.5 4.35,1.69 6.91,1.76 -0.28,2.27 2.31,-0.77 2.15,1.29 2.43,0.75 4.64,1.76 7.05,1.89 3.81,0.08 -0.46,2.1 0.15,4.48 -2.03,-0.09 -2.17,1.61 -4.01,3.03 -0.88,1.88 2.46,-1.44 2.47,1.52 -0.67,0.65 1.58,2.16 -0.98,2.37 1.7,0.78 0.11,3.19 2.93,2.66 -1.77,2.7 -4.67,3.56 -7.34,2.1 0.36,-0.21 -3.5,-0.83 -5.33,0.71 0.58,2.4 -1.63,2.53 -3.83,1.72 -1.61,-1.41 -4.18,-10e-4 -6.48,-0.95 -2.3,-0.72 -3.81,-0.89 -2.1,-3.18 0.98,-2.31 -0.1,-1.94 0.71,-4.33 1.35,0.73 2.04,2.86 0.92,0.27 -2.12,-1.23 -0.46,-0.44 -0.93,-2.5 -1.83,0.71 -4.34,-3.53 -1.71,-2.49 -2.59,-0.07 -1.33,-0.92 -3.27,-0.96 1.23,-0.3 -1.33,0.1 -0.81,-0.41 -0.69,-0.31 -3.16,-0.22 -4.24,-0.98 z\",\n          \"LY\": \"m 497.92,151.14 c 1.22,-1.02 3.3,-2.31 2.26,-4.45 1.64,-1.36 4.45,-1.74 3.66,-4.37 2.93,1.82 6.41,0.15 9.36,2.05 2,0.86 2.23,4.49 5.53,3.54 3.2,0.07 6.84,5.03 9.01,0.5 -2.33,-4.25 4.21,-6.37 7.31,-4.84 1.14,2.42 5.27,1.09 6.57,3.1 -1.75,2.8 -0.4,6.49 -0.36,9.96 -0.07,7.58 0.05,15.16 -0.06,22.74 -1.18,0.21 -3.56,-0.76 -2.74,1.4 -7.23,-3.84 -14.52,-7.62 -22,-10.94 -2.87,0.55 -5.22,3.4 -7.74,0.43 -3.87,0.51 -4.52,-4.36 -8.24,-3.67 -0.09,-2.15 -4.24,-4.5 -1.19,-6.01 -0.81,-3.08 1.09,-6.77 -1.38,-9.44 z\",\n          \"BY\": \"m 536.15,88.53 c 2.51,-0.84 2.42,-2.61 0.94,-4.65 2.05,0.38 5.52,-0.77 6.14,-1 -1.65,-1.71 4.41,-2.24 2.21,-3.4 2.47,-1.46 5.19,-2 8.01,-1.21 0.87,0.9 5.84,-0.04 4.08,3.31 1.82,2.07 3.09,2.51 5.12,3.65 -0.7,1.84 -5.16,-0.46 -3.09,2.59 1.51,1.91 -4.05,1.08 -2.99,3.57 -2.54,-1.13 -4.21,-0.29 -6.38,-0.94 -2.85,0.32 -5.9,-1.52 -9.1,-0.89 -1.6,-0.22 -4.73,2.54 -3.66,-0.47 -0.38,-0.29 -0.92,-0.21 -1.27,-0.56 z\",\n          \"PK\": \"m 640.67,151.64 c 3.95,1.79 8.26,1.07 12.34,0.72 4.22,1.01 1.66,-5.15 5.25,-4.55 2.06,0.2 0.74,-1.54 3.23,-1.54 2.86,1.63 2.24,-2.57 3.79,-3.75 3.59,0.37 -1.34,-3.47 1.89,-2.43 2.95,0.23 1.1,-2.43 3.35,-3.6 -0.01,-1.31 -2.18,-3.16 0.77,-3.47 2.85,-1.65 6.81,-1.33 9.59,-1.23 2.13,0.39 1.58,3.56 3.46,3.2 1.26,1.55 5.23,0.15 1.53,1.71 -1.9,2.5 -5.73,1.36 -8.5,1.33 -1.73,1.51 1.24,1.92 0.04,3.16 -1.34,2.56 5.7,3.16 2.32,4.38 -1.97,1.16 0.04,3.18 -2.52,4.09 -1.14,1.82 -3.07,3.92 -4.92,5.76 -1.17,3.02 -4.19,1.45 -5.74,1.86 -1.69,1.44 -2.62,3.46 0.03,4.04 -0.74,2.43 3,2.59 2.19,5.35 -0.7,0.83 -4.08,0.91 -6.22,0.54 -1.11,2.01 -2.29,1.6 -3.54,0.89 -0.58,-0.52 -0.41,-2.6 -2.23,-2.62 0.82,-1.92 -2.84,-2.17 -0.57,-1.34 -3.12,0.1 -5.6,0.7 -7.75,0.13 -1.6,0.26 -4.51,1.16 -5.62,0.13 -0.69,-4.03 4.36,-2.41 4.62,-5.27 -2.66,0.34 -0.14,-4.03 -3.41,-3.72 -1.62,-0.75 -1.86,-2.85 -3.39,-3.79 z\",\n          \"ID\": \"m 844.1,252.59 c 0.28,1.08 0.13,-2.98 1.43,-0.99 0.85,2.54 -1.43,2.01 -1.43,0.99 z m -70.2,-19.41 c 0.55,-1.5 1.03,-0.93 0.47,-1.62 1.7,-4.63 2.41,3.7 5.92,1.12 2.7,0.67 3.97,-2.97 6.65,-0.62 2.54,-0.19 3.17,-1.43 4.17,-3.33 0.53,-1.38 1.48,-3.37 2.12,-5.45 2.11,0.1 5.07,0.12 4.94,1.43 1.01,1.31 -2.48,-0.15 -0.69,1.65 -0.18,0.67 2.72,2.27 1.24,3.68 1.07,1.24 5.35,3.79 1.08,3.13 -1.78,-1.04 -2.61,3.94 -1.82,4.68 -0.99,0.36 -2.22,1.17 -2.39,1.26 -1.79,1.91 -0.28,1.88 -0.58,3.73 -1.09,0.57 -0.82,3.52 -4.02,4.03 -2.06,1.1 -1.24,-3.42 -2.78,-1.91 -1.62,1.17 -2.41,-2.34 -3.81,0.19 -1.82,-0.08 -2.62,0.99 -2.68,-1.63 -2.12,1.16 -2.49,0.45 -4.17,0.2 -0.82,-2.04 0.27,-5.83 -2.53,-5.61 1.04,-0.68 -1.46,-1.32 -0.21,-2.52 -0.6,-0.57 -1.28,-1.56 -0.93,-2.41 z m -3.25,9.64 c -1.93,3.7 4.6,0.57 0,0 z m -6.54,-2.36 c -1.17,1.33 2.05,1.13 2.02,3.17 2.09,2.06 2.52,-1.43 0.47,-1.37 -0.4,-3.22 -1.04,-2.02 -2.49,-1.8 z m -6.41,-7.05 c -2.5,-2.43 -1.84,1.04 0,0 z m -14.87,0.47 c 2.59,-1.55 -4.34,-4.6 0,0 z m -0.58,-13.04 c -2.16,1.1 -4.7,-1.74 -6.38,-0.52 0.8,3.59 5,4.51 6.74,7.4 0.7,2.45 4.36,2.68 4.04,6.05 1.16,2.15 3.68,3.94 4.67,6.59 1.11,3.63 4.3,6.14 7.08,8.63 1.57,0.47 4.02,4.81 3.73,2.14 1.72,1.03 1.63,-0.27 3.17,0.77 0.5,-2.69 -0.31,-5.3 0.77,-7.65 -0.83,-1.61 -3.03,-3.22 -4.09,-1.06 1.48,-1.31 -0.14,-3.14 -1.22,-4.66 -2.88,-0.05 -1.81,-2.35 -2,-2.39 2.65,-1.16 -1.22,-2.63 -2.39,-1.04 -0.85,0.26 3.05,-1.4 0.22,-1.54 -1.79,-1.19 -3.08,-3.65 -5.05,-4.24 0.97,2.75 -2.27,-2.24 -2.25,-1.11 -0.91,-2.81 -5,-3.14 -5.7,-6.04 -0.29,-0.58 -0.86,-0.92 -1.34,-1.33 z m 94.76,34.81 c -2.37,1.03 -0.94,4.18 0.01,0.75 -0.25,-0.4 0.73,-0.48 -0.01,-0.75 z m -16.26,2.53 c 1.92,0.08 3.88,-1.52 0.8,-0.88 -0.51,-0.19 -0.78,0.52 -0.8,0.88 z m -3.62,0.33 c -1.7,1.62 3.67,0.44 0.84,0.12 l -0.42,-0.08 z m -2.98,0.4 c -1.36,2.21 2.94,-1.13 0.38,0.28 0.21,-0.23 -0.21,-0.46 -0.38,-0.28 z m -9.47,1.52 c 2.72,0.11 5.82,0.66 7.79,-1.08 1.07,-2.18 -0.65,1.4 -2.62,0.11 -1.61,0.69 -5.33,-2.08 -5.54,0.96 l 0.15,0.13 z m -2.95,2.04 c 1.18,0.19 5.35,3.62 4.82,0.86 -1.41,-1.2 -3.09,-1.98 -4.82,-0.86 z m -2.85,-1.73 c 1.18,-1.38 2.5,0.46 2.65,-0.56 2.04,-0.15 -0.51,-1.28 -0.71,-1.21 -0.94,0 -3.71,-1.15 -1.29,0.64 0.46,1.44 -4.5,-1.9 -3.7,1.37 0.95,0.64 2.05,-0.35 3.06,-0.24 z m -4.33,-1.99 c -1.7,1.09 -1.19,2.65 0.49,1.64 0.52,-0.83 0.94,-1.71 -0.49,-1.64 z m -5.16,-0.35 c 1.23,1.07 1.75,2.98 3.21,1.1 0.5,-2.05 -2.43,-0.3 -3.21,-1.1 z m -4.26,-3.37 c -2.23,2.03 6.23,-0.05 1.48,-0.02 -0.49,-0.01 -0.99,-0.1 -1.48,0.02 z m -17.24,-2.34 c -2.16,-1.59 -3.86,2.62 -3.51,2.14 3.4,-0.5 2.28,2.56 5.73,2.02 3.28,0.83 6.78,0.67 10.2,1.96 3.01,0.08 7.42,0.77 9.28,1.2 -0.36,-1.74 -0.25,-3.59 -2.97,-2.58 -2.68,-0.14 -1.7,-3.15 -4.88,-2.73 -1.48,-0.51 -2.83,-1.36 -3.81,0.5 -3.04,0.39 -4.71,-1.18 -6.93,-2.09 -1.3,-0.08 -1.96,-1.08 -3.1,-0.43 z m 46.68,11.07 c -0.68,2.23 3.93,-0.11 4.33,-1.86 0.55,-2.56 -2.33,0.27 -2.46,0.44 -1.17,-0.63 -1.28,0.52 -1.88,1.42 z m 19.83,-26.89 c 0.96,-0.2 -1.01,-1.41 0.79,-0.29 2.41,-1.1 -4.14,-0.71 -1.17,0.04 l 0.24,-0.12 z m -1.92,4.45 c 2.66,0.34 -0.48,-2.04 -0.41,-0.14 z m -0.02,4.1 c 2.13,1.84 3.14,0.23 1.08,-1.3 -2.01,-0.19 -6.73,-1.71 -6.8,1.46 0.13,-2.06 2.17,0.07 2.86,-0.49 1.1,0.73 2.05,-0.7 2.86,0.33 z m -6.51,-9.78 c -0.04,1.56 3.12,3.66 1.01,0.99 -2.27,-3.46 2.38,-1.26 1.92,-2.11 -3.14,-0.41 2.08,-3.57 -0.99,-3.05 -0.12,0.95 -3.06,2.86 -1.18,0.71 0.36,-1.5 0.16,-4.13 -1.02,-1.09 -0.89,1.52 0.52,2.99 0.25,4.55 z m -0.53,4.05 c -0.8,1.66 3.89,0.54 0.65,-0.16 h -0.31 z m 0.13,-3.16 c -1.86,0.54 2.01,2.75 0.39,0.39 l -0.11,-0.15 z m -2.29,9.9 c 4.74,-0.87 -3.2,-3.92 -1.39,-0.73 0.41,0.34 0.92,0.5 1.39,0.73 z m -6.26,-6.11 c -0.8,2.07 4.64,-0.11 1.11,0.16 l -0.62,-0.15 z m -3.27,-0.05 c 1.79,-0.81 -1.37,-2.18 -1.02,-0.14 1.05,-1.09 0.3,-0.5 1.02,0.14 z m -0.52,7.77 c -1.92,1.21 -1.02,5.26 0.11,2.25 -1.83,-0.61 1.19,-1.26 -0.11,-2.25 z m -1.48,2.9 c 1.73,-3.14 -1.78,-1.56 -0.22,-0.2 l 0.06,-0.18 z m -8.79,-0.75 c -0.46,2.31 4.29,1.43 2.53,-0.51 1.29,-2.09 -1.63,-7.27 2.21,-6.28 -0.53,1.72 -0.32,3.05 1.43,3.94 -1.14,1.89 1.48,2.61 1.8,0.87 2.98,0 1.1,-1.2 0.14,-2.61 1.21,-1.12 -1.82,-3.54 -2.58,-4.95 2.21,0.86 4.01,-3.08 5.78,-2.6 -0.09,-1.6 -2.38,-0.18 -1.96,-0.29 -2.28,0.21 -3.49,0.41 -5.06,1.85 -3,-0.9 -3.37,-6.82 0.98,-5.19 3.28,-1.16 7.69,2.35 9.98,-1.5 2.41,-2.9 -0.75,-1.66 -1.84,0.03 -3.07,0.67 -6.23,-0.21 -9.11,-1.01 -1.06,1.59 -3.12,1.29 -3.23,3.95 -0.71,-0.41 1.08,2.83 -0.42,2.18 -0.21,2.8 -2.89,4.96 -1.82,7.66 2.5,-1.68 2.02,3.47 1.17,4.47 z m -63.9,-21.23 c 1.46,-0.3 -3.53,-2.47 -0.65,-0.5 l 0.38,0.19 z m 96.92,9.51 c 1.18,-1.98 4.71,-1.91 6.93,-0.68 2.5,0.02 0.1,5.72 2,5.35 0.45,-1.2 1.5,4.18 3.35,1.35 1.75,-2.47 3.53,-3.07 5.68,-4.58 2.94,0.89 5.63,2.49 8.67,3.03 0.6,2.99 0.4,7.71 -0.01,11.23 0.48,1.8 0.85,6.39 -0.18,6.81 -1.4,-2.86 -3.85,-2.48 -5.38,-2.53 1.09,-1.45 -0.76,-2.94 0.76,-2.52 -1.89,-0.05 -1.63,-1.63 0.12,-0.65 -2.37,-0.6 -2.13,-3.71 -3.2,-4 -1.28,-1.43 -5.02,-2.77 -7.57,-3.05 -2.1,-0.01 -1.41,-1.84 -1.44,-1.56 -1.47,0.45 -3.78,-0.48 -2.6,-2.4 -0.46,-0.51 -1.7,5.09 -3.09,1.82 1.88,-1.26 -4.51,-3.14 -0.21,-2.72 2.01,-1.5 2.99,0.56 3.52,-1.18 0.19,-1.16 -4.95,0.93 -5.48,-1.23 0.65,-1.76 -2.77,-0.49 -2.4,-1.85 z m 17.69,20.64 c 1.89,1.91 6.05,-3.52 1.68,-2.47 -1.02,0.41 -1.3,1.56 -1.68,2.47 z m -5.92,-18.96 c 0.85,1.34 6.01,0.49 1.74,0.18 -0.58,-0.06 -1.16,-0.13 -1.74,-0.18 z\",\n          \"YE\": \"m 619.35,188.7 c -1.65,-1.63 -1.51,-5.17 -3.76,-6.5 -3.5,0.77 -7.67,0.07 -10.51,2.66 -1.04,1.42 -2.24,4.24 -3.93,2.02 -3.11,0.26 -7.42,-1.26 -9.6,0.49 -0.06,1.62 -1.53,3.91 -1.31,5.28 1.62,1.29 0.77,6.66 3.08,7.25 3.29,1.04 4.59,-2.58 7.98,-2.06 4,-1.07 6.96,-3.4 10.98,-4.53 2.43,-0.43 4.63,-1.26 4.89,-3.69 0.67,-0.45 1.49,-0.49 2.17,-0.91 z m 1.62,12.3 c 6.67,-0.85 -4.22,-1.91 0,0 z\",\n          \"MG\": \"m 591.79,297.71 c 1.2,2.82 0.97,7.37 2.95,8.73 2.79,1.88 7.92,0.75 8.65,-2.85 1.29,-3.83 2.44,-7.72 3.73,-11.54 1.42,-3.12 1.53,-7.02 3.01,-9.95 -0.6,-1.37 -0.73,-4.62 0.82,-1.66 1.9,-2.04 -0.38,-5.85 -0.85,-8.49 -0.87,-0.29 -1.43,-3.51 -1.9,-1.92 -1.27,0.91 -0.45,3.18 -2.27,4.06 -0.19,0.19 -1.97,-1.07 -0.92,0.84 -0.11,0.93 -1.26,1.18 -0.04,2.22 -0.91,-0.83 -1.7,1.65 -1.62,-0.1 -1.26,1.44 -0.18,2.8 -1.67,1.53 -1.92,1.31 -0.6,1.96 -2.14,1.61 -1.5,0.4 -3.11,0.31 -4.4,1.58 -1.71,2.75 -1.33,5.74 0.02,8.72 0.17,2.82 -2.6,4.67 -3.36,7.2 z\",\n          \"BO\": \"m 278.97,266.42 c 2.55,0.92 4,-0.24 6.07,-1.58 1.83,-1.59 7.41,-3.49 5.45,0.89 -0.13,2.3 1.75,4.96 4.28,5.04 2.75,0.15 4.61,3.2 7.62,2.87 3.23,0.65 1.54,4.44 2.41,5.56 -0.88,4.62 6.82,0.07 5.04,4.31 2.5,1.45 2.99,4.61 1.14,7.11 1.18,3.96 -2.48,-2.62 -5.16,-0.73 -4.44,-0.31 -7.07,2.7 -7.15,6.88 -0.06,2.22 -5.32,-1.01 -5.13,3.18 -0.31,-2.5 -4.81,-2.91 -5.54,-2.31 -1.52,1.17 -4.75,4.3 -4.51,0.3 -0.15,-2.22 -2.81,-4.42 -1.84,-6.01 0.49,-2.31 -1.73,-4.83 -2.44,-7.31 -1.14,-1.06 3.63,-3.14 0.56,-3.99 -0.32,-3.06 1.21,-5.67 1.05,-9.02 1.58,-1.37 -1.62,-3.65 -1.83,-5.21 z\",\n          \"CI\": \"m 448.04,217.31 c 1.43,-1.6 0.22,-2.8 1.35,-3.91 0.59,-0.67 -1.34,-2.42 1.31,-1.34 -0.95,-1.89 -0.32,-2.29 -1.43,-4.1 0.82,-2.97 3.97,0.01 4.46,-2.12 1.36,-0.64 0.77,1.88 2.83,0.49 1.82,1.17 2.93,3.02 5.18,1.42 2.95,-0.26 4.17,4.14 1.97,6.31 -2.43,2.51 1.76,6.79 -0.06,7.18 -0.54,-0.78 -3.11,0.31 -2.31,-0.69 -0.76,0.31 -4.38,0.61 -1,0.18 1.23,0.64 -5.22,0.11 -2.31,0.45 -3.1,-0.38 -9.05,4.8 -6.65,-1.41 -0.79,-1.62 -2.12,-1.85 -3.34,-2.47 z\",\n          \"DZ\": \"m 447.83,158.87 c -1.42,-4.06 2.69,-6.52 5.93,-6.61 2.69,-0.8 5.76,-2.94 8.06,-4.1 -1.83,-1.76 2.54,-2.76 4.09,-2.99 3.3,1.15 3.26,-1.18 1.37,-3.08 0.44,-1.92 -0.86,-4.75 -0.94,-5.19 2.13,-1.53 4.57,-1.62 6.46,-3.05 3.12,-1.42 6.64,-1.21 9.8,-1.92 2.76,0.4 5.39,0.34 7.65,-0.34 1.96,-0.05 4.13,0.03 5.43,0.53 -2.12,1.45 1,6.38 -2.98,7.8 0.47,3.54 5.03,4.58 5.13,8.4 0.23,3.1 1.52,5.64 1.57,9.07 -0.83,1.67 0.58,3.63 -1.37,4.66 1.84,2.02 1.64,5.46 5.08,5.02 4.96,2.86 -2.46,4.34 -4.43,6.15 -3.83,2.19 -7.47,4.71 -10.7,7.7 -2.4,-0.07 -8.29,3.34 -7.19,-1.03 -2.48,-1.01 -5.22,-1.52 -6.15,-4 -6.84,-4.13 -13.22,-9.02 -20.11,-13.09 -2.21,-1.35 -4.46,-2.64 -6.71,-3.93 z\",\n          \"CH\": \"m 488.45,105.83 c 1.29,-2.14 2.66,-4.1 4.76,-4 2.28,0.2 3.51,-1.55 5.32,0.74 -0.98,1.45 4.27,0.74 1.85,1.94 -0.53,1.03 -1.24,0.84 -2.77,0.41 -0.61,3.86 -2.74,-1.95 -3.77,1.37 -3.11,1.46 -2.84,-3 -5.4,-0.46 z\",\n          \"CM\": \"m 495.72,222.09 c 0.47,-3.22 3.41,-5.46 5.57,-6.53 1.27,2.08 2.15,2.36 3.29,0.26 0.18,-2.57 2.73,-4.33 2.93,-6.51 2.19,-1.52 1.75,-5.62 4.98,-6.24 1.08,-1.83 -3.37,-3.4 -0.72,-4.23 3.2,2.1 0.52,6.67 3.61,8.69 -2.26,-0.37 -6.76,0.32 -3.01,2.82 3.73,1.91 2.38,5.81 -0.14,7.91 -0.42,2.53 1.22,5.29 2.32,7.46 2.54,0.81 3.26,6.86 -0.01,4.31 -3.04,-0.52 -5.92,-0.7 -9.02,-0.83 -1.81,-0.39 -6.9,2.06 -6.2,-1.63 -0.19,-1.82 -0.76,-2.84 -0.86,-3.33 -1,1.33 -2.12,-2.49 -2.94,-1.55 z\",\n          \"MK\": \"m 528.66,118.73 c 0.72,-2.03 2.99,-1.79 4.92,-2.22 2.81,0.77 2.27,4.33 -0.81,3.59 -1.58,0.85 -4.12,1.04 -4.1,-1.37 z\",\n          \"BW\": \"m 527.36,305.27 c 0.81,-2.27 -1.87,-8.12 1.68,-7.74 2.46,-1.12 0.37,-6.2 1.08,-8.87 -0.38,-2.72 4.82,-1.97 6.6,-2.11 1.16,2.25 5.11,-3.32 6.09,0.9 1.25,4.17 6.02,4.42 6.41,8.27 1.43,1.11 5.97,1.59 2.48,3.25 -3.21,0.74 -4.64,4.07 -6.95,6.05 -2.13,0.14 -1.28,4.09 -4.34,3.16 -2.45,-0.7 -5.26,-2.69 -6.1,1.11 -1.71,2.37 -6.82,3.13 -4.88,-1.17 -0.38,-1.17 -1.04,-2.17 -2.09,-2.86 z\",\n          \"UA\": \"m 533.33,99.45 c 0.38,-2.42 2.62,-0.95 1.55,-3.19 1.51,-2.24 5.9,-2.87 2.56,-5.17 1.24,-1.88 5.76,-1.8 8.43,-1.21 2.08,0.47 4.68,1.02 6.24,0.62 1.37,0.15 3.91,1.05 4.74,0.38 0.25,-3 4.8,-1.41 6.48,-2.35 2.03,-0.95 4.88,1.12 3.49,2.26 0.42,1.56 4.07,0.15 3.62,3.02 2.25,0.9 4.97,-0.87 6.7,1.19 1.53,0.31 6.03,0.27 5.9,2.18 -1.87,0.91 0.64,0.9 -1.06,1.74 3.11,2.67 -4.06,1.43 -3.8,3.68 -2.7,1.82 -6.53,0.96 -9.21,3.43 2.58,-2.32 -2.41,0.17 0.41,1.46 1.07,1.21 5.82,-0.36 2.73,1.55 -2.21,-1.2 -6.6,3.05 -7.27,0.97 1.25,-2.46 -5.49,-1.56 -0.98,-2.96 4.95,-1.59 -4.78,-0.76 -3.46,-2.07 -3.23,-0.26 4.67,-0.42 0.65,-0.42 -1.37,-1.95 0.32,-0.22 -1.65,-0.07 -0.22,-1.27 -3.13,2.33 -3.62,0.72 0.24,0.25 0.69,1.87 -1.3,2.11 1.92,-1.05 -1.71,-0.2 -0.1,0.98 -0.61,-0.67 -6.41,0.78 -2.76,-1.71 0.93,-2.27 1.5,-1.55 3.85,-1.53 -0.18,-1.02 -2.58,-1.29 -1.6,-2.59 -0.99,-1.59 -2.48,-2.46 -4.37,-2.61 -2.58,-1.71 -4.68,1.24 -7.34,0.98 -2.41,0.31 -5.68,-0.1 -7.92,-0.87 -0.4,-0.01 -0.51,-0.49 -0.9,-0.53 z\",\n          \"KE\": \"m 565.98,238.45 c -1.07,-3.74 2.54,-5.6 3.18,-8.69 -1.15,-1.8 -1.5,-4.12 -2.68,-5.32 0.29,-3.5 6.28,-1.26 8.65,-0.77 2.74,2.44 6.51,2.92 8.94,0.29 1.02,-0.16 4,0.51 3.69,0.99 -3.5,3.08 -1.82,7.92 -2.24,12.02 0.81,1.63 2.52,4.78 -0.33,4.2 0.79,1.52 -2.38,1.75 -2.35,3.92 -0.94,2.23 -1.95,5.44 -4.46,2.07 -2.59,-1.71 -2.38,-4.35 -6.03,-5.25 -2.2,-0.99 -4.16,-2.68 -6.39,-3.46 z\",\n          \"TW\": \"m 805.03,169.47 c -0.48,1.96 2.33,6.52 2.74,2.31 0.92,-1.65 3.91,-7.83 0.29,-6.84 -1.39,1.01 -2.44,2.92 -3.04,4.53 z\",\n          \"JO\": \"m 568.85,153.04 c 0.91,-3.06 1.42,-6.72 2.23,-9.42 2.89,2.96 6.55,-2.17 8.62,-1.24 2.67,3.53 -1.78,4.19 -4.98,4.69 0.47,0.91 3.25,2.52 2.05,2.92 -1.97,1.51 -4.82,4.48 -7.93,3.06 z\",\n          \"MX\": \"m 146.91,144.12 c 4.03,-0.61 6.19,-0.66 9.33,0.98 3.78,0.9 7.36,3.02 11.36,2.39 1.8,-0.09 4,0.57 4.58,-1.3 3.87,-0.71 7.78,1.72 9.43,5.05 1.12,2.54 5,3.88 6,0.6 4.48,-1.37 5.43,4.11 8.08,6.22 0.1,3.47 3.3,3.99 5.99,4.78 1.66,0.21 -1.86,4.93 -0.82,6.79 -1.12,2.04 1,5.79 0.91,5.71 -2.07,-3.94 0.48,2.62 1.93,3.59 1.77,1.76 2.02,5.25 2.55,3.87 2.27,0.76 5.91,2.4 5.97,1.14 2.66,-0.29 4.19,-1.31 5.88,-0.17 1.6,-1.88 -1.16,-0.68 1.42,-1.96 2.46,-2.61 0.26,-6.77 5.15,-6.31 3.48,-0.81 3.86,-0.36 6.33,-0.19 0.26,2.44 -2.58,4.46 -2.14,5.95 0.62,0.64 -0.9,4.29 -1.51,1.72 -1.52,1.82 -2.49,2.76 -4.99,2.52 -1.62,-0.04 -3.27,-0.35 -3.18,1.62 -2.43,-0.32 5.21,3.74 0.25,3.3 -3.93,-1.31 -2.58,6.77 -4.69,2.76 -0.69,-1.06 -6.52,-4.51 -3.45,-2.55 -3.28,-1.38 -1.63,-0.96 -5.09,0.37 -3.83,1.6 -7.15,-1.96 -10.81,-2.44 -3.76,-1.96 -7.39,-3.38 -11.04,-5.17 -1.44,-1.39 -7.37,-3.65 -4.34,-5.73 -1.08,-0.83 1.2,-2.68 -1.02,-3.9 -0.19,-2.82 -5.05,-6.01 -5.47,-6.73 -0.63,-1.05 -3.04,-3.19 -3.99,-3.34 -1.06,0.21 -1.42,-1.5 -0.43,-2.24 -0.91,-1.2 -4.58,-1.95 -3.82,-4.15 -2.28,0.08 -4.27,-2.95 -5.37,-4.94 -1.41,-2.21 -1.42,-5.35 -4.29,-5.46 -1.79,0.17 -3.23,-2.4 -2.32,0.28 -0.23,3.69 3.17,5.75 4.96,8.27 0.78,1.45 3.2,4.8 3.49,5.02 0.49,-0.56 2.41,4.15 3.06,5.6 0.06,2.72 2.23,0.16 2.89,3 2.19,1.7 -2.08,2.99 -1.92,0.26 -2.75,-2.57 -6,-2.84 -5.08,-6.62 -1.52,-0.71 -2.61,-3.46 -3.45,-2.34 -1.97,-0.2 -6.6,-4.19 -2.34,-2.76 1.72,1.22 0.86,-0.5 0.25,-0.24 1.51,-2.83 -4.23,-4.37 -4.82,-7.38 -1.2,-1.22 -1.91,-4 -3.41,-5.63 z\",\n          \"AE\": \"m 614.9,167.34 c 1.12,1.33 4.68,0.15 7.22,0.3 0.84,-0.73 3.89,-4.15 5.57,-5.23 0.32,1.15 1.11,4.3 -0.84,3.09 -0.43,1.59 0.57,2.62 -0.88,3.06 -0.36,3.02 -1.96,4.08 -4.92,2.93 -3.16,0.32 -4.78,-1.53 -6.14,-4.15 z\",\n          \"BZ\": \"m 224.45,190.94 c 0.24,-3.09 -0.56,-6.25 2.53,-7.3 0.29,1.75 0.85,5.64 -1.6,6.97 l -0.06,0.33 z\",\n          \"BR\": \"m 266.7,256.8 c 1.46,-2.11 2.75,-3.84 3.14,-6.74 2.29,-1.46 5.6,-3.35 7.84,-2.31 0.57,-3.26 2.17,-6.93 1.28,-10.19 -1.94,-1.19 -1.76,-4.64 1.04,-3.76 0.18,-1.73 -3.3,-0.97 -1.54,-3.06 3.03,0.03 4.52,0.14 6.33,-1.04 1,1.65 1.4,3.9 4.06,3.71 1.53,-1.52 1.23,1.67 2.51,-0.87 2.04,-0.84 3.65,-2.08 4.62,-3.66 -2.79,0.11 -1.74,-4.02 -3.65,-5.3 1.71,0.49 4.48,1.94 5.53,1.46 0.52,-2 6.46,-0.98 5.62,-4.04 2.95,-1.06 1.23,2.16 2.82,2.76 -0.07,2.41 -1.85,6.71 1.73,8.09 1.93,0.81 3.93,-2.13 6.16,-1.54 2.09,0.09 2.63,0.19 2.43,-1.56 2.53,-1.05 4.4,1.51 6.59,0.45 3.41,1.99 3.65,-5.35 6.01,-4.79 -0.54,-2.73 1.11,2 1,0.3 0.25,3.01 0.78,5.59 3.32,6.7 -0.09,1.92 -4.17,4.12 -5.06,7.04 -0.34,1.56 -4.33,1.35 -1.45,1.78 1.67,0.03 4.62,-3.81 4.25,0.41 1.46,1.61 4.74,-1.62 3.38,1.58 -0.5,0.81 2.36,-3.23 2.79,-2.35 1.43,-0.16 -0.83,0.06 0.54,-1.23 1.18,-1.57 2.7,-1.1 3.66,-0.82 0.73,0.05 1.03,0.82 2.11,0.83 1.07,0.67 2.48,0.63 2.32,1.38 0.78,-0.13 1.62,-0.15 1.87,0.67 1.16,0.13 -1.26,2.24 0.79,1.18 -0.69,1.26 -1.58,4.64 0.01,1.46 1.86,-2.63 -0.55,1.94 1.3,-0.46 1.59,-1.38 4.26,0.93 5.97,0.64 2.74,0.42 6.44,-0.33 8.95,2.53 2.13,3.18 5.69,3.83 8.9,4.58 1.09,3.16 1.62,4.91 1.4,7.38 -0.38,3.15 -2.76,4.44 -3.38,6.11 -2.21,1.74 -3.17,2.31 -3.54,3.19 -0.25,0.79 -2.34,6.81 -3.79,3.74 -0.42,1.14 -1.31,3 -0.85,3.69 -0.01,1.34 0.72,6.53 -0.56,9.43 -0.34,2.2 -1.91,4.24 -1.69,6.7 -1.24,2.13 -3.31,3.79 -3.37,6.7 -2.84,0.59 -2.01,3.47 -5.06,2.71 -1.22,-1.53 -0.6,0.65 -3.13,0.33 2.75,-0.82 -3.29,-0.52 -1.79,0.67 -1.69,0.79 -3.67,1.71 -4.9,1.86 -3.43,1.46 -4.25,4.41 -6.41,3.93 1.76,0.96 -0.49,1.07 0.3,2.05 -0.9,0.64 0.67,3.24 0.07,4.84 -0.26,2.68 -4.11,4.03 -5.09,7.86 -0.66,2.16 -7.08,5.51 -3.13,2.81 1.27,-0.99 4.21,-4.65 1.47,-3.73 -1.31,-1.93 -0.07,1.79 -0.93,1.26 -1.83,1.86 -2.32,3.24 -2.93,5.11 0.04,2.12 -4.51,4.63 -2.66,1.15 0.95,-2.58 -4.38,-3.84 -5.93,-5.87 -1.77,1.23 -2.88,-3.55 -5.59,-1.85 1.22,-1.65 4.21,-4.54 5.22,-5.85 2.71,-1.71 7.57,-3.48 4.51,-7.29 -3.94,1.35 1.69,-5.48 -2.17,-4.73 -3,1.6 -1.94,-7 -4.92,-4.41 -2.28,0.5 -5.22,-0.81 -3.49,-3.69 -0.95,-1.92 -0.41,-2.95 -0.14,-4.92 1.86,-2.56 0.16,-4.82 -1.6,-6.55 1.79,-3.82 -6.05,0.49 -4.98,-4.03 -0.75,-1.12 0.85,-5.38 -2.7,-5.56 -2.5,0.22 -4.23,-2.13 -6.37,-2.71 -2.28,0.01 -5.18,-1.62 -4.99,-4.14 -0.44,-2.07 0.99,-4.92 -2.61,-3.53 -2.64,0.91 -4.45,2.73 -6.87,3.62 -2.12,-1.36 -6.87,1.41 -5.16,-3.45 1.08,-3.21 -4.45,3.31 -4.83,-1.02 -1.8,-0.36 -2.28,-0.1 -2.04,-1.84 -1.24,-1.17 -1.54,-2.65 -2.51,-3.78 z m 64.34,-17.04 c 1.69,1.81 4.29,0.77 5.82,-0.97 2.76,-3.8 -3.6,-2.64 -5.41,-2.38 0.34,1.32 -0.93,1.2 0.01,2.25 1.2,0.1 -1.24,-0.03 -0.42,1.1 z\",\n          \"SL\": \"m 435.02,210.22 c 1.93,-1.56 5.36,-4.95 7.22,-0.74 1.09,1.13 -0.89,3.59 1.16,2.39 -1.16,2.19 -3.35,5.68 -6.08,2.91 1.45,-0.71 -1.26,-0.53 -1.72,-2.37 -1.36,-0.45 1.89,-1.32 -0.29,-0.89 -0.48,-0.9 1.07,-0.74 -0.28,-1.31 z\",\n          \"ML\": \"m 437.94,194.09 c 2.04,0.27 0.91,-4.28 3.33,-1.43 0.66,-0.14 2.73,-0.47 4.23,-0.55 2.58,-0.13 7.07,-0.19 10.4,-0.03 2.61,-1.65 -0.96,-6 -0.22,-8.98 -0.61,-5.94 -1.17,-11.89 -2.04,-17.8 2.18,0.22 4.68,-0.68 6.45,0.99 5,3.35 10.11,6.64 14.98,10.12 0.79,2.34 3.83,2.32 5.75,3.54 -0.87,2.43 0.94,2.51 2.85,1.83 -0.17,3.51 0.95,7.94 -1.95,10.48 -3.03,-0.07 -6.2,0.86 -9.14,1.22 -2.98,-1.16 -5.79,2.3 -8.35,2.58 -0.66,1.62 -1.51,1.07 -1.88,2.53 -3.32,-2.45 -1.5,3.09 -4.45,3.36 -1.6,0.57 0.02,4.22 -2.58,4.94 -1.29,0.07 -0.15,-2.12 -1.6,-1.03 -0.4,1.08 -1.89,1.12 -3.22,0.55 -1.36,2.1 -1.08,-2.87 -2.67,-1.59 1.46,-1.31 -0.82,-2.75 -1.47,-4.3 -0.46,1.21 -3.4,1.35 -4.37,1.04 -1.52,0.18 -2.09,0.26 -1.85,-1.7 -0.05,-2.03 -2.16,-2.23 -1.89,-4.57 -0.51,-0.29 0.13,-0.87 -0.33,-1.19 z\",\n          \"CD\": \"m 505.77,251.86 c 1.11,-0.45 1.26,-4.86 3.32,-2.51 1.04,-1.47 3.32,-2.13 3.01,-0.08 3.18,-1.06 5.29,-4.26 5.08,-7.65 2.52,-2.81 4.78,-5.42 4.56,-9.55 0.61,-2.99 2.06,-6.3 2.13,-8.9 2.02,-4.45 4.64,0.54 7.38,0.4 2.12,0.77 3.39,0.33 4.39,-1.51 2.2,1.04 4.02,-1.17 6.29,-0.61 1.13,-1.59 4.43,0.23 6.29,0.12 1.5,3.66 5.21,-0.2 6.72,2 2.14,1.43 3.1,2.6 2.3,5.16 3.85,1.6 -3.17,3.66 -2.74,6.36 0.38,3.32 -2.26,5.6 -2.13,8.35 1.51,3.41 0.61,7.8 2.24,10.97 1.86,1.39 4,5.34 0.03,4.67 -3.03,-0.07 -4.18,2.35 -3.41,4.97 -0.48,2.25 -0.88,7.37 2.73,5.97 1.08,-0.64 0.96,4.79 -0.18,2.86 -2.42,1.32 -2.68,-3.38 -5.42,-2.94 -0.95,-3.24 -2.96,0.76 -5.34,-1.31 -1.27,-0.74 -0.93,-2.21 -3.01,-0.96 -0.5,-0.98 -1.88,-1.79 -3.82,-0.94 -1.87,0.16 -3.53,0.88 -2.39,-1.55 -1.9,-2.75 -1.01,-6.14 -1.62,-9.07 -1.53,-0.06 -3.51,0.31 -3.49,-1.1 -2.15,0.08 -3.24,0.79 -3.08,3.1 -2.11,-0.79 -4.92,1.62 -5.92,-1.16 -1.4,-2.23 -1.11,-6.26 -5.05,-4.86 -2.81,-0.23 -6.65,0.7 -8.88,-0.26 z\",\n          \"IT\": \"m 507.51,129.94 c -3.05,-1.56 2.25,-1.9 3.67,-1.24 1.87,-0.1 5.68,-1.88 2.74,1.15 1.11,2.58 -1.33,3.18 -3.09,1.38 -1.28,-0.02 -2.12,-1.1 -3.32,-1.29 z m -12.37,-8.02 c -1.85,-1.43 1.82,-2.01 2.86,-1.99 1.23,0.55 1.16,4.18 0.05,5.58 -1.7,1 -3.95,0.46 -2.47,-1.54 -0.34,-0.72 -0.13,-1.18 -0.44,-2.05 z m -4.9,-13.17 c 3.1,-0.02 -1.04,-2.76 2.09,-2.35 2.48,-0.19 2.62,-2.39 4.57,0.34 -0.27,-2.86 2.83,-0.83 2.93,-1.72 0.94,-1.14 3.02,-1.32 5.54,-1.83 0.95,1.66 5.23,1.16 4.21,3.41 2.1,1.41 -2.13,-0.39 -3.2,1.12 -0.43,-0.49 -1.01,1.04 0.12,1.66 -2.29,2.57 4.77,3.24 4.6,6.55 0.65,2.38 6.19,0.94 5.12,2.54 0.55,2.04 7.22,1.64 6.66,5.04 -1.28,-1.22 -5.59,-2.89 -4.92,0.65 3.38,1.22 -0.58,2.57 -1.22,4.3 -2.73,1.61 -0.35,-1.81 0,-2.41 -0.55,-2.94 -2.96,-3.35 -4.6,-4.73 -1.02,-1.37 -5.06,-1.66 -6.86,-3.77 -3.53,-0.91 -3.86,-4.73 -7.02,-6.29 -1.56,-2.47 -6,3.28 -5.14,0.18 -3.86,0.28 -0.56,-1.71 -2.89,-2.69 z\",\n          \"SO\": \"m 585.58,229.11 c 0.69,-4.69 6.2,-7.52 10.68,-7.31 2.28,-1.77 4.01,-4.34 6.21,-6.28 1.31,-1.33 3.8,-3.01 0.32,-2.36 -3.72,-1.45 -8.97,-1.63 -11.19,-5.33 -3.05,-1.74 0.89,-6.67 2.05,-2.34 2.51,2.1 5.36,-0.94 8.17,-0.4 2.93,-1.76 6.73,-0.59 9.82,-2.27 3.25,-3.21 1.61,3.36 2.25,3.39 1.32,-0.12 -2.15,0.54 -0.97,2.35 -1.4,3.16 -3.42,5.74 -4.82,8.9 -1.89,4.51 -5.29,8.36 -9.04,11.49 -4.21,2.3 -7.59,5.75 -10.67,9.35 -0.46,0.71 -1.19,3.14 -2.01,0.66 -1.7,-2.5 -0.43,-5.99 -0.81,-8.9 l 0,-0.47 z\",\n          \"AF\": \"m 639.74,139.82 c 1.69,-1.45 1.23,-5.93 4.7,-3.54 1.43,1.33 2.67,-1.68 3.45,-1.57 3.5,0.06 3.17,-4.17 6.08,-4.32 2.12,-0.55 5.14,0.72 7.27,1.14 1.63,-1.71 3.03,0.55 3.91,-1.65 2.23,1.22 1.92,-4.15 4.62,-1.79 0.27,1.14 0.98,1.67 0.38,3.63 1.58,2.07 5.54,-3.13 6.54,-0.84 2.18,-0.77 3.22,-0.4 2.08,0.59 -2.94,0.85 -7.6,-0.11 -9.19,2.95 2.67,2.03 -1.37,3.58 -0.54,5.27 -2.16,0.74 -4.42,-0.54 -2.19,2.29 -3.26,-0.32 -1.84,4.85 -4.25,4.39 -1.55,-0.59 -3.3,0.83 -3.34,1.36 -3.63,-1.33 -2.64,3.38 -4.45,4.24 -4.18,0.55 -8.59,1.68 -12.69,0.06 -3.07,-0.31 4.68,-5.14 -1.31,-5.25 -0.69,-1.82 -0.25,-4.72 -0.62,-5.58 -0.62,-0.14 -0.37,-0.99 -0.44,-1.38 z\",\n          \"BD\": \"m 716.95,161.12 c 0.8,-0.22 1.8,1.17 2.06,0.38 1.27,1.37 2.41,0.19 2.29,3 1.76,0.89 7.81,-0.72 6.42,1.69 -1.03,1.41 -4.28,2.92 -2.37,4.04 1.32,2.74 1.74,-3.85 2.7,-0.2 -0.07,1.9 2.06,6.05 -0.4,5.62 0.02,3.91 -0.92,-4.11 -1.4,-3.01 -0.46,-2.79 -2.64,1.38 -2.92,-2.19 0.42,-2.1 -0.97,-0.41 -0.61,-0.49 0.43,1.3 -0.12,2.01 0.29,3.26 -0.2,-0.37 -1.91,2.15 -0.98,0.24 -0.49,0.49 -0.68,-0.2 -0.82,-0.86 0.03,2.56 -1.46,1.13 -0.88,0.69 -0.26,0.81 -0.26,-1.15 -0.23,0.9 -0.62,0.75 -0.11,-1.06 -0.79,0.58 -0.52,-2.38 -1.15,-4.56 -1.56,-6.27 1.17,-1.53 -3.4,-2.26 -0.76,-3.09 1.6,-0.72 2.09,-1.06 0.18,-1.93 -2.43,-0.94 1.25,-2 -0.22,-2.35 z m 6.09,10.81 c 0.03,1.88 0.88,2.41 0.6,0.18 -0.25,-0.23 -0.31,-0.96 -0.6,-0.18 z\",\n          \"DO\": \"m 272.83,184.89 c -0.53,-1.77 0.29,-3.1 0.36,-5.21 2.54,-0.49 5.56,1.5 6.64,1.93 -2.86,-0.43 5.6,2.18 1.12,2.37 -2.45,-0.36 -4.34,0.19 -6.19,0.35 -0.48,1.5 -1.01,2.47 -1.93,0.57 z\",\n          \"GW\": \"m 425.53,200.98 c 2.38,-0.33 4.57,-1.22 7.02,-1.01 2.59,-0.24 0.04,1.59 1.2,2.64 -2.43,-0.49 -3.7,3.48 -4.57,1.09 0.75,-1.43 0.86,-0.14 -0.24,-1.09 2.76,-0.42 0.44,-0.85 -1.35,0.03 2.05,-1.52 -2.31,0.28 -0.46,-1.61 -0.69,0.1 -0.93,0.55 -1.61,-0.05 z\",\n          \"GH\": \"m 463.12,218.04 c -0.22,-3.53 2.96,-6.14 1.13,-9.66 -0.36,-2.09 -1.06,-4.54 2.09,-3.68 2.18,0.85 5.88,-1.57 5.79,1.26 1.67,1.44 -0.15,3.04 1.26,3.69 0.13,2.29 0.34,4.75 0.19,7.43 1.73,0.4 1.94,2.6 0.15,2.09 -0.84,-0.97 -1.55,-0.77 0.01,-0.12 -3.22,0.88 -6.4,4.07 -9.73,2.5 -1.54,0.11 1.78,-1.18 -0.32,-1.76 0.11,-0.64 -0.23,-1.24 -0.57,-1.76 z\",\n          \"AT\": \"m 498.33,102.64 c 0.57,-1.73 2.38,0.79 3.17,-0.71 2.12,0.58 4.66,-0.95 6.64,-0.11 -1.9,-2.04 1.39,-2.14 2.12,-3.4 2.58,1.59 3.61,-1.95 6.56,0.05 3.57,-0.79 2.09,3.65 1.2,3.27 -0.3,2.95 -3.14,2.19 -5.71,3.3 -2.34,-0.32 -6.06,-0.31 -7.08,-1.78 -2.62,0.75 -4.48,0.69 -6.73,-0.02 l 0.01,-0.32 z\",\n          \"SE\": \"m 503.07,69.37 c 2.29,1.64 0.79,-3.19 3.48,-2.93 1.06,-1.32 -1.91,-2.64 0.84,-2.85 0.63,-1.42 -2.73,-1.22 -1.44,-3.27 -1.05,-2.33 -0.33,-5.19 2.99,-4.95 1.69,0.79 3.22,-1.25 0.83,-1.43 2.34,-0.66 2.48,-3.52 3.11,-4.4 1.67,-0.14 3.98,-2.03 4.49,-3.23 -1.16,-1.42 3.27,-2.43 4.88,-2.38 -0.36,-2.99 6.56,0.79 5.61,-1.45 0.75,-2.79 6.02,1.11 8.74,1.36 1.76,0.22 -0.56,2.09 1.31,2.27 -1.16,0.73 1.47,1.77 -0.24,2.84 2.9,2.24 -1.35,1.51 -1.95,1.63 -2.18,-0.67 -1.63,1.02 -3.03,0.7 0.16,0.51 -1.39,0.13 -0.93,1.34 -3.45,0.72 2.08,1.59 -1.5,2.46 -1.99,1.99 -4.11,1.55 -6.45,2.85 -1.95,0.25 0.37,0.75 -1.88,0.98 0.4,0.08 -1.63,-1.45 -0.21,0.24 -0.86,0.96 -1.99,0.69 -1.09,1.46 -0.52,2.59 -1.41,0.78 -1.07,2.37 -0.25,3.19 3.46,1.91 4.93,4.05 0.88,1.07 -4.17,1.6 -0.98,1.79 -0.31,-0.45 -1.15,1.75 -2.7,0.64 0.72,1.18 -3.27,1.21 -3.17,1.26 2.66,0.54 -1.56,0.14 0.83,1.06 -0.62,1.31 -0.04,1.66 -1.19,4.34 -0.86,3.05 -6.6,0.05 -5.62,3.58 -2,-0.05 -4.22,0.96 -4.17,-1.25 -1.78,-1.45 1.78,-1.69 -1.27,-3.17 -1.84,-1.15 -1.31,-2.93 -1.87,-3.66 -0.87,-0.06 0.36,-0.36 -0.86,-0.2 -0.39,0.39 -0.79,-1.77 -0.43,-2.02 z m 19.78,5.86 c 1.67,-0.89 2.56,-3.93 -0.46,-1.71 -0.09,0.69 -0.24,2.77 0.46,1.71 z m -5.45,1.61 c 0.61,1.22 3.14,-5 0.72,-1.2 -0.33,0.31 -0.83,0.66 -0.72,1.2 z\",\n          \"TR\": \"m 544.2,124.61 c -0.19,-3.46 5.6,-2.64 5.36,-2.55 1.31,-0.09 3.86,0.31 2.53,-0.61 2.88,-0.79 2.42,0.17 0.35,-1.24 2.89,-0.92 6.58,0.52 9.35,-1.99 3.33,-0.86 6.8,-1.32 9.09,0.22 1.54,0.31 3.87,1.67 6.25,1.93 3.71,0.27 7.46,-0.25 10.79,-1.28 2,-0.43 3.08,-0.35 4.43,0.78 1.22,1.57 -0.08,3.67 2.78,3.29 2.74,1.29 -2.71,1.04 -0.37,3.34 -0.08,2.03 0.48,2.83 1.38,4.65 -1.79,0.36 -4.56,-1.14 -6.84,-0.22 -3.3,-0.31 -6.8,1.88 -10.22,1.34 -1.74,-0.49 -4.1,0.38 -5.62,0.15 0.58,1.1 -1.19,2.8 -1.8,1.96 -1.11,-0.92 2,-3.14 -0.57,-2.19 -0.84,1.09 -4.26,-0.84 -5.19,1.34 -2.98,3.2 -7.33,-4.03 -9.27,-0.46 -1.59,2.06 -4.09,-0.49 -5.63,-0.92 -1.1,0.37 -1.36,0.57 -1.51,0.13 -4.23,0.77 3.27,-0.76 -0.58,-0.85 -2.1,0.18 -1.05,0.28 -0.63,-0.64 -1.89,-0.4 -0.01,-2.04 -2.33,-2.61 -1.69,0.79 -0.65,-2.62 0,-0.43 2.24,0.08 -0.69,-0.86 0.78,-1.55 -1.97,-1.18 1.52,-2.33 -2.52,-1.57 z m -0.08,-3.56 c 2.53,-1.48 -0.23,-4.36 3.83,-3.6 1.87,-0.15 2.85,1.97 4.5,2.55 -2.73,0.01 -5.63,0.78 -7.84,2.96 0.29,-1.45 3.13,-1.91 -0.16,-1.53 l -0.21,-0.12 z\",\n          \"UG\": \"m 553.91,238.9 c -0.39,-4.17 2.3,-6.77 4.75,-9.42 -2.41,0.04 -1.63,-5.56 0.75,-4.17 1.7,0.21 3.32,-0.39 5.57,-0.42 2.14,-2.38 2.72,2.71 4,4.52 0.43,3.24 -4,4.5 -2.99,8.06 -1.04,2.18 -5.96,0.5 -8.56,0.92 -1.39,0 -2.88,2.34 -3.52,0.5 z\",\n          \"MZ\": \"m 555.68,277.82 c 3.38,-0.51 7.85,-4.21 10.07,-1.42 4.51,-0.87 -0.98,5.86 3.59,6.74 0.61,2.22 -0.65,-2.7 1.56,-2.32 2.53,-3.74 -2.44,-6.16 -3.24,-8.98 -1.9,-4.36 3.49,-4.31 5.89,-3.25 1.32,-0.53 2.84,0.44 3.87,-1.29 2.26,1.88 7.76,-4.55 6.8,-0.28 -0.52,2 0.53,4.58 0.1,6.64 0.2,2.16 0.97,3.01 0.4,4.25 -0.43,1.98 -3.01,5.04 -5.57,5.78 -3.19,1.08 -5.18,2.18 -6.33,4.8 -1,-0.6 -4.36,4.09 -4.82,2.41 0.15,2.61 1.46,4.11 1.84,6.62 -0.17,2.65 1.06,-1 0.49,1.71 0.65,1.67 -1.08,3.66 0.13,3.82 -0.58,3.45 -10.01,3.24 -7.47,6.38 2.13,1.12 -2.26,3.35 -1.99,0.39 -0.65,-3.17 -0.44,-6.79 -1.88,-10.02 -0.89,-2.83 3.92,-3.48 3.06,-6.29 2.7,-1.94 -0.57,-4.19 1.33,-6.02 -0.33,-2.62 0.82,-5.75 -2.86,-5.66 -2.16,-2 -5.13,0.08 -4.95,-4.02 z\",\n          \"JP\": \"m 856.18,127.94 c -1.84,1.01 0.27,2.23 0,0 z m 8.64,-20.15 c 0.38,2.34 0.31,7.64 -3.24,5.92 0.46,1.55 -3.12,2.39 -0.87,4.1 -1.78,2.55 5.43,-0.24 1.23,-0.76 -1.88,-2.01 2.04,0.05 3.04,-1.31 1.98,0.42 4.65,3.42 5.48,-0.05 1.5,-1.31 5.08,-0.78 5.48,-2 -1.46,0.31 -1.51,-1.51 -0.94,-2.78 -2.12,2.33 -5.03,0.1 -7.2,-1.25 -0.96,-0.69 -1.68,-2.33 -2.98,-1.87 z m -25.3,33.26 c -1.96,1.25 -0.79,0.12 0.08,1.06 -0.66,1.4 2.1,2.1 2.13,-0.17 1.59,-0.98 2.83,0.63 3.83,-1.61 -0.73,-3.04 -3.47,0.43 -4.98,-0.63 -0.33,0.44 -0.48,1.13 -1.04,1.36 z m -4.43,-0.85 c 1.96,-0.48 3.46,0.68 4.31,-1.17 2.06,0.38 3.71,-0.69 5.65,-1.14 1.06,0.33 3.92,-0.05 1.52,1.29 -0.04,2.5 3,2.91 3.71,0.24 2.76,0.37 -1.03,-2 1.2,-2.22 -0.8,1.25 2.05,-0.16 0.73,1.18 2.25,-0.07 3.07,-0.2 4.69,-1.45 -0.84,1.6 1.08,1.49 1,-0.46 1.69,1 1.25,-1.62 2.53,-0.79 -2.34,2.74 0.98,1.33 1.51,-0.29 0.85,-0.39 -0.74,-3.11 1.07,-3.95 0.41,-1.16 -0.91,-4.42 1.52,-3.5 0.7,-2.16 2.14,-4.91 -0.38,-6.96 1.19,-1.59 -1.49,-2.88 -1.55,-1.2 2.79,-0.41 -0.65,2.12 -0.91,-0.01 -0.96,0.48 -1.8,1.83 -1.8,3.26 -1.26,0.07 2,1.61 -0.15,3.1 -1.01,2.68 -5.58,6.7 -7.62,5.5 -0.92,-0.68 2.17,-2.09 -0.47,-1.18 -0.41,1.88 -2.34,3.69 -2.79,5 -2.16,1.03 -1.9,-1.28 -4.8,0.22 -3.81,-0.99 -5.72,2.44 -9.06,3.44 l -0.04,0.57 z m -3.05,1.69 c -1.65,0.19 1.8,1.81 -0.39,1.11 1.03,1.15 2.45,0.91 1.24,-0.52 3.49,0.55 -2.05,4.9 1.23,5.48 -0.19,-1.7 1.19,-1.77 0.25,0.42 2.1,-0.6 3.06,-4.2 3.57,-5.74 -1.92,-0.54 0.47,-2.18 -2.22,-1.51 -0.75,-2.25 -2.9,0.43 -3.68,0.77 z m -5.99,20.39 c 1.34,-1.15 2.28,-2.78 0.65,-1.35 -0.25,0.41 -0.91,0.79 -0.65,1.35 z\",\n          \"NZ\": \"m 980.38,359.42 c 1.59,0.63 -0.23,-0.77 1.18,-0.76 -2.77,0.04 -0.77,-0.16 -1.18,0.76 z m -23.67,-7.74 c 2.14,2.42 4.24,-1.63 5.73,-3.43 -0.09,-1.29 0.81,-3.97 2.77,-2.23 0.11,-1.33 3.61,-5.66 -0.04,-4.42 -2.7,2.86 -6.03,-1.77 -6.17,-2.62 -1.34,-2.4 0.57,3.23 -1.32,0.45 -1.54,0.37 -1.17,-2.95 -2.07,-3.17 1.31,0.47 -1.09,-2.61 -0.89,-1.21 -0.64,-1.78 -3.1,-0.5 -3.03,-2.47 -1.58,-0.97 0.72,3.28 1.2,2.63 -0.84,-0.87 2.64,4.36 1.51,2 1.37,-0.12 1.56,1.23 0.71,1.18 0.74,1.83 2.19,0.91 1.26,2.12 0.85,1.57 0.3,5.01 -2.42,5.22 0.8,1.83 6.18,3.35 2.38,6.16 h 0.35 z m -23.16,13.34 c 1.43,-0.64 -0.04,1.31 2.71,0.51 2.11,0.86 4.97,2.3 7.18,0.16 2.23,-1.12 1.62,-1.84 3.08,-4.28 1.22,-2.98 4.59,-2.2 5.41,-2.8 -2.75,-1.32 2.77,-3.59 3.2,-5.59 -1.26,-1.38 1.75,-1.87 -0.72,-1.42 1.64,-1.35 -1.32,0.96 -0.13,-0.9 -1.84,1.5 -2.02,0.63 -3.02,-0.32 -1.28,-0.72 1.64,-1.16 -0.99,-0.6 -1.6,2.24 -2.96,4.34 -4.78,6.58 -3.04,1.83 -7.46,3.44 -9.11,5.24 -1.94,0.98 -0.67,1.81 -2.02,1.88 -1.19,0.79 2.01,-0.37 -0.12,0.44 1.48,0.34 -1.01,0.13 -0.68,1.1 z m 4.23,2.52 c 0.39,-1.85 -2.66,1.98 0.05,0.67 1.38,0.02 -0.1,-0.55 -0.05,-0.67 z\",\n          \"CU\": \"m 241.98,175.35 c -2.12,-0.41 1.52,-2.41 0.61,-0.14 z m -5.53,-1.26 c 2.2,-0.06 1.37,-3.05 4.41,-3.05 3.72,-0.8 5.87,-0.72 9.13,0.22 1.3,1.13 4.9,1.77 6.58,3.1 1.31,0.86 -0.15,-0.99 1.4,0.57 -0.58,0.42 2.65,0.95 4.2,1.75 -1.67,0.65 7.22,1.75 2.29,2.73 -2.01,0.36 -5.38,-0.1 -8.08,0.44 1.59,-1.04 2.34,-2.98 -0.59,-2.44 -1.98,-0.84 -1.67,-3.44 -4.25,-2.54 -2.82,-1.76 -5.11,-1.09 -7.22,-2.28 3.23,-0.68 -3.4,-1.54 -3.71,0.57 -1.75,0.07 -2.86,1.63 -4.15,0.93 z\",\n          \"VE\": \"m 268.42,209.82 c 0.97,-2.58 3.12,-7.68 5.32,-7.2 -3.36,0.3 1.55,3.51 -1.64,5.08 -0.12,3.73 4.58,2.02 1.93,-0.83 -2.24,-2.86 4.14,-3.18 4.38,-3.78 -2.75,0.43 -0.26,-3.72 0.01,-0.24 1.91,0.5 4.17,1.08 4.61,3.31 3.18,-1.09 6.18,0.35 8.7,1.24 2.75,-1.2 3.12,-1.35 2.53,-1.66 1.61,-0.19 8.79,-0.45 3.86,0.26 -2.39,-0.24 1.52,1.3 -0.96,1.24 1.21,-0.35 1.63,0.38 2.13,0.76 -0.13,0.15 0.68,0.47 0.21,-0.33 0.87,0.79 2.07,-0.05 3.73,1.72 -0.17,0.75 -2.12,2.37 -1.78,2.29 0.79,0.3 6.07,-1.08 3.6,1.46 -3.33,1.26 1.48,3.28 -2.31,3.6 -1.81,1.84 0.24,3.32 0.99,5.23 -1.62,1.67 -4.02,1.65 -5.92,2.58 0.24,2.11 -2.51,-0.76 -3.65,-0.22 -3.92,-1.92 0.79,2.1 0.24,4.27 3.91,0.06 -0.98,2.09 -1.1,2.94 -1.76,0.26 -2.96,3.24 -3.63,1.35 -3.83,2.2 -3.61,-4.88 -5.84,-5.46 2.84,-1.65 -2,-5.15 0.54,-7.64 1.68,-4.03 -5.54,0.73 -6.18,-2.84 -1.67,-2.55 -5.64,0.37 -7.24,-2.33 0.7,-1.68 -0.57,-5.67 -2.53,-4.79 z\",\n          \"PT\": \"m 445.98,125.1 c 1.66,-1.86 2.37,-5.18 1.31,-6.81 0.24,-1.34 2.63,-1.51 2.05,-0.28 2.16,-1.06 7.75,0.04 3.38,2.22 0.21,1.55 0.62,4.19 -1.74,3.81 2.54,1.22 -0.16,3.54 1.44,4.41 -1.67,1.35 -1.15,4.11 -4.28,2.74 -2.59,1.02 1.31,-5.72 -1.84,-3.62 0.53,-1.15 1.43,-1.51 -0.56,-0.75 -0.57,-0.46 0.26,-1.17 0.24,-1.72 z\",\n          \"CO\": \"m 252.95,231.17 c -0.47,-0.82 1.85,-0.35 0.81,-1.95 2.5,-0.46 3.03,-2.26 4.08,-4.06 -0.63,-0.77 -0.28,-1.72 -0.65,-4.65 1.16,-2.12 -1.46,-4.1 -0.91,-6.37 2.5,1.42 -0.06,-4.87 1.91,-1.82 1.43,2.74 -0.39,-2.04 2.18,-2 2.56,-1.09 1.18,-3.33 2.83,-4.85 0.82,-1.6 2.69,-1.01 2.08,-0.06 1.3,-2.42 5.88,-1.87 7,-4.17 0.13,-0.9 4.12,0.24 1.1,1.26 -2.95,0.87 -4.41,5.94 -4.39,7.25 2.84,-0.06 0.85,5.72 3.84,6.14 3.15,-0.97 5.11,0.97 7.27,2.49 2.47,-0.41 6.43,-0.86 3.69,2.39 -0.77,2.77 2.44,5.6 0.14,6.98 2.41,-0.07 2.68,7.45 1.64,2.71 -0.67,-1.62 -2.32,0.65 -2.92,-0.01 -1.16,1.25 -5.74,-1.2 -4.46,2.22 2.38,-0.47 2.33,1.82 0.01,1.18 -1.81,2.49 3.12,5.09 0.67,8.27 -0.55,2.31 0.13,6.66 -2.61,4.32 -1.04,-0.94 3.03,-3.69 -0.15,-3.93 -2,-1.89 -6.61,2.13 -7.17,-1.54 -1.85,-1.51 -3.21,-3.79 -5.46,-5.19 -2,-0.1 -3.19,-1.6 -5.33,-1.01 -1.52,-1.26 -3.67,-1.92 -5.19,-3.56 z\",\n          \"MR\": \"m 424.61,177.22 c -0.18,-2.88 3.65,-1.21 5.47,-1.61 1.9,-0.07 3.87,0.15 5.71,-0.11 -0.74,-2.93 -0.09,-5.47 2.88,-6.22 0.32,-2.63 -1.73,-8.14 2.76,-6.78 2.11,-0.06 4.26,0.13 6.34,-0.11 0.26,-2.03 -0.54,-4.73 2.1,-2.35 2.48,1.6 7.23,3.93 8.25,5.27 -1.49,0 -2.98,0 -4.47,0 1.24,7.82 1.65,15.77 2.77,23.59 2.5,5.12 -5.53,2.42 -8.24,3.23 -2.38,-0.56 -5.24,0.51 -6.98,0.52 -2.36,-3.17 -1.71,3.69 -3.97,0.76 -2.4,-2.45 -4.97,-5.97 -9.03,-4.15 -1.92,-0.86 -2.62,2.9 -1.79,-0.59 2.27,-2.58 -0.3,-7.76 0.03,-8.08 1.44,-2.05 -1.06,-4.04 -1.7,-3.88 z\",\n          \"AO\": \"m 505.24,249.73 c 1.06,-2.15 4.38,-1.73 1.43,-0.01 -0.06,3.73 -1.21,1.68 -1.43,0.01 z m -0.75,34.43 c -0.43,-3.48 1.32,-6.18 1.89,-9.52 0.53,-3.17 4.76,-4.24 3.86,-7.99 -0.67,-2.52 -3.67,-6 -1.22,-6.6 0.42,-2.56 -3.79,-5.84 -2.23,-7.43 3.48,-0.43 8.63,-1.53 11.43,0.41 0.16,3.55 2.62,6.51 6.32,5.06 2.05,-0.06 0.7,-3.78 3.81,-3.01 0.94,0.03 0.46,1.77 2.4,1.03 3.94,-0.19 -0.04,5.91 2.74,7.85 0.65,1.46 -1.06,4.29 1.57,2.75 3.2,-0.66 3.98,-0.14 3.38,3.14 1.5,5.03 -7.79,-0.5 -5.61,5.38 -0.48,3.98 0.1,8.09 4.15,10 -3.67,0.81 -7.28,1.24 -10.98,0.58 -3.36,-1.38 -6.89,-1.35 -10.78,-1.21 -4.13,0.37 -6.81,-1.83 -10.75,-0.44 z\",\n          \"DE\": \"m 510.16,83.58 c 0.63,-0.95 1.7,1.39 0.28,0.42 -0.06,-0.51 1.11,-0.31 -0.28,-0.42 z m -1.91,-0.81 c 0.29,-1.17 1.74,-0.71 1.27,0.04 -0.42,0 -0.91,0.39 -1.27,-0.04 z m -13.09,-1.84 c -0.92,1.13 0.26,0.4 0,0 z m 0.4,0.28 c -0.93,0.06 0.94,0.06 0,0 z m 1.14,0 c -0.85,-0.17 0.1,1.88 -0.49,1.71 -0.35,0.34 2.73,2.01 2.47,1.98 -1.79,-2.3 -3.58,0.65 -3.51,0.01 -0.07,0.76 -4.12,-1.38 -3.41,0.7 1.74,0.46 -2.97,2.47 -0.29,2.83 -0.71,2.07 -4.39,0.32 -2.35,2.67 -1.72,1.83 1.3,2.48 0.02,4.05 0.58,1.79 2.43,2.59 4.8,2.63 1.09,-0.33 -3.22,5.13 0.68,4.01 1.11,-1.14 4.44,0.48 6.08,0.54 1.81,-0.1 5.13,-1.41 7.28,-0.3 -1.19,-1.95 0.91,-2.39 2.28,-3.45 -1.92,-1.32 -6.51,-4.24 -3.32,-4.71 2.63,-0.73 4.66,-1.76 6.27,-1.77 -0.5,-1.5 -0.12,-3.85 -1.78,-4.92 1.1,-1.9 -1.09,-3.73 -2.81,-4.21 -0.88,-0.97 -3.87,0.28 -1.14,-0.43 -2.35,0.63 -3.33,1.16 -5.29,1.44 -0.74,-0.78 1.55,-1.66 -0.99,-1.3 -2.62,0.04 -0.5,-1.54 -4.5,-1.47 z\",\n          \"SD\": \"m 570.73,170.57 c -2.63,0.94 -4.06,5.29 -7.24,3.16 -3.38,0.23 -4.32,-0.56 -7.36,0.02 -4.97,0 -9.94,0 -14.9,0 -0.25,2.4 1.29,6.69 -2.45,5.63 -1.09,3.03 0.86,9.72 -1.01,11.93 -3.25,-0.03 -3.01,4.18 -4.46,5.78 1.11,1.37 -2.43,3.26 0.78,2.88 -0.09,2.13 1.2,3.44 1.72,5.6 3.53,1.87 -0.67,6.52 3.46,5.66 1.28,-1.28 0.81,-3.4 2.08,-4.86 2.28,-3.07 2.9,3.17 5.53,1.67 2.07,-0.75 4.03,2.41 5.57,-0.39 1.7,-0.24 2.31,-3.24 4.22,-0.43 2.37,0.91 4.6,-3.2 4.67,-5.07 -0.08,-1.6 -1.33,-1.84 0.95,-1.89 0.3,-1.87 2.28,-0.18 1.05,1.27 -0.14,2.63 2.85,4.67 2.53,6.51 1.7,-0.03 1.07,-3.87 2.87,-2.76 -0.47,-3.3 3.08,-4.68 3.64,-6.92 1.05,-3.04 0.78,-6.4 1.91,-9.4 0.5,-2.13 7.1,-3.34 2.97,-5.26 -3.39,-1.34 -1.59,-6.55 -2.49,-8.22 -0.46,-2.5 -2.62,-3.15 -4.02,-4.91 z m -31.67,40.88 c -0.81,0.98 0.37,0.36 0,0 z\",\n          \"TH\": \"m 741.93,183.35 c 2.23,0.61 0.18,-4.66 3.68,-3.29 1.64,-0.78 3.08,-2.49 4.83,-1.43 -0.46,2.03 0.96,2 2.18,2.36 0.78,1.75 -2.19,7.33 1.32,4.33 0.93,-1.95 3.82,1.42 4.39,-1.39 3.6,-0.35 4.08,3.63 4.74,5.91 2.02,0.95 2.14,4 0.43,5.64 -2.29,-0.61 -6.2,-1.05 -7.24,1.99 -1.45,0.48 2.75,7.69 0.09,3.84 -0.68,0.12 -2.15,-2.05 -4.64,-1.33 1.64,-3.49 -3.45,-2.96 -2.56,0.21 0.04,3.19 -3.25,5.95 -2.05,9.21 2.48,-0.33 3.27,4.51 3.3,5.61 -1.87,-3.06 0.99,2.69 3.08,1.41 2.88,1.99 0.28,3.65 -1.46,2.95 1.04,-1.79 -2.61,-2.53 -2.74,-2.3 -1.12,-1.85 -1.8,-2.07 -3.03,-3.96 -0.79,-1.73 -2.47,0.52 -1.87,-2.29 -0.38,-4.12 5.04,-6.66 3.14,-10.45 -0.44,-2.75 -1.62,-4.86 -3.33,-7.09 1.02,-0.93 1.38,-2.68 1.89,-3.94 -0.71,0.38 -1.61,-2.78 -3.04,-3.56 0.11,-1.31 -0.76,-1.44 -1.12,-2.41 z\",\n          \"AU\": \"m 791.49,330.29 c 2.22,-0.61 0.81,-3.23 1.35,-3.26 0.11,-3.48 -2.66,-6.34 -2.72,-9.87 -1.04,-2.38 -3.46,-6.91 -3.96,-7.92 -0.32,-0.75 1.81,2.65 1.06,0.08 -1.89,-1.68 0.38,-2.2 0.04,-0.08 0.58,-1.11 1.32,2.13 1.48,-0.5 -1.84,-2.55 -3.18,-5.44 -1.22,-8.35 -1.21,-1.64 1.49,-5.18 0.83,-1.49 2.25,-2.24 5.68,-5.3 8.69,-5.12 3.16,-0.68 5.84,-2.23 9.27,-2.56 2.63,-0.92 3.32,-3.52 4.69,-5.04 -1.41,-1.75 2.24,-5.39 2.3,-3.34 1.25,2.77 1.12,1.55 1.8,0.85 1.47,-0.05 -1.6,-1.49 -0.25,-2.15 -0.62,-0.78 2.79,0.71 2.77,0.08 -1.8,-0.46 1.11,-1.31 -0.78,-1.83 0.35,-2.27 2.85,0.37 1.53,-1.36 -0.71,-0.63 2.12,0.16 0.7,-1.33 0.83,-0.19 1.58,-2.32 1.2,-0.37 1.82,0.48 0.79,-3.25 1.65,-1.29 0.67,-0.2 1.52,-0.17 2.1,-1.11 2.29,0.21 3.67,4.58 3,4.35 0.52,0.45 0.86,-2.72 2.97,-0.78 0.29,0.69 0.33,-1.37 1.29,0.37 -0.4,-0.52 1.58,-1.1 -0.06,-1.51 0.74,0.21 -1.69,-1.36 0.43,-1.8 -0.06,-1.85 2.25,-1.31 1.33,-2.93 1.48,-0.55 0.59,-2.1 2.15,-0.89 -0.94,-2.38 3.04,-0.45 4.05,-1.18 1.86,-0.94 -0.62,-2.21 -1.7,-2.65 1.28,0.17 0.77,-0.92 2.45,0.71 0.63,-0.77 2.6,1.36 3.21,0.84 1.4,0.66 3.93,1.65 4.79,0.4 1.96,-1.3 -0.68,1.49 1.03,0.73 1.07,1.52 1.41,-2.07 2.08,-0.07 1.34,0.47 -1.12,2.28 -0.55,2.66 -1.11,-0.21 -2.16,0.86 -1.46,1.97 -1.19,1.83 -2.53,3.38 0.37,4.36 2.4,1.97 5.27,3.02 8.25,4.58 2.66,4.45 7.1,-0.33 6.64,-4.26 0.64,-2.11 -0.6,-7.36 1.17,-7.41 -1.54,-1.68 0.84,-2.32 0.7,-5.3 1.91,-2.41 1.62,2.91 2.73,3.04 1.28,1.63 0.3,6.44 2.73,6.53 1.46,-0.82 3.69,1.89 3.32,3.67 0.61,3.17 2.37,4.32 2.29,7.52 0.2,1.62 1.99,3.14 3.41,2.71 0.65,1.97 2.53,1.64 3.8,2.69 0.47,0.26 -0.89,1.6 0.83,1.83 1.17,1.86 1.88,5.94 2.95,3.73 1.84,0.39 1.6,1.25 2.07,3.57 1.45,-0.32 0.24,1.18 2.14,1.3 1.76,1.71 3.34,4.29 4.26,5.55 -1.36,3.4 2.44,5.95 0.59,9.3 -1.26,3.24 -0.54,7.74 -3.5,9.71 -1.67,0.98 -2.22,2.93 -3.4,4.84 0.03,2.08 -1.93,2.42 -2.2,5.28 0.47,3.49 -1.89,4.72 -5.46,4.37 -1.69,0.74 -4.28,2.3 -5.05,2.95 1.38,0.61 -2.78,-0.25 -2.36,-1.91 -1.21,0.89 -2.66,0.73 -0.99,-0.26 -1.04,-1.73 -1.87,0.42 -1.43,0.41 -2.75,3.08 -5.83,-0.71 -8.88,0.26 -2.22,-1.14 -5.08,-2.7 -4.63,-5.8 -1.21,-1.52 -3.23,-2.95 -0.52,-0.82 1.39,1.17 -2.72,-2.42 -0.62,-1.09 -0.06,-2.24 -2.63,1.53 -3.09,-0.47 2.22,-1.63 -1.2,-5.85 -1.29,-1.34 -1.47,1.42 -3.85,0.01 -0.79,-0.32 -0.06,-2.15 2.52,-5.48 0.97,-6.19 -0.45,2.95 -4.21,3.34 -5.39,5.77 1.68,1.61 -3.7,-0.88 -1.29,-0.71 -0.16,-2.72 -2.99,-3.32 -3.23,-4.96 0.26,-0.87 -2.59,-1.94 -4.61,-2.05 -2.96,-1.22 -6.47,-1.72 -9.95,-0.76 -3.74,2.19 -8.2,0.83 -11.77,3.34 -2.38,0.79 -3.1,4.24 -6.11,2.78 -2.76,0.09 -7.41,-0.79 -9.12,1.7 -2.95,0.97 -5.53,2.7 -8.77,0.95 -0.79,-0.98 -5.26,-2.21 -2.32,-3.31 z m 90.47,17.83 c 1.93,2.47 0.52,-2.1 0,0 z m -11.14,0 c 1.48,1.07 0.1,-2.86 0,0 z m 9.64,7.83 c 0.39,1.2 1.83,-0.28 1.11,0.95 1.34,0.97 0.48,-4.13 1.87,-2.77 0.18,-2.25 -0.41,-4.84 -2.96,-3.2 -1.65,1.37 -5.44,-1.05 -7.36,-0.47 -0.42,2.13 3.78,5.1 1.59,4.31 -0.12,2.14 3.71,2.53 2.25,3.28 1.32,0.04 2.92,0.54 2.84,-1.03 0.68,0.92 1.13,-0.65 0.67,-1.08 z m -27.37,-18.87 c 4.04,-0.72 -1.41,-1.98 -2.43,-0.45 0.61,0.92 1.68,-0.14 2.43,0.45 z m -17.24,-69.43 c -1.28,-0.58 -3.73,-0.24 -0.99,1.44 1.71,0.6 2.21,-2.97 0.99,-1.44 z m -2.05,1.26 c 0.84,-1.66 -2.21,-0.8 -0.55,-0.1 z\",\n          \"PG\": \"m 878.44,241.91 c 0.38,-1.94 3.55,0.33 0.52,-0.28 l -0.27,0.12 z m 23.31,11.21 c 0.44,2.12 4.23,2 1.66,-0.11 -1.33,-1.54 -3.89,-3.41 -1.66,0.11 z m -6.43,-6.65 c -1.02,-1.69 -7.66,-4.86 -3.27,-2.06 2.63,0.3 3.1,3.93 4.06,4.53 0.86,-0.9 0.27,-2.19 -0.79,-2.47 z m -5.01,17.27 c 1.29,0.67 1.17,-0.09 -0.41,-0.7 l 0.25,0.34 z m -5.57,-11.37 c 2.18,1.61 6.09,0.82 7.63,-1.15 2.41,0.24 0.05,-1.92 2.11,-2.38 0.29,-2.22 -3.39,-1.69 -2.14,0.63 -1.15,0.47 -4.02,3.23 -4.25,0.64 0.41,-0.42 -1.53,2.45 -3.13,1 -2.21,-0.35 -2.21,0.62 -0.21,1.26 z m -21.82,8.94 c 0.3,-3.07 -0.44,-6.05 0.01,-8.89 0.2,-2.99 -0.51,-7.15 0.5,-9.44 2.67,1.59 5.78,2.02 8.42,3.39 2.57,0.46 4.08,3.15 5.01,4.82 1.45,0.26 7.22,2.26 4.05,3.42 -3.79,-0.23 1.5,3.53 1.92,4.33 0.26,1.95 2.05,2.12 3.05,2.48 -1.12,1.72 3.73,0.92 1.16,1.82 0.85,1.51 4.63,0.93 1.81,1.61 2.04,1.17 -1.89,0.41 -1.22,0.26 -2.15,-1.44 -4.95,-0.07 -6.75,-1.87 -2.29,-1.7 -3.02,-5.59 -6.68,-5.64 -1.76,-1.77 -1.54,0.89 -3.91,-1.05 1.21,1.3 0.71,2.14 -0.81,1.29 2.25,2.18 -6.1,0.35 -0.96,1.49 2.94,2.84 -3.46,2.3 -5.06,2.15 l -0.26,0.03 z\",\n          \"IQ\": \"m 579.52,141.76 c 3.35,-1.23 8.01,-3.06 6.94,-7.36 0.04,-1.98 3.23,-3.11 4.84,-3.85 2.48,0.07 3.33,0.76 5,0.95 -0.02,2.44 3.84,3.56 3.45,3.77 0.58,1.72 -1.45,2.49 -1.72,3.64 -0.51,1.59 1.97,2.82 2.09,4.02 2.7,0.67 5.14,2.81 4.32,5.55 0.65,0.26 3.36,4.41 0.38,2.48 -3.04,-0.74 -3.3,4.74 -7.03,2.77 -3.58,-0.26 -5.88,-3.65 -8.86,-5.36 -2.74,-1.21 -5.2,-3.27 -8.37,-3.12 0.26,-0.46 -0.96,-2.2 -1.04,-3.49 z\",\n          \"HR\": \"m 520.86,114.99 c 1.93,-0.01 2.97,2.11 0.72,0.38 -1.74,-0.36 -3.2,-1.21 -0.72,-0.38 z m -11.29,-7.28 c 2.63,-0.58 5.72,0.79 5.65,-1.9 2.54,-2.52 4.79,1.54 8.03,1.02 1.28,-0.8 1.93,2.07 2.02,1.81 -1.06,1.36 -4.28,-0.31 -6.63,-0.24 -1.29,0.48 -4.75,-0.22 -2.16,1.72 0.08,2.02 4.02,3.27 4.12,4.66 -1.62,-1.77 -6.82,-1.63 -6.22,-3.67 0.49,0.88 -2.49,-4.97 -3.21,-2.02 -0.96,1.61 -1.74,-0.94 -1.6,-1.37 z\",\n          \"GL\": \"m 350.08,66.85 c -1.04,-0.38 1,-0.77 2.1,0 -1.44,-0.58 -0.63,0.6 -2.1,0 z m -72.85,-47.31 c 1.2,0.31 8.15,0.27 3.75,0.53 -1.87,-0.15 -3.55,0.83 -0.86,1.06 1.35,0.34 5.81,1 6.17,0.53 -3.96,-0.92 2.94,-0.21 2.81,-0.39 1.66,0.42 4.52,-0.36 6.93,-0.46 3.5,0.33 7.71,0.64 10.68,1.36 0.53,0.15 4.8,0.51 2.25,1.44 1.17,0.27 4.31,1.26 4.77,1.66 -0.04,0.42 3.72,0.85 0.63,0.9 2.78,0.13 -0.9,0.33 1.2,0.41 -1.34,0.2 -4.2,0.74 -1.17,0.47 1.83,-0.47 1.52,0.57 3,1.12 -3.5,-0.1 3.32,0.98 0.44,1.23 0.2,0.59 -1.07,0.55 1.18,0.62 0.86,0.88 1.41,0.65 0.08,1.39 4.92,0.42 -4.31,-0.02 -0.48,0.47 3.36,-0.43 -3.71,1.92 0.82,1.18 3.77,-0.89 -6.22,0.85 -0.86,1.72 0.07,0.06 4.32,0.05 3.55,-0.77 1.03,-0.13 1.48,-0.84 0.16,-1.91 0.56,-0.73 1.05,2.76 3.04,0.96 -4.13,1.84 6.46,0.3 1.37,1.29 -5.64,0.62 6.11,-0.2 0.75,0.31 -3.73,1.41 4.05,-0.34 -0.45,0.78 2.56,0.1 4.76,0.57 0.64,0.35 2.44,0.47 4.16,0.73 1.98,0.92 0.37,0.07 2.86,0.24 0.86,0.19 2.05,0.68 -3,-0.32 -0.02,0.48 -0.73,0.11 2.39,-0.09 0.34,0.39 -2.79,-0.54 -9.21,-2.3 -9.88,-0.72 2.87,1.02 8.68,1.77 9.51,1.79 2.13,-0.68 2.67,0.57 0.72,0.84 2.12,-0 -2.01,0.41 0.87,0.35 0.74,-0.44 -3.56,1.46 -0.75,0.75 2.42,3.6e-4 -0.62,0.59 1.22,0.73 -1.18,-0.49 -3.54,0.02 -2.16,0.67 1.93,0.24 -3.47,0.94 -2.71,0.41 -1.98,0.07 0.72,0.04 -1.67,0.31 0.82,0.26 -3.9,0.81 -0.58,0.46 -1.15,0.35 5.51,0.55 3.23,-0.24 1.62,0.13 2.65,-0.58 0.87,0.49 2.03,0.31 -1.81,0.02 1.04,0.48 2.46,0.43 2.02,0.59 -0.03,0.17 -2.22,-0.06 -5.34,-0.54 -4.8,-0.28 -3.64,-0.76 -0.29,0.72 1.46,0.45 -1.66,0.11 -3.3,-0.49 -2.82,-0.03 -0.4,0.14 -3.02,1.14 -0.29,0.96 2.47,-0.86 5.66,-1.26 3.09,-0.46 1.96,0.56 1.48,-0.58 3.2,-0.4 -2.02,0.32 0.8,0.61 0.77,0.07 3.15,0.31 -4.4,0.6 -0.14,0.68 3.01,-0.57 -2.16,0.45 1.19,0.45 -0.94,-0.05 -7.09,-1.23 -7.74,-0.39 -2.6,0.41 -2.17,1.61 0.28,0.88 1.75,0.09 5.92,-0.72 4.59,0.2 1.54,0.42 3.58,0.01 0.77,0.39 -2.16,-1.22 -8.38,-0.3 -7.04,0.09 1.57,-0.21 -1.61,0.22 0.89,0.23 -3.99,0.14 3.61,0.25 -0.16,0.39 0.18,-0.45 5.35,0.02 1.5,0.07 -1.54,-0.11 1.33,0.22 -0.73,0.31 3.14,0.03 -3.4,0.19 0.51,0.59 3.74,-0.33 -5.46,0.38 -0.54,0.69 -3.31,1.06 2.91,-0.19 3.76,-1.33 1.7,-0.44 4.12,-1.25 4.01,-0.7 1.32,-0.07 -4.05,0.36 -0.24,0.42 -2.39,-0.51 -7.95,2.07 -7.65,2.35 -1.96,0.45 2.19,-0.23 -0.21,0.3 1.56,0.11 6.15,-0.7 2.21,0.16 -2.55,-0.08 -1.9,0.59 -0.59,0.43 -0.34,0.72 0.51,-0.06 0.44,0.86 1.23,-0.68 5.28,-1.43 4.94,-0.74 -1.83,-1.11 -6.89,1.86 -3.64,1.1 -1.78,2.76 4.25,-0.2 0.3,1.38 -1.43,1.79 1.29,1.85 1.96,0.1 0.04,0.88 2.46,-0.1 0.7,-1.29 0.52,0.38 2.46,1.52 2.4,1.49 0.24,0.24 2.44,1.69 -0.14,0.55 -1.82,-1.32 -1.75,0.17 -0.32,0.23 -2.2,-0.1 -1.68,0.91 -3.99,0.61 1.13,-0.08 -0.22,0.55 1.7,0.33 1.58,-0.67 2.43,-0.51 2.43,-0.26 -1.74,-0.19 -5.32,0.95 -2,0.68 -3.84,0.82 0.54,1 0.56,0.78 -2.51,0.25 1.34,0.26 -1.27,0.55 3.05,0.5 1.1,-0.32 0.53,0.6 0.51,0.39 3.05,-0.58 1.27,0.6 1.22,0.05 0.04,0.72 1.31,0.16 -1.85,1.31 1.85,-0.48 -0.52,0.92 0.11,1.44 2.65,0.9 2.58,1.43 -2.95,0.92 3.57,-0.74 -0.06,0.77 0.14,0.79 2.09,-1.25 0.62,0.38 1.12,-0.55 -0.32,0.77 1.3,0.29 -4.1,0.51 3.79,0.01 -0.63,0.5 -0.06,0.32 1.66,0.07 1.2,0.74 0.75,0.37 1.48,-1.01 0.94,0.2 2.49,-0.05 -2.28,0.69 0.27,0.36 2.28,-0.26 -2.45,0.8 0.68,0.53 2.38,-0.21 -1.41,-0.27 1.14,-0.36 2.09,0.46 3.09,-0.42 4.44,-1.05 -0.6,1.36 -0.31,0.74 1.2,0.51 0.81,0 -3.01,0.96 -2,0.88 -0.67,0.72 3.94,-1.14 0.83,0.32 -0.23,0.43 -0.42,0.26 0.19,0.32 0.53,0.59 2.01,-1.02 0.68,0.26 0.53,0.01 1.7,-0.49 1.79,-0.24 -2.69,2.52 2.84,-1.05 -0.42,1.05 -0.16,1.61 3.24,-1.26 2.66,0.15 0.99,1.17 2.71,-0.08 0.94,0.01 2.82,0.35 0.35,-0.67 0.62,-0.92 -3.5,-0.59 0.22,-0.12 0.32,-0.21 2.15,-0.08 -2.6e-4,0.1 1.51,-0.39 -2.62,0.46 1.39,-0.27 -1.76,-0.42 2.04,0.25 1.61,-0.04 -0.16,-0.31 2.71,0.35 1.81,-0.58 -0.35,-0.54 2.71,0.37 1.38,-0.32 1.98,-0.15 1.57,-0.24 -2.6,-0.56 0.41,-0.38 1.75,-0.81 -3.03,-0.74 0.6,-0.68 1.57,-0.69 -2.52,-0.6 0.29,-0.59 1.17,-0.78 -0.56,-0.25 0.15,-1.5 -2.26,-0.93 -1.46,-0.34 0.46,-0.25 -0.23,-0.41 -4.35,-1.23 -1.13,-0.86 -0.38,-0.79 1.85,-0.54 0.49,-3.6e-4 1.37,-0.35 2.79,-0.62 0.66,-1.38 0.53,0.62 2.37,0.47 0.8,-0.03 2.98,1.02 -1.49,-1.48 1.15,-0.22 2.42,0.74 -1.98,-1.28 0.89,-0.09 -2.35,-0.7 3.25,-0.24 -0.72,-1.26 -1.15,-0.26 3.49,0.66 2.12,-0.6 -0.26,-0.82 -4.04,-0.72 -0.74,-1.02 3.71,0.7 -2.99,-2.72 1.28,-2.03 1.85,0.37 1.92,-1.01 1.14,-1.37 1.84,-0.42 3.25,-0.05 4.2,-0.36 2.05,0.4 -0.95,-1.43 1.26,-0.75 1.08,-0.91 -0.82,-1.61 1.16,-1.17 3.26,-0.42 -2.51,1.33 0.84,1.41 1.25,-0.64 2.63,0.03 4.93,-0.79 -1.93,-1.74 1.8,0.28 1.33,-0.61 2.18,-0.69 2.47,-0.97 3.61,-2.01 1.42,-0.93 1.89,-2.45 4.67,-2.36 0.28,-1.12 -0.69,-0.69 -0.63,-1.24 -1.23,-1.48 2.23,0.71 2.62,0.73 1.9,0.22 2.23,-0.23 2.32,-0.37 2.16,0.94 0.29,-1.07 2.9,-0.12 2.72,-0.54 5.43,-0.92 8.68,-1.16 2.84,-0.84 2.79,-1.58 4.89,-1.64 -1.03,-0.38 1.71,-0.69 1.87,-0.75 1.81,-0.33 -0.57,-0.64 1.71,-0.73 1.91,0.12 -0.57,-0.25 1.88,-0.31 2.99,-1.05 -4.32,-0.11 -5.76,-1.1 -2.97,-0.84 -6.86,1.37 -10.57,0.58 1.49,0.1 5.77,-0.51 5.57,-1.1 -1.94,-0.07 -6.85,0.28 -6.8,0.04 1.81,0.5 2.94,-1.78 2.21,-1.44 2.37,0.44 -0.22,-1.23 2.17,0.04 2.18,0.75 8.25,-1.6 2.87,-1.53 -2.29,-0.11 -3.09,-0.46 -5.68,-0.24 1.53,0.18 4.4,-0.39 1.22,-0.92 -0.07,0.32 -3.32,-1.14 -0.41,-0.33 3.63,2.13 9.05,0.12 11.64,3.95 1.84,1.75 4.21,-0.84 4.06,0.14 2.19,1.31 2.66,-0.71 1.88,-0.67 1.32,-0.91 -2.71,-0.71 0.22,-1.01 -0.69,-0.56 0.6,-1.07 -1.71,-0.59 -1.71,0.08 2.65,-1.75 -0.43,-0.81 0.18,-0.31 -2.77,0.14 -0.58,-0.59 -0.57,-0.82 -7.23,-1.51 -7.57,-1.55 -3.69,-0.03 4.51,0.2 0.78,-1.14 -2.45,0.05 -4.43,0.71 -4.44,-0.01 -5.34,-0.35 6.43,0.45 3.84,-0.79 -2.4,-0.56 -9.52,0.6 -3.87,-0.21 1.44,-0.47 -4.17,-1.17 -0.64,-0.56 1.58,0.85 6.31,-0.26 5.6,-0.61 -2.53,-0.68 -1.86,-1.31 0.15,-0.07 2.26,-0.72 4.76,-0.11 7.26,-0.03 -1.4,0.19 -7.18,-0.69 -3.04,0.55 2.61,0.32 7.08,0.96 8.43,-1.28 -2.06,-0.86 -4.62,0.06 -4.37,0.11 -0.93,-0.88 -2.16,-0.27 -0.58,-0.98 -2.68,-0.48 2.73,-0.08 0.09,-1.04 2.95,-0.04 6.03,1.67 8.79,0.26 -1.23,-0.81 -5.75,-0.36 -5.19,-0.49 2.25,-1.81 -4.72,-0.52 -3.67,-1.25 1.91,0.75 6.46,-0.28 2.18,-0.79 -1.54,-0.13 -3.22,-0.44 -0.55,-0.2 -4.3,-1.32 3.43,0.42 4.74,0.88 3.79,-1.39 -2.77,-3.43 -4.94,-2.39 -2.01,0.21 8.54,-0.13 3.5,-0.84 -2.11,-0.34 -2.46,-0.06 -0.28,0.36 -2.01,-0.29 -4.7,-0.75 -5.12,-0.95 2.34,0.01 0.16,0.12 1.47,-0.13 -0.75,-0.08 -3.92,-0.39 -1.14,-0.95 1.86,1.32 4.87,-0.52 1.21,-0.1 1.84,0.08 2.89,-0.01 2.47,-0.29 2,-0.79 7.37,2.12 7.18,-0.63 -2.26,-0.27 -4.39,-0.53 -6.74,-0.6 3.04,-0.01 0.35,-0.22 -1.06,-0.35 1.75,0.29 2.76,-0.31 0.28,-0.35 1.9,-0.2 7.71,0.39 2.93,-0.57 -2.53,-1.39 -5.38,1.85 -5.7,0.15 2.25,-0.98 -0.23,-0.77 1.63,-1.07 -0.15,-0.9 1.72,-1.28 -0.04,-1.17 1.23,-0.87 4.18,-0.78 6.45,-1.87 -4.29,0.69 0.27,-2.19 2.55,-1.44 4.73,-1.19 -2.21,-0.94 -4,-0.69 -1.73,0.37 -1.09,1.09 -3.02,0.61 1.88,-2.36 6.92,-0.48 10.29,-1.24 2.63,-0.27 2.82,-1.16 0.12,-0.99 -3.84,0.35 -7.67,-0.47 -11.49,0.12 1.35,-0.64 6.81,0.21 9.63,-0.74 2.17,0.36 7.34,0.16 7.65,-0.63 0.66,-0.8 5.84,-0.44 7.96,-1.82 -5.09,-0.65 -10.21,-1.31 -15.34,-0.63 0.5,1.64 -5.67,0.8 -7.6,0.93 1.55,-1.01 -3.99,0.56 -5.15,0.88 -2.91,0.58 -9.45,3.25 -4.08,0.7 2.06,-0.33 6.93,-3.18 2,-3.26 -3.57,0.24 -6.75,1.75 -10.45,1.85 -1.74,0.31 -2.71,0.34 -2.34,0.02 -0.92,-0.89 8.17,-0.04 4.82,-1.7 -6.82,-0.18 -13.65,0.3 -20.43,1.09 1.29,-1.99 7.63,-0.03 7.69,-1.44 -1.17,-0.48 -5.4,0.08 -1.92,-0.16 5.02,0.28 10.05,0.12 15.07,0.12 3.88,-0.52 7.9,0.06 11.65,-1.2 -3.81,-1.07 -6.85,-0.48 -9.93,-0.81 -1.28,0.3 -3.97,0.5 -1.1,0.11 3.16,-0.86 -2.93,-1.11 -4.29,-0.71 -4.73,0.17 -9.47,-0.2 -14.19,0.31 -2.97,0.04 -8.63,0.48 -9.42,0.46 -0.02,-0.8 7.39,-0.26 7.08,-0.72 -3.68,-0.42 3.37,0.34 4.75,-0.09 4.97,-0.37 9.98,0.22 14.94,-0.42 -2.84,-1.02 -6.66,-0.36 -8.36,-0.47 0.57,-0.19 -5.13,-0.42 -7.56,-0.34 -2.96,-0.3 -6.86,0.05 -7.72,0.04 -1.9,0.07 -6.83,-0.34 -6.75,0.27 0.56,0.48 -3.85,-0.53 -5.26,0.09 -2.91,0.78 7.57,0.72 2.53,0.92 -1.77,-0.1 -4.34,0.14 -1.2,0.16 5.43,0.03 -6.63,-0.4 -1.37,0.55 -2.92,-0.43 -7.67,-0.49 -9.54,-1.07 -2.13,-0.51 -4.02,-0.02 -3.22,0.06 -3.05,-0.15 -1.17,0.15 0.76,0.27 -1.87,-0.12 -7.22,-0.27 -6.87,-0 1.18,0.23 5.1,0.61 1.77,0.37 -2.62,-0.36 -6.01,-0.3 -4.16,0.1 -4.03,-0.01 4.56,0.54 3.64,0.07 4.58,0.27 9.38,-0.28 13.81,0.87 1.25,1.43 -6.53,-2.03 -4.74,0.28 -2.72,-1.55 -9.86,-0.82 -10.47,-0.51 3.59,0.54 4.96,1.12 8.47,1.27 -2.19,0.13 -6.47,-0.76 -6.46,0.45 -1,0.4 2.84,0.84 -0.35,0.81 -5.07,-0.68 -10.07,-1.94 -15.2,-2.2 -4.51,-0.43 0.15,1.93 2.23,1.74 -1.98,0.59 -6.22,-0.42 -2.07,0.51 2.77,0.96 -4.34,-0.76 -6.01,-0.63 -1.58,-0.79 -4.66,3.04 -3.5,-0.27 -4.27,-1.74 -7.34,0.23 -12.12,-0.21 -1.77,0.05 -5.97,0.4 -1.97,0.77 1.62,0.83 8.52,1.78 3.67,1.17 -3.45,-0.49 -6.83,-1.99 -10.36,-1.1 -1.06,1.27 2.02,0.82 -0.23,1.66 1.43,1.67 -5.11,-0.83 -5.7,0.73 3.34,1.97 -2.2,-1.42 -3.72,0.26 -2.24,1.25 -6.51,0.43 -7.63,2.45 2.8,0.82 8.22,0.08 9.32,0.11 -2.38,-0.55 -2.49,0.99 -2.92,2.13 -3.75,1.08 -7.7,0.47 -11.5,1.22 0.33,0.33 -4.54,0.64 -6.12,0.92 -3.19,-0.23 -6.62,1.43 -2.07,1.86 2.43,0.3 2.68,0.56 5.74,0.22 -4.72,0.85 3.75,0.18 -0.18,0.7 -0.47,0.48 3.6,0.41 4.41,-0.03 1.72,1.03 6.5,-1.24 6.2,0.47 -2.28,-0.14 1.31,0.89 -1.32,0.41 -2.01,-0.73 -9.17,0.17 -3.66,0.3 1.66,-0.01 7.67,0.03 2.86,0.1 -3.86,0.07 -7.78,-0.5 -11.6,0.14 -0.82,0.87 2.96,0.21 0.63,0.57 0.94,1.34 5.75,-1.79 2.71,0.38 z m 132.2,12.52 c -1.59,-0.6 3.65,0.15 -0.05,-0.84 -1.37,-1.04 -7.96,-0.86 -3.67,0.54 0.65,0.18 6.83,1.56 3.72,0.3 z m -8.88,3.59 c -1.57,0.39 -6.63,0.59 -6.22,1.84 1.86,-0.25 9.2,0.01 6.19,-1.58 z m 19.57,-14.37 c -0.09,-3.96 -2.53,0.26 0,0 z m 1.99,2.22 c -1.38,-0.31 -4.15,1.28 -1.17,1.05 2.3,0.21 4.03,-0.09 0.81,-0.51 l 0.75,-0.25 z m -5.73,1.9 c 1.97,-1.23 -4.11,-0.66 -0.42,0.09 z m -2.69,0.78 c -1.92,-0.24 -3.67,0.98 -0.63,0.98 2.3,0.11 4.16,-0.43 0.63,-0.98 z m -2.67,4.26 c -1.66,-0.74 -7.55,-0.67 -6.21,-0.02 2.38,-0.41 6.14,1.58 6.21,0.02 z m 7.04,-16.54 c 0.81,-0.83 -2.47,0.39 0.48,0.07 z M 340.48,3.07 c 2.14,0.65 6.97,1.81 6.72,0.61 1.52,-0.55 -3.67,-1.42 -5.09,-1.18 -0.89,0.06 -4.14,0.09 -1.63,0.57 z M 330.4,38.95 c -2.3,0.49 0.91,1.63 0.43,0.12 z m -10.12,-0.22 c 2.72,0.25 -2.42,0.09 0.62,0.9 -3.41,-0.35 2.03,0.77 2.01,0.48 2.87,-0.13 -3.74,0.24 -0.05,0.7 1.7,0.29 7.63,-1.19 3.07,-1.89 -0.96,-0.54 -6.82,-2.06 -5.64,-0.19 z\",\n          \"NE\": \"m 472.53,195.05 c -0.75,-2.18 2.68,-1.53 4.08,-2.47 2.43,-0.56 5.27,0.81 6.33,-1.99 2.35,-2.68 -1.72,-9.21 3.14,-9.31 3.87,-0.56 5.85,-4.74 9.41,-6.21 3.12,-1.84 6.25,-3.67 9.42,-5.39 3.3,-0.57 6.46,3.04 8.67,1.73 -0.4,3.12 2.65,5.56 2.09,8.04 -1.29,3.47 0.67,8.09 -2.66,10.59 -1.98,1.89 -4.03,5.09 -3.75,6.99 -2.89,3.51 -7.48,-0.93 -10.4,2.34 -2.67,0.41 -5.33,-2.05 -7.76,-0.39 -1.36,-2.74 -6.89,-3.28 -7.81,-0.17 -1.64,1.53 -0.88,5.55 -3.1,2.2 -1.66,-0.94 -1.67,2.51 -2.44,-0.17 1.27,-1.19 -4.63,-1.04 -2.67,-2.69 0.23,-0.28 -2.57,-1.65 -2.55,-3.1 z\",\n          \"DK\": \"m 495.21,76.19 c -0.44,-2.15 3.9,-0.81 4.89,-2.71 2.49,-0.81 0.08,2.94 -1.9,1.63 -1.84,-0.67 -2.84,1.45 -2.99,1.08 z m 7.13,5.32 c 2.8,1.22 2.68,-0.62 0.13,-0.32 l 0.22,0.24 z m 0.3,-1.57 c 2.3,0.37 1.55,1.39 2.62,1.82 -0.59,-1.14 1.46,-1.07 0.72,-2.45 2.45,-2.14 -2.03,-1 -0.8,-0.55 -0.37,-0.06 -0.84,0.36 -1.21,-0.54 -0.05,0.27 -2.79,0.52 -1,1.57 l -0.08,0.11 z m -3.83,-0.45 c 0.48,2.01 4.2,1.24 2.49,-0.3 -0.23,0.82 -1.44,-0.23 -2.49,0.3 z m -4.36,-3.04 c 0.99,0.09 3.68,-0.25 2.92,-0.28 0.65,-2.73 4.5,0.4 2.46,-7.2e-4 0.21,0.8 1.86,-0.2 2.24,1.05 -1.31,0.45 -1.95,0.52 -2.47,1.41 0.41,0.8 -2.47,-0.01 -0.44,0.54 -1.25,0.79 -0.42,2.08 -0.54,2.11 -3.23,0.8 -2.36,-1.44 -3.91,-1.8 -0.76,-1.62 1.08,-0.89 -0.39,-1.78 l -0.02,-0.43 z\",\n          \"LV\": \"m 530.16,76.64 c 0.3,-2.33 4.87,-5.24 7.05,-1.36 3.35,0.59 1.1,-3.97 4.66,-2.94 1.99,1.68 6.31,0.33 7.07,2.64 -0.07,0.92 2.46,2.76 -0.51,3.69 -2.9,0.81 -5.39,-1.02 -8.03,-1.68 -3.25,0.69 -7.16,-0.89 -10.12,0.76 -0.3,-0.29 -0.22,-0.77 -0.13,-1.11 z\",\n          \"RO\": \"m 528.08,105.9 c 3.05,0.28 3.81,-3.14 5.89,-4.6 2.82,-2 6.18,0.64 9.05,-0.62 2.26,-0.8 4.32,-0.99 5.44,1.71 3.09,1.12 -0.25,6.94 3.88,5.75 3.2,-1.84 1.01,3.23 0.12,1.24 -0.87,-0.78 -0.25,1.39 -0.65,0.71 0.2,0.38 -0.75,3.91 -2.79,1.87 -3.58,-1.5 -6.51,1.86 -10.13,0.74 -2.41,-0.32 -4.26,-0.29 -4.36,-2.31 0.71,-0.32 -4.34,0.19 -3.1,-1.71 -2.07,-0.49 -1.75,-1.75 -3.35,-2.78 z\",\n          \"ZM\": \"m 532.92,281.12 c 0.13,-2.93 -0.39,-6.24 0.25,-8.95 3.23,0.4 6.48,0.56 5.29,-3.6 -0.37,-3.2 0.74,-1.97 1.41,-0.82 2.72,-1.79 2.32,2.13 5.56,1.48 1.49,-0.27 2.14,-1.59 2.94,0.77 2.67,-0.14 3.74,4.3 5.71,3.22 1.04,0.13 0.76,-5.12 -0.93,-2.58 -4.74,-1.4 -0.18,-6.33 -2.57,-8.87 1.47,-3.13 5.81,-3.76 8.61,-1.69 1.4,1.36 4.69,1.44 5.11,3.68 2.05,1.86 -1.93,4.4 0.56,6.69 -1.68,0.43 -3.04,4.51 -1.09,4.43 -0.87,2.05 -9.5,0.98 -7.63,4.68 -3.81,-0.6 -4.39,3.14 -7.48,4.27 -1.36,3.74 -5.32,2.41 -7.91,1.2 -3.67,0.48 -5.88,-0.51 -7.86,-3.9 z\",\n          \"IR\": \"m 594.01,124.87 c 2.29,-2.79 4.55,3.52 7.72,0.9 1.39,-2.34 5.8,-1.64 3.41,0.44 2.62,1.02 2.25,4.53 5.71,4.22 2.37,2.95 6.36,2.25 9.56,1.4 2.1,-0.3 -0.77,0.55 1.31,0.14 -0.81,-2.08 2.61,-1.48 3.62,-3.28 2.96,-0.75 5.14,-0.76 7.93,0.75 3.37,-0.31 4.9,3.68 8.23,3.11 0.61,2.16 -0.29,4.89 -0.85,6.38 -2.57,1.29 1.27,2.5 -0.69,3.99 0.86,2.3 0.22,4.85 3.38,4.77 -0.06,2.59 -4.49,3.82 -0.92,6.16 1.33,2 4.63,2.02 3.94,5.11 3.5,1.76 -3.36,1.63 -3.11,3.85 -0.01,3.99 -3.48,0.77 -5.33,1.49 -2.6,-0.63 -5.52,-0.09 -7.42,-1.84 0.25,-4.75 -4.26,-2.89 -6.48,-1.43 -3.79,0.01 -5.73,-3.2 -9.13,-3.81 -1.53,-1.87 -1.89,-3.1 -2.65,-4.49 -1.02,-2.53 -2.21,-1.34 -3.9,-2.11 -1.26,-0.45 0.73,-1 -0.75,-0.49 -0.64,3.09 -2.51,-1.04 -3.15,-1.73 0.77,-2.94 -2.24,-4.73 -4.63,-5.73 -0.52,-1.35 -2.98,-3.72 -1.24,-4.84 1.63,-0.71 0.92,-2.55 1.48,-2.98 -2.84,0.39 -3.19,-2.43 -4.25,-4.34 -1.58,-1.89 -0.35,-3.31 -1.81,-5.64 z m 32.76,35.03 c -3.1,1.47 -0.07,0.94 1.27,-0.07 -0.42,-0.38 -0.83,0.25 -1.27,0.07 z\",\n          \"MM\": \"m 727.56,176.02 c 0.68,-1.15 1.81,0.25 1.16,-2.16 1.11,-0.04 2.07,-0.87 1.49,-3.05 1.46,-0.74 -0.37,-4.26 2.76,-2.25 1.11,-2.81 2.28,-4.89 2.84,-7.7 1.65,-1.14 4.22,-2.64 5.53,-1.71 -1.55,-1.04 1.2,-3.42 1.57,-3.51 1.76,1 1.47,2.48 2.85,3.12 0.44,2.99 -0.31,4.89 -2.55,5.84 -0.63,1.41 -1.49,5.21 1.31,3.17 2.75,-1.17 0.15,3.21 3.26,3.06 -0.29,1.23 -1.55,3.36 1.37,2.79 -0.36,2.73 2.63,0.88 3.27,1.29 -1.48,1.93 -2.69,3.05 -4.53,3.93 -1.35,0.72 -2.76,1.49 -4.36,1.72 -0.34,1.57 -0.81,3.14 -1.38,3.4 1.11,1.68 3.34,5.13 4.09,5.85 -1.37,2.06 -3.07,4.4 0.17,6.29 0.35,2.99 3.27,6.53 0.02,9.02 -0.88,1.05 -1.51,3.79 -1.45,0.58 1.47,-2.49 0.58,-2.87 0.55,-4.18 0.45,-0.21 -0.96,-5.69 -1.22,-4.71 -0.39,1.23 -0.56,-3.14 -1.2,-3.34 -0.63,-2.51 0.31,-4.23 -1.54,-5.18 -0.73,-2.35 -0.82,-1.04 -1.53,0.65 -1.53,0.73 -1.12,-1.58 -1.29,0.67 -1.3,0.4 -2.69,2.31 -2.68,1.26 0.14,0.34 -0.59,0.2 -0.29,-0.59 -1.4,2.94 0.08,-2.26 -1.25,0.8 0.28,-1.45 -0.56,0.59 0.12,-1.92 -1.99,3.38 -1.02,-1.22 -0.38,-2.76 -0.76,-2.36 -1.51,-6.26 -2.23,-4.05 -2.15,-1.88 1.58,-0.27 0.06,-2.15 -0.67,-0.85 -2.15,-1.08 -1.94,-0.82 -0.43,0.34 0.3,-2.48 -0.88,-0.57 0.26,-1.72 -0.85,0.45 -1.44,-2.03 z\",\n          \"ET\": \"m 563.4,213.45 c 0.41,-2.63 4.67,-0.69 3.05,-4.4 0.31,-2.14 0.94,-4.2 2.39,-4.16 -0.44,-3.5 3.54,-4.53 3.9,-7.41 -0.38,-2.92 3.11,-2.05 3.6,-2.06 0.25,-3.07 2.69,0.6 4.13,-0.79 3.42,-0.22 6.63,2.85 8.8,5.71 -1.22,1.87 -2.62,5.61 1.23,4.23 -0.31,2.08 2.43,6.23 5.78,6.5 2.36,1.18 7.39,2.1 8.26,2.46 -2.82,2.52 -5.32,5.37 -7.89,8.12 -3.82,-0.82 -6.13,2.51 -9.57,2.78 -1.89,-0.93 -4.24,-0.87 -5.48,1.61 -3.65,0.27 -5.98,-3.07 -9.52,-2.92 -1.46,-0.87 -0.49,-3.09 -2.49,-2.94 -1.11,-2.91 -3.05,-5.97 -6.2,-6.73 z\",\n          \"GT\": \"m 216.08,194.7 c 0.19,-3 1.54,-5.27 4.97,-4.34 0.45,-2.13 -4.34,-2.79 -1.53,-3.79 -0.1,-2.22 3.45,-0.63 5,-1.07 -0.3,2.68 -0.01,6.85 2.21,5.6 0.96,0.96 -2.99,1.76 -2.22,3.57 -1.96,2.49 -4.96,2.64 -7.74,0.59 l -0.35,-0.28 z\",\n          \"SR\": \"m 311.83,225.6 c -1.86,-2.17 -0.51,-4.3 1.36,-4.72 -1.09,-3.3 3.77,-1.06 3.81,-1.81 1.55,-0.63 2.77,0.68 2.53,-0.34 5.17,-0.24 -0.95,4.68 2.55,6.9 -0.55,1.82 -0.99,4.41 -3.31,2.84 -1.51,0.27 -2.85,0.17 -2.08,1.85 -3.33,0.41 -2.96,-3.89 -4.86,-4.72 z\",\n          \"EH\": \"m 424.61,177.22 c -0.57,-3.33 2.36,-5.36 3.44,-8.22 -0.84,-0.49 3.7,-3.2 3.23,-5.89 1.56,-1.8 3.26,-3.74 4.73,-5.39 3.91,0.25 7.93,-0.07 11.78,0.22 0.81,3.33 0.01,5.55 -3.6,4.57 -1.85,0.06 -3.74,-0.12 -5.56,0.07 -0.71,2.52 1.86,7.31 -1.96,7.8 -2.24,1.66 0.93,6.76 -3.79,5.24 -2.65,0.12 -5.38,-0.24 -7.97,0.18 -0.34,0.39 -0.36,0.95 -0.29,1.43 z\",\n          \"CZ\": \"m 505.43,94.08 c 1.9,0.8 5.69,-2.65 7.09,-1.6 1.57,-0.48 3.15,0.71 4.83,0.81 -1.65,0.84 2.5,2.19 1.44,0.45 1.85,0.84 4.05,0.97 5.27,2.63 -2.52,1.33 -4.66,2.74 -7.41,2.08 -3.07,-1.86 -4.49,2.17 -7.59,-0.68 -2.06,-0.99 -2.46,-2.18 -3.63,-3.69 z\",\n          \"TD\": \"m 509.24,195.08 c 1.48,-2.82 4.26,-5.02 5.68,-7.87 -0.28,-3.18 1.06,-6.8 0.67,-9.54 -1.33,-2.22 -3.92,-7.42 0.52,-7.93 3.16,1.08 6.13,3.02 9.28,4.31 4.31,2.16 8.65,4.26 12.85,6.62 0.46,2.85 0.05,5.99 0.22,8.96 0.87,3.04 -3.56,0.7 -3.31,3.81 -1.45,2.08 -1.68,4.21 -2.39,6.6 2.59,-0.38 0.77,2.95 2.83,3.93 -0.68,1.21 -3.59,1.09 -4.14,3.15 -1.42,2.85 -4.89,3.04 -7.1,3.71 1.33,2.52 -5.01,2.76 -6.23,3.16 -0.82,-0.61 -3.7,1.92 -3.59,-1.07 -0.59,-1.8 -6.5,-5.42 -1.71,-5.29 2.76,0.24 2.38,-0.04 0.94,-2.07 -0.03,-2.51 0.04,-5.91 -2.67,-6.71 -1.21,-0.75 -1.72,-2.4 -1.86,-3.75 z\",\n          \"AL\": \"m 525.44,121.31 c 1.54,-1.75 -0.99,-4.9 1.34,-5.31 2.94,-0.14 1.39,3.01 2.7,4.49 1.52,0.75 -1.08,3.52 -2.05,3.53 -1.17,-2.05 -1.54,-1.21 -1.99,-2.71 z\",\n          \"FI\": \"m 529.12,41.38 c 2.56,-2.1 5.75,2.56 9.33,0.6 2.86,1.35 4.92,-0.31 6.08,-2.55 2.54,-1.03 6.96,-1.07 8.41,0.84 -1.36,0.95 -0.21,1.5 -2.17,1.55 1.62,-0.03 -0.92,2.36 2.03,2.15 3.51,0.77 1.39,2.16 -0.08,3.59 1.4,1.31 3.55,3.09 1.83,3.8 -0.44,1.18 -0.66,1.88 1.11,2.32 -1.82,0.82 3.3,1.44 0.04,2.38 -1.35,0.88 6.42,1.82 2.5,3.91 -3.11,2.05 -6.4,3.94 -9.71,5.53 -2.85,-0.3 -4.48,0.39 -6.26,0.69 -2.51,0.7 -6.01,0.85 -6.38,1.06 1.01,-0.54 -0.75,-1.1 -0.29,-1.29 -1.71,-0.09 -5.49,-0.39 -3.9,-2.99 1.08,-0.93 -2.85,-4.07 0.38,-4.7 -0.66,-0.96 2.72,-0.7 2.07,-1.3 2.69,-0.72 4.69,-3.33 7.68,-3.76 1.73,-0.72 -1.1,-2.71 -3.01,-2.98 -2.52,-0.88 0.57,-2.67 -1.37,-3.73 0.8,-0.59 -1.01,-1.45 -0.05,-2.2 -2.56,-1.37 -5.52,-1.7 -8.24,-2.91 z m -2.08,25.16 c 0.52,-0.52 1.92,-0.26 -0.15,-0.81 1,1.23 -1.72,-0.5 0.15,0.81 z\",\n          \"SY\": \"m 570.71,142.04 c 1.24,-0.86 4.03,-3.39 1.3,-3.78 -0.74,-1.31 -1.53,-4.12 0.8,-3.94 0.49,-0.93 0.77,-0.66 0.69,-2.15 3,-0.13 6.21,0.39 9.34,-0.18 1.85,-0.58 5.4,-1.41 6.57,-0.64 -1.6,1.39 -3.85,1.65 -2.88,4.25 0.05,4.11 -4.64,4.87 -7.54,6.57 -2.31,1.62 -7.03,3.78 -8.2,0.71 l 0.05,-0.54 z\",\n          \"KG\": \"m 664.63,122.89 c 2.3,-0.76 2.91,1.05 4.92,-0.68 2.16,0.88 2.87,-0.65 4.86,-1.21 -0.49,-0.36 -3.37,-1.38 -3.76,-1.96 -0.9,1.93 -6.12,-0.69 -2.2,-1.54 2.08,-0.21 -1,-1.68 1.71,-2.16 2.49,-1.24 5.94,2.82 6.18,-0.91 3.03,-0.69 5.82,1.61 9.09,0.29 3.21,0.13 6.71,0.36 9.06,2.49 -3.42,1.01 -6.11,3.32 -9.58,3.35 -1.69,3.44 -4.52,-0.76 -6.55,2.11 -2.02,0.38 -1.34,2.99 -4.23,2.23 -2.52,0.68 -3.84,-0.77 -6.29,-0.4 -0.74,-0.83 -5.5,1.09 -3.22,-1.61 z\",\n          \"SB\": \"m 920.68,265.88 c 4.3,0.98 -3.81,-3.21 -0.58,-0.43 z m -2.7,-4.52 c 2.63,3.35 0.38,-2.51 -0.68,-2.14 0.29,0.7 0.26,1.5 0.68,2.14 z m -2.42,1.9 c 3.89,0.96 1,-1.56 -0.98,-1.53 -0.68,0.61 0.43,1.39 0.98,1.53 z m -2.42,-4.8 c 3.82,2.44 0.25,-1.32 -1.78,-1.66 0.4,0.71 0.97,1.41 1.78,1.66 z m -3.66,1.29 c 1.31,-1.32 -2.71,-1.95 -1.05,-0.8 0.66,-0.18 0.38,0.8 1.05,0.8 z m -2.61,-4.1 c 5.19,3.39 -3.75,-4.46 0,0 z\",\n          \"OM\": \"m 616.21,182.18 c 4.03,-1.59 9.69,-1.6 9.78,-7.19 0.72,-2.21 -2.22,-3.76 -0.06,-6.07 -0.12,-1.28 2.14,-0.6 0.67,-2.41 1.15,-3.21 3.41,3.36 6.79,2.52 1.82,0.51 4.03,2.77 4.29,4.28 -1.6,1.93 -3.06,5.18 -5.09,4.88 -1.36,1.73 0.91,4.9 -2.5,4.41 -1.15,1.87 -2.49,2.84 -4.65,3.28 -0.26,2.97 -4.49,1.94 -6.41,2.5 -0.82,-2.08 -1.92,-3.93 -2.82,-6.21 z m 11.24,-19.87 c 1.9,-2.52 0.3,3.26 0,0 z\",\n          \"PA\": \"m 241.78,212.35 c 1.11,-1.13 -0.69,-4.84 1.73,-3.09 -0.08,1.32 1.78,1.39 1.57,0.83 3.02,2.42 6.44,-3.33 9.12,-0.92 2.98,0.48 4.49,4.97 2.09,5.28 -1.41,2.51 -2.85,-4.05 -0.02,-1.68 -1.8,-1.71 -1.46,-0.33 -3.65,-2.48 -1.61,-0.09 -3.23,1.89 -3.78,2.6 3.24,1.84 -2.42,3.88 -1.76,0.51 -0.87,1.82 -2.54,-1.89 -4.53,-1.17 -0.78,0.1 -0.34,1.43 -0.77,0.11 z\",\n          \"AR\": \"m 281.51,383.73 c 2.4,1.32 -0.98,1.37 1.51,2.11 1.77,2.42 5.58,3.4 8.14,3.74 -2.66,1.38 -6.38,0.26 -9.44,0.18 -0.35,-1.88 -0.25,-4.06 -0.2,-6.04 z m -3.74,-65.8 c 1.13,-2.35 2.71,-5.43 4.55,-6.82 -0.44,-2.38 -1.63,-6.25 1.48,-7.3 3.3,-1.08 0.72,-5.21 4.14,-6.15 0.57,-1.26 2.94,0.69 4.48,0.41 1.12,2.15 1.13,1.78 2.01,-0.28 3.81,-1.96 5.04,2.92 7.84,4.31 3.17,1.67 7.5,2.66 9.95,5.27 -0.97,1.96 -5.1,5.98 -0.45,5.17 2.5,0.64 4.03,0.33 5.96,-0.2 1.34,-1.24 3.14,-2.44 2.81,-4.7 3.6,-1.07 3.05,5.99 -0.72,5.55 -2.56,1.8 -4.01,3.69 -6.41,6.17 -1.84,1.24 -2.25,3.28 -2.35,5.19 -0.73,2.27 -0.81,4.15 -1.4,6.21 -1.45,2.99 5.21,2.63 3.15,5.81 1.23,1.37 3.08,2.52 0.53,4.44 -1.81,3.61 -6.24,3.53 -9.77,4.18 -1.73,0.82 -6.12,-1.55 -3.98,1.19 0.09,0.85 -1.25,2.97 -0.48,3.95 -2.34,2.46 -6.17,-0.27 -7.67,0.15 -0.93,2.03 0.88,5.54 2.72,4.15 -1.82,-0.73 2.92,-0.79 1.15,1.34 -1.12,0.98 -3.33,-2.2 -3.28,0.26 3.11,0.18 -2.79,1.81 -1.17,4.26 -1.06,1.43 -1.16,1.79 -3.41,2.02 -3.12,0.46 -4.22,4.97 -0.11,5.5 2.5,-1.09 2.92,2.55 0.42,2.24 4.03,0.07 -3.58,2.29 -3.98,4.27 1.91,-0.03 -1.58,3.8 -2.46,0.96 1.37,0.97 -2.11,0.74 0.24,0.81 1.78,0.32 -4,2.73 -1.29,3.19 1.02,1.96 -3.25,1.19 0.2,1.42 1.71,1.25 2.07,2.82 -0.53,1.43 -2.48,-0.71 -5.1,-0.27 -7.6,-0.49 -2.44,-0.66 0.7,-5.17 -3.05,-3.47 -1.46,-1.34 -1.9,-4.01 0.28,-5.03 2.81,-0.82 0.2,-3.91 3,-4.94 -0.54,-1.08 1.09,-2.38 0.32,-3.13 -0.48,-1.25 2.67,-2.7 -0.09,-3.26 -2.17,-0.4 4.2,-0.77 0.96,-1.47 -1.77,-0.08 -0.35,-2.36 -1.11,-3.09 -0.73,-0.48 -1.48,-3.09 0.16,-3.65 -0.77,-2.43 -0.04,-5.42 0.85,-6.82 -0.11,-2.32 2.89,-2.81 0.79,-5.23 -1.04,-3.28 3.32,-4.38 2.05,-7.13 0.95,-1.8 2.76,-4.49 0.99,-5.93 0.39,-2.26 -2.32,-3.83 -0.66,-6.04 0.88,-1.84 1.61,-2.36 0.95,-4.74 z\",\n          \"GB\": \"m 468.18,66.85 c 0.73,0.5 0.74,-2.55 -0.62,-1.46 1.42,0.81 -1.37,0.46 0.75,1.28 z m -13.62,10.44 c 2.34,0.35 1.14,-1.51 -0.23,-0.73 0.93,0.37 0.65,0.52 0.23,0.73 z m 2.74,17.69 c 1.94,-1.8 4.37,-0.14 5.49,-1.81 2.97,0.29 4,-0.48 6.51,-0.56 1.81,0.42 5.84,0.27 6.27,-1.37 -2.46,-0.63 -2.69,0.17 -1.35,-1.05 -0.28,-0.25 1.95,-0.5 0.86,-0.91 4.04,-1.89 -1.41,-3.09 -3.21,-2.42 3.28,-1.88 -4.93,-2.87 -0.12,-2.21 0.67,-0.33 -1.42,-2.82 -3.46,-2.88 -0.53,-3.86 -4.23,-3.68 -7.05,-4 1.74,0.94 4.67,-1.34 1.43,-0.7 2.63,0.19 6.43,-5.05 1.4,-3.72 -2.31,-0.11 -5.91,0.89 -2.97,-0.38 -4.23,0.6 5.56,-2.36 0.85,-2.28 -2.58,0.5 -4.16,-0.23 -4.71,1.2 0.8,1.49 -2.11,0.36 -0.97,1.89 -2.22,0.06 1.76,0.51 -0.25,0.7 1.35,0.33 -0.33,0.5 -0.4,1.51 -2.78,-0.01 2.14,0.13 -0.35,0.25 1.87,0.7 3.13,-1.11 1.67,0.55 1.08,-0.88 -1.51,1.53 -0.73,1.44 0.63,0.34 -0.92,2.98 0.56,0.87 0.23,-1.39 1.08,-2.15 0.48,-0.62 0.95,0.66 0.6,-1.55 1.98,-0.18 -1.65,-0.35 0.4,2.76 -1.47,2.71 -0.18,1.03 2.74,0.56 4.25,-0.04 3.47,-0.7 -2.01,1.39 0.97,2.08 0.38,0.57 1.55,-0.34 0.51,1.4 -0.38,0.59 1.65,1.62 -0.37,1 0.46,0.91 -6.04,-0.4 -2.91,0.49 -2.13,1.49 -0.99,0.66 0.22,1.2 2.05,1.41 -5.17,2.73 -1.98,2.81 -1.74,0.99 2.93,-0.46 1.97,0.67 1.61,0.12 3.23,0.73 4.81,-0.64 -1.47,2.76 -5.23,0.39 -6.34,3.11 -0.58,0.81 -4.7,1.75 -1.57,1.9 z m -2.12,-19.78 c 1.63,-0.56 -1.14,-2.33 -2,-1.23 0.05,0.77 2.63,0.37 2,1.23 z m -1.93,-2.72 c 2.2,-0.45 0.89,-1.79 -0.58,-0.66 -1.07,0.55 0.17,0.89 -0.16,1.32 0.35,-0.04 0.65,-0.32 0.74,-0.66 z m -3.97,10.04 c 0.86,-0.99 5.51,-3.9 6.54,-0.8 0.26,-0.02 1.21,1 0.38,0.7 0.14,1.77 -3.34,0.88 -4.31,0.42 -0.25,1.29 -2.03,-0.1 -2.62,-0.32 z\",\n          \"CR\": \"m 233.81,206.48 c 0.33,-1.46 0.15,-3.05 2.63,-1.75 1.26,-0.41 3.08,0.93 3.6,0.56 0.32,2 4.06,3.34 1.96,3.95 0.36,1.38 0.15,5.52 -0.99,2.05 -0.87,-0.61 0.42,1.87 -1.24,0.14 0.64,-2.43 -3.28,-2.77 -4.36,-4.72 2.83,2.83 -1.34,1.74 -1.6,-0.24 z\",\n          \"PY\": \"m 298.18,298.18 c 1.02,-3.67 1.45,-8.62 6.57,-8.05 3.56,-1.4 6.47,1.43 6.83,4.47 -1.78,2.94 1.27,4.86 3.71,3.31 3.62,0.26 1.32,7.01 5.7,4.96 1.04,1.71 -1.13,4.37 -0.59,6.64 -0.96,2.02 -3.48,3.27 -5.13,3.5 -1.63,-0.54 -5.65,0.06 -5.82,-1.27 1.08,-2.1 4.76,-5.63 0.07,-6.27 -2.98,-1.78 -6.39,-2.41 -9,-4.65 -0.75,-0.97 -1.33,-1.92 -2.34,-2.65 z\",\n          \"GN\": \"m 430.29,204.77 c 0.33,-2.42 4.58,-1.46 3.32,-3.67 1.08,-2.79 4,1.15 6.35,-0.44 0.05,1.12 0.93,1.05 1.95,0.85 0.99,0.45 3.86,0.23 4.5,-1.01 0.56,1.49 3.03,3.02 1.43,4.31 1.61,-0.95 0.9,2.02 1.89,2.32 -0.98,1.79 0.93,2.72 0.52,3.91 1.83,1.69 -2.98,-0.02 -0.4,2.04 -0.69,1.73 -2.13,0.55 -3.22,2.32 -1.39,-0.69 -0.34,-5.01 -3.64,-3.51 -1.2,1.08 0.1,-2.46 -1.36,-3.31 -2.24,-3.04 -4.72,0.61 -6.61,1.65 0.51,-0.33 -1.42,-2.45 -1.34,-2.35 -0.73,-0.99 -3.15,-1.08 -2.02,-2.82 -1.2,1.34 0.12,-1.08 -1.37,-0.28 z\",\n          \"IE\": \"m 444.11,90.46 c -0.13,-0.4 1.83,-0.99 -0.44,-0.38 -1.79,-0.58 2.78,-1.53 -0.36,-1.09 -1.39,-0.37 2.35,-0.25 1.36,-0.92 1.45,-0.45 4.34,-1.04 1.19,-0.5 -3.64,0.91 3.84,-2.69 -0.27,-1.7 -2.94,-0.59 -0.76,-1.01 -0.54,-1.8 -1.56,-0.16 -0.99,-2.2 1.47,-0.74 1.83,-0.48 3.13,-1.09 1.36,-1.72 0.6,-0.78 2.86,-1.81 3.28,-0.91 -0.2,-1.24 2.32,-0.5 0.16,0.34 -1.91,0.64 -2.14,2.7 0.58,1.99 0.61,-0.54 3.44,0.81 2.42,1.05 1.41,1.91 0.22,5.57 -1.81,4.63 -1.85,0.81 -3.68,0.65 -4.27,1.59 -2.38,0.59 -3.98,0.52 -3,-0.14 l -0.42,0.04 z\",\n          \"NG\": \"m 479.33,213.43 c -0.74,-3.13 2.48,-4.29 2.68,-6.99 0.86,-1.84 -1.53,-5.34 1.23,-7.33 0.72,-3.9 6.68,-2.57 8.22,-0.04 3.1,-2.33 6.54,2.67 9.38,-0.98 3.15,-0.3 5.91,1.56 8.43,-1.04 2.01,1.12 1.79,3.72 3.2,4.78 0.16,2.42 -3.57,2.63 -3.59,5.45 -0.53,2.4 -2.48,3.65 -3.28,6.1 -0.85,1.35 -2.04,6.12 -3.53,2.87 -1.55,-1.18 -3.97,1.25 -5.54,3.03 0.46,1.96 -1.51,2.94 -1.66,2.96 -1.22,1.07 -3.43,0.25 -3.54,0.36 -0.26,-0.19 -0.24,1.57 -0.61,-0.46 0,2.25 -0.2,0.07 -0.89,1.32 -0.71,0.74 -3.87,-1.61 -2.56,-2.93 0.19,-0.74 -1.69,0.23 -0.33,-0.75 -1.03,0.52 -0.43,-1.14 -1.01,-0.35 0.07,-2.63 -6.4,-1.2 -3.46,-2.39 -1.78,0.87 -3.75,1.15 -2.82,-1.83 0.04,-0.6 0.02,-1.25 -0.32,-1.77 z\",\n          \"TN\": \"m 492.73,139.84 c 2.59,-1.31 2.36,-3.83 2.33,-6.21 -0.86,-2.13 4.15,-3.27 4.79,-2.72 0.36,2.04 1.6,0.55 2.76,0.85 -1.84,1.44 -2.03,2.98 -0.07,4.34 -0.98,2.24 -4.61,4.64 -0.5,5.19 0.95,-0.06 2.98,2.36 1.05,3.54 -3.75,0.6 -1.75,4.67 -4.77,5.76 -0.31,-3.76 -2.59,-6.57 -5.09,-8.89 -0.09,-0.65 -0.7,-1.13 -0.51,-1.85 z\",\n          \"PL\": \"m 511.14,86.91 c 1.18,-1.07 0.14,-2.61 1.23,-2.64 -2.71,-0.48 3.59,-0.81 4.68,-1.52 1.76,-1.47 7.6,-1.81 6.35,-0.5 1.16,1.25 3.78,-0.39 2.09,0.68 3.65,-0.2 8.06,-0.79 11.41,0.55 1.73,2.21 1.59,4.08 -0.5,5.24 2.09,0.18 -0.1,3.42 2.48,3.85 0.22,1.59 -5.48,2.45 -3.53,5.21 -2.76,-1.91 -6.66,-0.13 -8.87,-1.25 -2.82,0.03 -4.86,-2.26 -7.69,-2.79 0.45,1.84 -2.54,0.21 -1.59,-0.6 -1.56,-0.4 -4.91,-0.16 -3.77,-2 -1.91,-1.14 0.23,-3.58 -2.28,-4.23 z\",\n          \"NA\": \"m 504.49,284.16 c 2.67,-0.59 4.83,-0.78 7.32,0.45 3.68,-0.16 7.38,-0.03 11.06,-0.07 2.77,2.04 6.86,1.64 10.15,1.42 2.28,-0.53 8.45,-1.96 8.32,-0.28 -2.14,0.01 -3.73,3 -5.16,0.58 -2.85,0.57 -7.67,-0.11 -6.03,4.33 -0.21,2.99 1.49,7.83 -2.81,7.26 0.04,5.88 0.15,11.82 -0.09,17.68 -1.9,1.55 -5.65,2.34 -7.23,-0.2 -1.21,-2.07 -2.61,2.63 -4.13,-0.62 -2.03,-2.42 -2.71,-5.57 -2.83,-8.65 -2.09,-3.07 0.35,-7.14 -2.64,-9.75 -2.17,-2.8 -2.68,-6.66 -5.37,-9.07 -0.59,-0.91 -0.65,-2.04 -0.57,-3.09 z\",\n          \"ZA\": \"m 517.64,316.02 c 1.19,-1.75 2.24,-1.55 2.91,0.34 2.74,0.95 4.87,0.75 6.81,-0.97 0.05,-3.37 0.13,-6.75 0,-10.11 2.76,1 1.69,4.81 2.21,5.84 3.4,1.06 4.82,-2.6 6.62,-4.38 2.3,1.28 7.34,2.96 7.44,-1.4 3.59,-1.1 4.32,-5.96 8.43,-6.63 1.66,-1.27 5.99,-0.87 7.01,1.02 1.42,3.41 1.71,6.92 1.74,10.57 0.81,1.51 3.16,0.61 1.66,3.16 -0.2,3.58 -4.05,3.76 -5.13,7.09 -2.03,3.26 -5.17,5.67 -8.18,7.99 -3.36,2.5 -6,2.18 -9.22,3.16 -3.5,-1.28 -6.2,0.4 -9.48,0.63 -2.63,1.1 -5.23,1.31 -6.64,-0.86 -1.62,1.82 -0.59,-2.47 -1.89,-2.84 -1.44,-0.92 2.3,-1.41 0.56,-3.41 -2.1,-2.85 -3.25,-6.13 -4.83,-9.22 z\",\n          \"EG\": \"m 540.62,151.24 c 0.62,-2.12 -0.39,-5.44 2.84,-4.44 3.39,0.06 6.21,1.69 9.5,2.06 2.81,-1.31 3.87,-1.98 4.7,-1.77 0.47,-0.55 4.95,0.31 2.55,0.41 1.25,0.78 3.94,1.03 6.56,0.05 2.29,3.29 1.8,6.73 0.16,10.07 -2.92,-0.61 -3.58,-6.11 -5.17,-5.73 -0.08,2.73 3.43,4.48 3.31,6.42 1.6,2.88 2.84,6.25 4.98,9.06 2.21,1.08 -0.78,0.82 0.53,2.94 -1.41,1.63 -3.38,2.62 -5.01,4.17 -2.06,-1.14 -5.94,-0.88 -6.85,-0.91 -2.87,0.38 -5.9,0.08 -8.84,0.17 -2.85,-0.03 -5.72,0.05 -8.56,-0.01 -0.52,-6.86 0.27,-13.84 -0.17,-20.72 -0.11,-0.61 -0.23,-1.24 -0.51,-1.79 z\",\n          \"TZ\": \"m 553.31,249.69 c 0.05,-2.04 3.18,-2.61 3.48,-4.46 1.9,-1.22 -2.19,-2.05 0.62,-3.11 0.28,-1.93 -2.42,-4.35 1.3,-3.68 3.3,0.31 7.01,-0.92 9.83,1.32 3.58,1.98 7.47,3.62 9.08,6.89 2.99,1.01 3.44,3.34 1.84,5.82 1.21,1.91 2.3,3.4 1.63,5.05 -0.44,2.33 0.58,3.64 1,5.64 -0.1,1.36 3.86,1.55 0.32,3.04 -2.86,1.07 -5.18,1.74 -7.74,2.08 -1.96,0.13 -4.23,-0.06 -5.95,-0.53 -1.33,-1.85 -0.81,-6.41 -3.9,-5.14 -2.7,-1.2 -5.66,-1.91 -7.67,-3.9 -0.76,-3.22 -4.06,-4.84 -3.5,-8.25 z m 28.59,0 c -0.2,2.46 1.25,0.12 0,0 z\",\n          \"GE\": \"m 582.88,113.61 c 2.79,-0.74 6.67,0.6 9.61,1.38 1.83,1.51 4.27,-0.27 6.31,1.21 -0.92,1.66 3.09,0.79 1.37,2.38 3.41,2.97 -2.66,-0.44 -3.79,1.12 -2.66,0.97 -4.88,-0.74 -6.53,-0.77 -1.84,0.24 -3.15,0.32 -2.29,-1.68 -0.23,-2.66 -3.01,-2.48 -4.68,-3.63 z\",\n          \"SA\": \"m 590.61,189.47 c -0.88,-2.99 -3.92,-4.58 -4.89,-7.97 -1.27,-3.07 -6.19,-3.66 -5.52,-7.9 0.39,-2.99 -1.87,-5.27 -4.52,-6.93 -0.65,-2.58 -2.92,-5.29 -4.69,-7.94 -0.06,-2.16 -2.94,-1.82 -2.91,-2.56 0.23,-2.93 1.6,-3.33 4.3,-2.82 1.27,-1.95 4.6,-2.38 4.88,-3.78 -1.29,-1.21 -3.84,-3.03 -0.42,-3.02 3.89,-1.94 8.22,-0.99 11.6,1.61 3.52,1.8 6.13,5.86 10.43,5.55 2.65,-0.37 4.65,0.71 6.44,1.64 2.33,0.35 1.6,2.87 3.14,3.21 1.82,1.38 2.95,2.21 2.39,3.91 0.18,1.21 2.56,4.27 3.61,4.3 1.04,2.59 4.1,5.36 7.63,4.83 3.93,-0.7 5.02,2.87 3.03,5.92 -0.74,3.57 -5.79,2.83 -8.46,4.41 -3.59,1.37 -8.49,0.07 -11.59,3.09 -1.02,2.11 -2.19,3.42 -4.17,1.94 -2.95,-0.03 -6.49,-0.82 -8.92,0 0.04,0.99 -0.26,2.74 -1.34,2.51 z\",\n          \"VN\": \"m 755.17,172.63 c 0.91,-1.98 2.34,0.56 3.54,-0.94 1.04,0.45 2.54,0.26 4.02,-0.74 1.02,-2.2 3.13,0.9 5.07,0.38 -0.86,1.7 0.74,3.22 2.41,3.54 2.96,-0.51 -1.88,2.41 -2.21,1.77 0.48,1.03 -2.31,2.48 -2.75,4.57 -1.54,2.03 3.01,3.94 1.85,4.62 2.04,2.46 3.28,2.9 4.87,4.81 0.05,-0.85 1.95,1.9 1.82,2.41 1.55,3.64 0.92,3.94 1.59,7.16 -0.67,-0.85 -0.52,1.4 -0.52,1.15 0.64,1.16 -2.21,3.59 -4.5,4.49 -1.66,0.8 -2.66,-0.69 -2.43,0.39 -0.15,0.91 -1.37,0.04 0.09,0.95 -1.36,0.66 -1.47,-1.28 -0.44,0.82 -2.44,-1.62 -0.12,-0.77 -0.39,0.78 -1.94,-0.57 -1.84,-2.06 -0.82,0.3 -2.07,0.81 -4.16,4.06 -3.82,0.99 0.78,-2.37 0.92,-2.65 -1.03,-3.75 1.68,-0.88 2.76,-2.29 4.83,-1.03 -0.67,-1.4 -1.31,-3.13 0.78,-2.89 1.61,-0.85 4.31,-1.91 3.12,-4.9 -1.35,-2.37 1.11,-4.83 -1,-6.45 1.26,-1.25 -2.9,-1.71 -2.51,-3.92 -2.51,-1.44 -2.46,-4.26 -5.2,-4.92 -3.29,-1.8 0.52,-1.56 1.45,-2.95 -1.87,-0.74 -0.48,-2.8 -3.09,-2.24 -2.24,1.73 -2.61,-2.83 -2.89,-2.56 -0.49,0.58 -1.33,-1.6 -1.86,-1.83 z\",\n          \"RU\": \"m 971.63,34.32 c -1.5,-0.19 -5.91,2.38 -2.08,1.91 2.33,-1.01 8.44,0.86 8.55,-1.53 -2.14,-0.48 -4.28,-0.89 -6.47,-0.38 z M 699.9,23.18 c -3.3,0.24 -0.12,1.64 0,0 z m -33.68,5.84 c -1.81,2.27 7.41,0.46 3.17,0.09 0.98,-0.56 -2.87,-0.28 -3.17,-0.09 z m -31.55,9.7 c 0.94,-0.02 3.93,1.6 4.89,0.34 -2,-1.28 -6.78,-2.58 -4.89,-0.34 z M 645.6,7.94 c 2.1,0.81 6.73,0.71 7.81,-0.79 -2.55,-0.76 -5.11,0.83 -7.81,0.79 z m -9.12,0.95 c 2.18,0.64 7.53,0.74 7.73,-1.03 -3.66,0.05 -4.99,-0.33 -7.91,0.71 z M 623.91,28.36 c -4.56,1.43 2.66,0.38 3.65,0.95 1.19,0.47 4.53,-0.33 1.95,-1.01 2,0.9 2.82,-0.47 0.2,-0.48 -1.21,-0.19 5.53,0.74 1.33,-0.65 0.73,-0.06 5.38,0.3 2.36,-1.36 2.9,0.68 2.13,-0.65 4.55,-0.29 -1.54,-0.19 1.53,-0.23 1.67,-0.46 0.13,-0.76 -2.34,0.04 0.06,-0.73 2.54,-0.34 5.76,-1.32 8.84,-1.66 4.99,-0.57 10.06,-0.97 14.86,-2.56 -1.87,-2.8 -8.01,-0.49 -8.89,0.04 -3.71,0.39 -7.48,1.2 -11.28,0.77 -1.77,-0.36 -3.22,1.48 -3.1,0.45 -2.2,0.2 -0.1,0.46 -2.95,0.51 -4.08,0.54 -4.67,1.68 -7.82,1.94 0.15,0.68 -4.98,0.18 -1.05,0.85 1.4,0.2 -3.27,0.59 0.06,0.67 3.97,0.31 -5.23,-0.06 -0.89,0.73 1.24,0.01 -4.22,0.13 -1.04,0.61 -2.54,-0.21 -1.1,0.04 0.47,0.44 -2.25,-0.51 -4.99,0.93 -5.67,1.12 0.61,0.54 6.12,-0.52 2.67,0.12 z m -5.88,2.75 c 1.68,0.11 1.59,-0.22 0.24,0.32 1.51,-0.45 -0.47,0.57 -0.24,0.71 -1.06,0.7 -5.24,0.87 -2.19,2.36 1.86,-0.28 4.85,0.15 4.97,0.36 -0.41,0.75 2.03,0.62 0.25,0.77 -1.12,-0.13 0.72,0.92 -0.99,0.67 2.84,0.54 5.41,0.4 7.21,0.61 1.05,0.34 2.39,0.25 0.79,-0.27 2.41,0.43 2.75,0.37 2.04,0.24 4.33,-0.45 -4.41,-0.98 -4.36,-3.97 0.1,-1.36 -0.47,-1.57 0.41,-1.44 0.29,-0.6 1.54,-0.35 -0.03,-0.74 1.52,0.53 2.74,-0.78 0.38,-0.46 1.41,0.09 2.26,-0.42 0.53,-0.26 4.28,-0.45 -3.39,-1.33 -4.83,-0.64 -2.97,-0.14 -2.08,1.5 -4.89,1.6 z m -7.43,9.53 c -1.67,-2.02 -7.61,1.11 -3.2,1.55 0.98,-0.01 5.53,-0.93 3.2,-1.55 z M 626.15,6.83 c 1.89,0.57 9.44,-0.37 3.92,-0.56 -0.39,0.08 -2.89,-0.15 -1.08,0.44 -0.44,0.01 -3.74,-0.5 -2.84,0.12 z m -9.1,3.04 c 1.78,0.7 6.23,-0.28 2.16,-0.59 -0.28,0.25 -3.39,0.33 -2.16,0.59 z m -13.03,0.4 c 0.78,0.15 5.2,-0.26 2.8,-0.59 2.36,-0.85 6.52,-0.52 7.91,-1.38 -1.22,-0.29 -4.91,0.3 -1.6,-0.28 -0.59,-0.58 -3.5,0.14 -1.34,-0.24 -3.13,-0.25 -2.81,0.57 -3.31,0.85 -1.9,0.22 -7.46,0.41 -2.75,0.61 -2.3,-0.15 0.42,0.53 -2.01,0.44 -7.49,0.01 3.22,-0.16 0.3,0.59 z m -7.39,-1.66 c 3.46,1.24 7.04,-0.96 10.56,-0.08 -1.62,-1.32 -7.35,0.24 -10.56,0.08 z M 550.76,41.81 c 2.52,-0.75 5.08,-1.98 6.88,-2.34 0.83,0.45 2.94,-0.54 3.58,-0.55 1.61,0.32 3.8,1.03 0.66,0.9 -2.9,-0.77 1.31,0.46 -0.7,0.49 1.53,-0.15 3.23,-0.12 3.2,0.35 0.65,0.34 -2.22,1.33 0.48,0.31 3.07,-0.65 6.96,-0 10.19,1.01 3.84,1.6 6,1.58 9.2,2.84 3.79,0.78 1.59,4.16 -1.47,4.37 -4.11,1.23 -8.3,-0.06 -12.43,-0.41 -2.29,-1 -5.99,-0.44 -7.02,-1.96 -1.92,-0.17 -4.1,-0.36 -1.1,0.3 -1,0.77 3.67,0.87 0.81,1.12 1.5,-0.05 2.08,0.13 0.26,0.22 0.82,0.03 2.97,0.23 0.97,0.57 1.94,-0.29 6.08,1.31 3.11,2.8 2.07,1.43 0.39,2.95 3.74,2.79 1.49,0.82 5.7,2.62 6.11,0.27 -1.26,-0.29 -6.55,-1.72 -2.32,-2.66 1.78,0.52 3.44,1 2.99,1.37 2.04,-0.56 8.95,1.76 4.63,-1.44 -0.68,-2.3 5.02,-2.1 6.68,-3.68 1.48,0.13 4.51,0.29 3.19,1.35 1.11,-1.54 2.52,1.82 1.93,-0.73 2.17,-1.28 0.18,-2.28 -0.97,-2.98 2.76,-1.95 0.07,-3.27 -0.76,-3.71 2.57,0.57 8.38,-0.19 8.42,2.42 -2.12,-0.45 -6.53,1.12 -2.4,2.09 2.21,1.21 2.8,0.62 5.62,0.23 -0.91,-2.75 3.9,-1.49 3.35,-2.25 -0.81,-0.51 3.82,-0.62 4.96,-1.57 2.57,-0.84 3.87,-0.01 5.58,-0.28 -3.18,-1.57 8.33,-1.77 3.14,-1.4 -1.33,0.27 1.2,-0.16 -0.05,0.79 1.06,1.15 -3.55,0.91 -0.29,1.24 2.91,0.48 5.56,-2.03 9.15,-1.01 2.48,-0.4 6.59,-2.15 6,-0.25 0.12,1.82 2.64,0.33 2.43,-0.11 3.13,0.15 2.36,-1.62 0.18,-2.43 3.11,-1.19 6.74,-0.36 10.13,-0.11 1.58,0.26 3.57,0.97 3.25,1.14 2.44,0.14 5.15,0.73 8.09,1.98 1.56,2.29 5.21,-2.21 1.82,-1.33 -1.13,-1.89 -3.26,-1.52 -4.87,-2.19 1.38,-0.81 1.37,-1.23 1.32,-3.03 -4.77,-0.76 4.39,-1.49 4.45,-4.43 1.95,-2.69 4.8,-1.07 8.35,-1.33 4.1,-0.82 2.93,3.44 0.05,3.74 1.68,0.94 3.6,2.18 1.73,3.93 0.86,1.89 -1.11,4.11 2.42,4.15 0.76,1.93 -3.34,4.01 -4.19,4.65 -2.24,1.3 -6.63,0.18 -7.57,0.78 3.24,1.44 7.59,1.87 10.57,0.09 2.11,-0.42 4.07,-2.19 5.25,-3.57 -3.52,-2.7 3.66,-3.35 5.21,-2.4 3.33,0.55 -0.34,4.1 3.31,3.5 2.06,0.07 3.91,-0.08 1.06,-0.3 -2.07,0.51 -2.85,-1.52 -0.6,-1.72 -1.7,-3.02 -6.11,-2.78 -9.2,-2.28 -3.32,1.25 -4.05,-3.19 -1.18,-4.22 -1.37,-1.81 -5.14,-2.02 -1.67,-3.51 2.76,0.11 4.47,-1.6 3.74,-2.88 4.25,0.41 -2.19,5.52 2.88,4.66 2.84,-0.4 5.34,1.47 8.25,0.58 -2.11,0.46 -2.66,-1.43 -5.43,-1.02 -2.46,0.05 -3.97,-2.26 -0.53,-1.84 1.8,1.27 5.53,-0.37 1.63,-0.18 1.45,-1.57 8.02,-0.68 8.84,0.14 1.57,1.18 8.01,1.5 4.08,-0.7 -2.4,0.18 -4.08,-0.51 -4.45,-2.45 -2.02,-1.1 4.3,-1.77 7.14,-1.4 3.48,-0.3 8.76,0.04 11.02,-1.07 2.34,-0.1 -4.74,-0.7 -2.39,-0.95 -0.42,-0.13 4.58,0.38 1.01,-0.39 0.57,0.25 -3.6,-0.71 -0.97,-0.71 1.82,1.27 2.53,-0.93 3.62,-0.68 -3.88,-0.68 2.51,0.27 3.54,-1.02 2.47,-0.31 7.11,-1.08 10.59,-1.06 1.75,-0.02 6.32,-0.75 2.14,-0.57 -3.2,0.14 2.48,-0.71 1.89,-0.48 1.44,0.03 8.01,-0.59 4.39,0.68 2.73,-0.33 6.46,-0.1 6.71,-0.79 1.53,-0.5 7.67,0.84 3.11,-0.6 0.9,-0.72 6.18,-0.34 8.72,-0.09 -3.83,0.29 -4.57,-2.17 -0.62,-2.7 0.92,-0.73 6.69,-1.44 9.5,-0.53 5.79,0.7 -7.79,1.3 -2.14,1.22 1.05,0.09 4.77,-0.38 1.9,0.35 1.69,-0.44 8.06,-0.46 3.4,1.12 -1.39,0.48 3.57,0.27 4.44,-0.48 3.58,0.25 7.62,-0.79 10.87,0.72 -0.84,0.42 2.48,-0.24 1.6,1.27 1.98,-0.48 0.95,-0.87 2.48,0.42 2.08,1.99 -5.7,-1.07 -2.24,0.93 4.73,-0 -1.11,2.27 -2.81,2.4 -1.94,0.31 -5.86,1.12 -5.85,1.26 -0.9,1.24 -6.22,1.45 -8.63,2.71 -1.8,0.05 -6.59,2.58 -2.26,1.24 2.16,-1.56 5.9,-0.49 8.13,-1.3 2.01,-0.61 3.05,-0.34 6.04,-1.01 -1.37,-0.24 -5.76,0.35 -2.07,-0.9 2.24,0.69 3.44,-0.75 4.09,0.77 2.3,1.09 4.96,-1.83 4.83,0.98 1.66,0.24 1.77,0.4 0.3,-0.3 4.8,-0.78 9.67,-0.25 14.49,-0.31 1.31,0.49 -2.79,0.97 0.54,1.44 4.1,0.37 8.27,0.6 12.35,0.24 1.32,-0.38 -1.11,-2.03 1.18,-1.71 2.19,-1.28 4.98,1.13 7.38,0.3 -0.95,0.87 4.04,-0.89 5.45,0.66 1.57,0.25 2.9,0.72 0.29,0.99 1.1,0.24 3.22,0.23 0.84,0.44 3.89,0.1 -3.53,0.87 0.5,0.78 3.52,0.89 -0.52,1.51 -2.08,0.92 1.24,2.04 2.83,0.75 2.99,0.75 0.84,0.89 -2.7,0.35 0.17,1.39 2.02,1.74 6.76,2.73 7.4,-0.04 1.99,-3.1 6.22,1.88 8.33,-0.22 2.53,-1.29 6.77,0.83 8.07,0.88 -1.07,-0.26 2.51,-0.22 0.21,-0.7 0.86,-1.55 7.15,1.34 4.48,-1.25 -1.52,-0.35 3.99,-1.31 0.04,-0.9 -3.64,-0.53 4.95,-0.88 3.67,-1.44 -1.78,-1.2 3.85,0.5 4.95,-0.03 3.78,0.46 7.81,-0.29 11.41,1.08 -1.97,0.11 -6.62,-0.64 -6.82,0.4 1.84,-0.05 5.37,-0.93 6.18,0.11 -1.39,0.83 -1.65,0.91 -1.09,-0.09 -0.72,0.29 -1.94,-0.53 -1.24,0.75 -5.07,-0.17 0.46,1.63 2.66,-0.53 2.46,-1.06 7.58,-1.06 8.91,0.76 -1.79,-0.38 -4.53,0.84 -1.05,0.47 1.15,0.28 4.44,0.6 1.29,1.23 2.21,-1.04 6.84,0.24 4.96,0.85 5.17,1 10.36,-1.23 15.56,-0.33 2.68,-0.3 8.1,1.17 6.57,2.79 -1.16,1.6 4.4,1.44 5.94,1.15 4.24,-0.26 8.41,0.19 12.63,0.51 2.15,-0.66 4.01,-1.15 5.28,0.74 2.64,0.49 6.14,2.47 6.98,0.05 -1.24,-1.52 -3.26,-0.69 -1.32,-2.19 0.7,-1.37 8.12,1.13 7.9,0.16 3.46,0.52 7.04,-0.18 10.46,0.85 1.35,0.51 6.14,0.35 4.29,0.92 0.79,-0.46 4.68,1.19 2.41,0.52 2.16,0.46 5.41,1.1 5.43,1.55 1.19,0.56 3.35,0.93 0.79,0.09 2.16,0.97 5.03,1.12 7.95,2.4 1.33,0.64 1.4,1.9 1.88,2.97 0.84,1.19 3.75,0.75 1.22,0 2.47,-0.77 -2.9,-1.74 0.45,-1.46 1.76,0.08 2.44,0.01 2.51,0.67 0.81,-0.43 3.29,0.07 0.65,-0.46 2.22,-0.49 6.18,1.78 7.69,2.37 -0.96,0.09 1.65,0.5 -0.56,0.77 -0.76,2.14 -4.58,-0.74 -1.93,1.06 -2.47,0.6 -2.35,-0.21 -5,-0.36 2.44,0.29 1.25,1.6 0.94,1.38 2.18,0.9 -3.6,1.04 -1.04,1.29 -1.43,-0.11 3,1.25 0.18,0.73 -0.3,0.17 -1.68,1.32 -1.72,-0.36 -1.51,1.26 -4.85,-0.64 -6.58,-1.32 -1.81,-3.33 -6.72,0.72 -8.23,-2.23 -0.61,-0.31 1.99,-2.18 -0.21,-0.88 -1.28,-0.91 -1.46,-0.1 -2.74,0.68 2.99,0.99 -0.19,1.65 -0.28,1.65 3.75,-0.02 -5.6,2.72 -3.73,1.89 -2,0.91 -6.16,-1.99 -6.2,-0.85 3.84,0.06 0.17,0.91 -1.55,0.24 2.36,0.43 -0.59,1.16 1.81,0.69 1.75,-0.28 2.11,-0.33 2.58,1.05 2.16,-0.14 3.34,0.5 3.34,1.94 -1.67,-0.07 1.26,0.52 1.03,0.8 2.43,1.15 0.52,3.62 -2.11,2.22 -1.33,0.29 -4.96,-1.63 -2.89,-0.15 -3.34,0.63 -6.6,1.85 -8.87,2.22 -2.5,0.64 -3.1,1.12 -4.43,1.7 -0.56,0.3 -2.37,1.48 -4.94,1.89 -0.74,1.29 -1.85,2.25 -3.1,0.15 -3.55,-1.16 -6.98,0.24 -9.9,1.78 2.5,-3.25 -2.42,-0.68 -2.59,-0.69 -0.29,1.42 -3.63,-0.72 -3.75,0.28 -2.2,0.8 -0.97,2.76 -2.67,3 -2.8,1.07 -1.97,4.41 0.19,2.71 3.15,0.22 -2.73,3.14 1.25,3.62 1.02,2.49 -3.36,1.43 -0.75,0.35 -1.62,0.1 -5.18,2.81 -2.6,4.89 -1.79,1.07 -7.62,0.75 -5.76,4.09 0.54,0.69 -4.84,0.51 -3.78,1.21 0.26,2.66 -4.19,5.47 -5.34,4.98 -1.23,-1.82 -0.28,-3.97 -1.79,-4.95 -0.41,-3.63 -2.89,-7.71 0.14,-10.94 0.78,0.26 2.73,-2.06 2.57,-2.91 2.48,-0.16 4.7,-0.97 6.7,-2.47 1.76,-2.35 5.38,-3.06 7.18,-4.99 2.5,-0.93 5.74,-0.98 4.96,-3.13 0.24,-2.16 3.65,-2.8 3.73,-2.53 2.99,0.51 -2.88,-1.13 -4.15,-0.39 -2.79,0.04 -0.26,3.84 -2.75,2.81 -2.29,-0.33 -6.12,3.78 -7.01,2.35 1.19,-1.04 -2.28,-0.34 -0.36,-1.72 2.14,-2.08 -0.23,-0.94 -1.49,-1.11 -2.69,-0.3 -6.59,-0.44 -8.43,1.64 -1.71,1.5 -7.4,3.4 -6.03,4.97 0.96,-1.1 3.85,1.21 0.73,0.68 -3.09,0.1 -5.55,0.89 -8.63,0.83 -3.18,-0.96 4.91,-0.49 0.68,-1.26 -2.13,-0.49 -5.39,-1.56 -7.38,-0.56 1.01,0.46 -1.95,-0.17 -0.43,0.88 -2.55,-0.2 -5.58,-0.7 -7.83,0.16 -2.34,-1.32 -6.17,-0.32 -9.07,-0.26 -3.53,1.16 -5.89,3.73 -9.04,5.38 -3.56,1.69 -5.69,4.21 -9.53,5.74 -2.6,0.19 -3.31,2.3 -0.27,2.04 2.61,-0.94 2.14,1.14 2.26,2.27 2.19,0.07 -0,-1.75 2.56,-1.47 -3.02,1 1.77,0.77 -0.67,1.65 -1.82,2.34 5.63,-2.43 2.06,0.65 2.26,-0.43 0.18,-3.46 3.17,-2.04 1.97,-0.28 4.66,2.3 5.58,3.22 -1.6,0.15 -1.95,-0.45 -0.19,1.01 -0.15,1.5 1.17,2.27 -1.22,3.44 -1.55,2.06 -0.54,4.25 -1.6,6.27 0.41,3.03 -4.64,4.81 -5.79,7.92 -2.09,2.7 -5.25,4.3 -7.35,6.9 -1.64,1.88 -5.23,4.21 -7.92,3.24 -1.8,0.11 -0.61,-1.9 -2.3,-0.7 -0.16,-1.65 -1.87,2.49 -3.28,1.31 0.46,1.81 -1.75,-1.25 1.09,-0.86 1.52,-2.63 -2.24,-6.36 2.34,-6.58 3,2.1 3.84,-1.39 5.39,-2.88 -0.38,-2.5 3.83,-3.99 1.6,-5.81 -3.45,0.24 -6.72,3.17 -10.12,1.43 0.13,-2.81 -1.87,-2.89 -4.03,-4.41 -2.43,-0.09 -5.88,-0.38 -5.77,-3.74 -1.45,-1.8 -2.14,-4.2 -3.6,-5.7 -2.3,-1.41 -5.07,-1.76 -7.89,-2.02 -2.79,0.1 -7.06,0.22 -8.32,2.4 4.53,0.5 -1.32,3.5 -1.93,5.45 -0.81,1.4 -0.35,2.28 -2.87,2.41 -2.78,2.08 -5.92,-1.06 -8.94,-0.42 -3.56,-2.26 -6.54,2.47 -10.36,1.78 -3.78,1.2 -8.2,0.14 -11.23,-1.73 -3.43,-2.39 -7.69,-0.54 -11.49,-0.62 -3.53,0 -2.29,-4.58 -6.08,-3.84 -3.47,-1 -7.32,-2.39 -8.77,1.51 2.67,2.58 -1.84,4.43 -4.22,3.08 -2.65,0.3 -5.06,-0.22 -6.91,-1.86 -3.05,-0.27 -5.04,-1.01 -8.15,0.62 -3.41,0.72 -4.12,2.94 -7.39,2.57 -2.57,3.54 -4.17,-2.26 -5.85,-0.12 -3.45,0.09 -4.91,-3.11 -7.92,-4.23 -1.79,0.67 -5.66,1.46 -6,-0.37 -1.76,-1.57 -3.29,3.16 -4.42,-0.56 -2.08,-2.7 -4.08,-5.81 -7.45,-6.99 -2.94,-0.65 2.26,-2.26 -1.52,-1.44 -2.68,0.52 -4.55,2.65 -7.12,2.07 -1.71,1.15 -1.51,-1.01 -0.09,-1.09 -0.96,0.21 -3.6,-0.82 -3.19,0.06 -0.64,-1.58 -2.14,0.01 -4.41,-0.88 1.6,-1.26 -0.94,-3.7 -2.77,-2.54 -3.35,-1.83 -4.38,0.94 -7.69,1.08 -3.32,-0.09 -5.6,1.49 -8.71,1.36 -2.79,0.62 -4.93,1.23 -7.82,0.89 -0.95,0.56 -0.85,1.29 0.85,1.36 -3.67,0.63 4.3,1.18 0.3,1.57 -1.27,-0.73 -3.63,0.61 -1.72,1.73 -1.63,0.74 -4.26,1.08 -1.26,1.96 2.69,-0.04 3.89,2.45 0.51,2.77 -2.59,-1.22 -3.45,1.54 -6.07,-0.6 -1.28,-1.9 -3.02,0.94 -4.63,-0.61 -2.08,0.38 -3.98,2.57 -6.19,0.18 -0.36,0.13 -0.41,2.64 -0.76,0.47 -2.31,-1.41 -5.48,-3.19 -7.58,-1.69 -2.42,-1.77 -3.19,0.57 -6.05,1 -0.91,1.62 -3.37,0.79 -1.95,3.21 -1.78,1.59 -3.66,-3.44 -4.48,-0.03 -2.34,1.01 0.7,2.74 -1.77,3.83 1.72,0.88 1.16,2.91 3.55,2.32 1.92,0.42 4,3.42 2.02,3.3 3.17,0.87 0.68,1.16 0.15,1.87 0.14,0.2 -3.39,1.02 -3.1,0.78 0.05,0.65 -2.16,2.52 -2.08,3.59 2.36,0.01 1.19,3.75 2.55,1.49 -3.08,2.65 4.55,4.97 1.08,6.89 -2.15,1.53 -4.26,-2.15 -6.69,-2.29 -0.24,-2.22 -3.9,-0.8 -5.31,-1.29 -3.01,-1.83 -6.89,-1.88 -10.23,-2.23 -1.78,-0.19 -4.76,-3.39 -6.74,-3.27 -1.46,-0.98 -3.03,-1.13 -2.39,-2.05 -0.52,0.01 3.77,0.8 2.26,-0.72 1.23,-0.82 1.38,-1.35 2.52,-1.35 -1.99,-0.82 -2.6,-1.9 -0.03,-1.48 0.08,-0.87 4.3,-1.72 0.79,-1.49 -1.7,0.19 0.99,-0.52 -1.29,0.13 -1.34,-2.6 5.48,-1.24 4.27,-3.36 0.06,-0.72 -0.91,-1.17 0.33,-1.54 -1.63,0.07 2.15,-2.61 -0.74,-2.02 -2.43,-1.28 -4.96,-0.76 -6.99,-2.3 -2.48,1.01 -5.03,-0.02 -5.75,-2.1 -2.48,0.45 -2.83,-1.27 -2.31,-2.1 -1.74,-3.01 -5.47,0.3 -7.34,-1.15 -0.7,-1.78 -1.35,-3.13 1.38,-2.27 3.16,-0.33 0.44,-2.32 -0.94,-2.06 -0.65,-1.4 -3.51,-2.48 -2.43,-4.79 -2.86,-1.11 -4.55,-0.8 -7.42,-1.56 -0.34,-1.92 -1.75,-2 -1.49,-3.59 -2.06,-0.78 1.47,-1.38 -0.64,-2.52 -0.39,-2.21 2.22,-2.82 1.75,-4.13 1.41,-0.3 5.09,-0.54 5.47,-0.65 -2.54,-0.54 -4.68,-1.21 -4.25,-2.06 -4.58,1.28 2.09,-1.55 3.43,-2.54 2,-1.25 7.48,-3.89 2.47,-5.11 -3.07,-0.74 -0.25,-1.08 -0.51,-2.36 -2.14,-0.64 -0.29,-1.41 -2.37,-1.96 0.74,-0.38 -0.53,-2.35 1.36,-2.08 -1.86,-2.36 -3.8,-3.95 -0.44,-5.63 -1.21,-1.25 -5.27,-1.27 -3.5,-3.22 z m -24,40.71 c 0.88,-1.73 2.7,-1.43 4.13,-2.53 -2.85,1.07 0.58,1.91 0.81,0.07 2.08,0.22 6.34,0.97 4.11,2.79 -2.19,-0.03 -8.09,0.44 -7.89,-0.69 2.88,-0.71 -0.85,-0.45 -1.16,0.35 z m 223,-67.55 c -4.59,2.22 3.76,0.36 5.68,0.55 2.84,-0.28 8.08,0.35 9.36,-1.46 -2.8,-0.94 -5.59,-1.47 -8.48,-0.35 2.46,-1.14 1.51,-1.97 -0.83,-1.28 0.14,-0.04 -4.27,0.2 -2.19,0.83 -2.54,-0.13 0.16,1.15 -2.09,0.62 -0.66,0.05 -1.03,0.67 -1.45,1.09 z m -15.19,-4.39 c -2.63,0.17 1.01,0.57 -1.42,0.71 -2.13,0.29 -4.71,0.8 -1.08,0.67 1.38,0.3 5.95,1.77 9.06,1.42 2.18,0.49 5.08,0.87 8.3,-0.03 -1.67,-0.82 -3.11,-0.54 -0.78,-1.18 2.16,-2.45 -3.42,-1.89 -4.48,-1.31 -2.13,0.5 -2.34,0.64 -0.16,-0.48 -3.02,-0.52 -6.41,-0.32 -9.44,0.2 z m -8.47,-0.91 c 1.77,-0.54 6.96,0.07 2.33,-0.04 -2.54,0.03 3.07,0.57 -0.35,0.37 0.98,0.78 6.2,0.36 8.94,-0.08 2.09,-0.12 5.73,0.71 4.54,-1.43 4.76,-0.14 -1.67,-0.62 -3.05,-1.86 -1.06,-0.3 -4,0.25 -1.31,0.2 -2.23,0.29 -7.04,0.42 -7.73,1.41 2.63,0.43 -5.01,1.09 -0.54,1.12 -0.45,-0.23 -3.92,0.04 -2.82,0.32 z m -1.28,0.91 c 0.46,0.98 4.67,0.37 2.23,0.78 2.23,0.88 6.89,-1.15 2.05,-0.83 -0.89,0.18 -5.17,-0.51 -4.28,0.05 z m 160.93,14.73 c 1.89,0.35 7.14,-1.17 2.58,-1.29 -3.24,-0.5 -6.78,-0.05 -9.54,-1.02 -3.43,1.66 3.77,2.03 5.24,2.25 l 0.85,0.04 z m -25.17,3.62 c -2.36,0.58 3.2,-0.42 4.04,0.33 2,0.5 8.21,0.71 3.78,-1.2 -2.87,-1.22 -5.22,0.19 -7.82,0.87 z m -8.42,-6.04 c 0.81,-0.01 1.46,1.28 -0.37,0.79 2.5,2.49 6.34,1.41 8.91,1.5 1.91,-0.24 6.38,-0.99 5.66,-0.08 1.51,-0.16 6.2,-0.24 2.21,-0.64 -3.44,-0.75 -2.13,-2.75 0.12,-1.6 -2.84,1.84 5.45,2.38 5.47,0.44 3.07,-0.14 -3.3,-1.64 -4.56,-1.03 -2.46,0.55 -4.5,-1.5 -5.62,-0.66 -0.9,0.21 -1.25,2.33 -2.11,0.68 -2.65,-0.48 -5.34,-1.7 -8,-0.36 0.83,1.16 -1.43,-0.07 -1.71,0.96 z m 80.88,57.08 c -3.12,-0.06 3.2,3.15 -0.02,0.55 -0.07,-0.17 0.2,-0.4 0.02,-0.55 z m -7.79,-9.11 c 1.7,0.2 5.64,-2.63 1.53,-1.36 -0.47,-0.2 -0.5,1.33 -1.53,1.36 z m -40.64,36.73 c -2.29,0.38 -3.51,1.08 -5.23,2.73 0.13,-0.02 4.7,-2.12 5.23,-2.73 z m -7.3,2.84 c -1.21,1.14 -2.89,3.28 -0.55,1.04 0.9,-0.66 2.7,-0.78 0.55,-1.04 z m -9.66,-26.71 c 0.75,1.38 -0.43,1.65 -1.91,1.68 -0.17,2.36 -1.31,4.65 0.77,6.5 -1.23,3.17 -0,6.76 -0.66,9.65 0.05,1.47 -1.02,7.12 1.07,3.3 1.11,-1.76 3.47,1.34 3.17,0.46 -0.05,-2.77 -1.34,0.29 -1.58,-2.82 -2.96,-1.39 1.1,-6.32 1.28,-5.58 -0.61,-1.26 4.06,1.68 3.46,1.59 -1.93,-2.09 -2.68,-5.85 -3.35,-7.75 -0.75,0.02 -1.18,-3.19 -0.15,-2.9 -0.66,-1.12 -0.96,-3.6 -0.05,-0.95 -0.34,-2.36 -1.49,-2.05 -1.26,-3.92 -0.65,-0.64 -2.51,-0.14 -0.77,0.74 z m -14.76,-2.79 c -0.45,1.81 3.64,-0.2 1.02,-0.48 -0.44,-0.39 -0.62,0.49 -1.02,0.48 z\",\n          \"HT\": \"m 266.35,183.21 c 0.99,0.03 4.39,1.37 4.7,-0.3 -1.42,-0.77 -0.59,-2.99 -2.83,-2.75 2.53,-1.63 5.89,0.33 4.66,2.79 -1.39,0.24 1.33,2.8 -1.22,1.39 -1.06,-0.01 -8.54,0.81 -5.31,-1.14 z\",\n          \"BA\": \"m 515.61,108.85 c 1.82,-0.49 4.8,-0.16 7.39,-0.06 1.25,0.88 3.38,0.03 2.04,2.13 1.88,0.97 -0.1,0.88 0.72,2.1 -1.5,0.44 -2.48,1.02 -2.64,2.86 -2.69,-0.82 -4.05,-3.01 -6.27,-4.99 0.04,-1.12 -1.73,-0.78 -1.25,-2.05 z\",\n          \"IN\": \"m 661.02,168.77 c 2.15,-2.64 10.72,0.22 6.65,-5.13 -1.73,-1.18 -1.11,-2.71 -2.75,-3.65 0.53,-4.88 5.65,-1.01 7.64,-4.52 1.73,-3 5.85,-5.29 5.99,-8.59 1.43,-1.5 3.18,-2.4 0.21,-3.07 -1.63,-1.59 -1.49,-3.83 -1.68,-5.26 3.14,-1.38 6.62,1.29 9.3,-2.1 2.3,-1.39 2.86,2.18 4.57,3.04 -1.41,1.43 3.61,5 -0.35,4.78 -2.13,-0.68 -0.03,3.77 1.34,3.53 2.41,1.42 5.57,2.61 2.52,5.25 0.4,3.43 5.65,4.33 8.7,5.38 3.86,0 6.89,3.07 10.87,2.88 4.34,1.45 0.38,-6.23 4.38,-4 -0.49,4.9 5.68,2.25 8.5,2.78 1.05,-1.6 -2.06,-2.93 1.09,-2.86 3.05,-2.18 5.91,-4.26 9.57,-3.92 1.62,-0.78 1.39,0.8 2.11,1.23 -1.51,2.39 4,0.44 1.53,3.35 0.15,2.57 -3.8,0 -5.02,2.87 -1.52,2.68 -1.82,7.66 -5.35,7.78 0.34,1.88 -1.46,7.6 -2.6,3.28 0.56,-3.52 -1.66,-2.19 -2.84,-1.16 -2.77,-2.69 5.71,-4.36 1.08,-5.77 -2.64,-0.13 -5.78,0.48 -5.97,-2.74 -1.64,-0.43 -5.01,-2.22 -3.37,1.42 3.43,0.75 -3.64,3.11 0.58,3.64 -0.54,2.11 2.77,6.55 0.32,7.27 0.14,-2.94 -1.22,2.41 -1.79,-0.81 0.35,-1.41 -1.28,1.63 -2.67,1.7 -0.84,2.4 -2.43,5.18 -5.24,4.8 -1.25,2.86 -5.37,5.36 -8.05,7.72 -1.36,2.67 -8.24,3 -6.05,7.72 0.67,2.63 -0.29,5.48 -1.25,8.74 1.46,2.18 -3.6,4.23 -1.64,5.29 -3.2,-0.57 -3.39,5.55 -6.34,1.92 -1.91,-2.81 -1.52,-5.2 -3.5,-8.28 -2.54,-3.3 -2.51,-7.76 -4.9,-11.15 -1.54,-3.02 -2.32,-6.83 -2.3,-10.07 -0.66,-0.95 -0.81,-5.32 -0.56,-7.14 1.96,-0.46 -2.38,-1.05 0.2,-1.88 -3.14,-0.91 -1.37,5.66 -5.59,4.12 -2.56,-0.4 -7.37,-5.37 -2.47,-4.86 3.91,-3.18 -3.31,1.14 -3.81,-2.38 -0.35,-1.97 0.32,-0.7 -1.1,-0.85 l 0.06,-0.34 z m 68.31,30.59 c -0.76,2.09 -0.39,5.08 0.27,1.28 0.49,-1.51 0.24,-4.58 -0.27,-1.28 z\",\n          \"CN\": \"m 676.19,124.66 c 0.98,-1.83 3.25,-2.89 5.46,-3.21 1.72,2.58 3.49,-2.51 6.01,-1.25 1.96,-1.24 5.07,-2.13 6.86,-3.29 -0.65,-2.73 3.04,-2.13 0.47,-5.26 0.7,-1.82 -0.76,-1.93 -1.33,-2.46 2.18,-1.71 6.37,0.32 7.36,-1.37 -1.71,-0.44 0.85,-4.93 2.17,-4.89 2.66,1.09 7.77,1.38 6.25,-2.85 1.12,-1.02 3.17,-0.74 3.53,-2.58 3.42,-0.89 2.49,1.94 5.53,2.87 2.83,-0.07 6.03,2.03 5.68,5 -0.4,1.63 -1.19,3.52 1.67,3.39 3.81,-0.25 7.11,1.27 10.59,2.43 0.94,2.78 3.39,5.13 6.71,4.15 3.26,0.94 6.58,-0.02 9.86,0.56 3.02,1.55 6.81,1.97 9.99,2.52 3.46,-1.14 7.28,-2.67 11.14,-2.14 3.36,0.17 5.74,-2.56 8.43,-3.8 -3.55,-2.2 0.96,-5.11 3.39,-2.82 2.7,-0.29 4.66,-2.42 7.58,-2.27 1.89,-2.66 5.14,-2.73 8.12,-3.34 3.52,1.8 3.22,-1.63 0.5,-2.54 -2.9,-2.4 -7.09,1.31 -9.71,-1.03 1.84,-1.66 2.23,-6.59 5.67,-4.32 1.73,-0.47 5.28,-0.91 4.66,-2.74 0.65,-2.25 5.72,-3.82 3.46,-5.87 -3.15,-0.11 2.81,-2.56 4.29,-2.25 3.47,-0.72 6.65,0.61 9.85,1.03 1.47,1.29 2.72,2.4 3.14,4.21 1.6,1.71 1.34,4.47 3.28,5.65 2.63,-0.12 6.8,1 7.49,2.86 -0.06,3.38 4.81,2.8 7.08,1.24 2.05,-0.65 5.63,-1.43 3.84,1.81 -2.18,1.1 -1.62,4.59 -3.99,5.76 -0.74,2.42 -3.94,-0.86 -5.37,1.36 -0.68,1.23 1.33,6.54 -1.79,6.4 0.65,1.89 -2.28,-3.04 -2.11,0.29 -1.2,1.07 -3.81,1.45 -4.57,1.93 0.9,3.73 -4.61,-1.94 -5.15,1.91 -2.77,1.4 -5.47,3.91 -8.38,3.98 -1.83,0.26 -4.94,3.72 -5.71,2.3 1.87,-0.72 2.25,-1.37 -0.02,-1.55 1.16,-1.01 4.13,-2.63 1.82,-4.16 -2.71,0.14 -4.38,2.63 -7.17,3.79 -0.26,2.82 -6.3,-0.06 -4.28,3.62 1.87,1.47 4.4,-0.22 3.61,3.08 2.93,1.27 3.81,-3.22 6.7,-0.84 1.85,0.07 4.74,0.71 2.12,1.94 -0.85,-0.61 -2.49,0.66 -4.04,0.94 1.1,0.5 -1.5,1.4 -1.84,1.14 0.85,1.18 -5.19,3.68 -0.97,4.61 3.04,0.63 2.02,5.26 4.61,6.08 0.38,0.89 2.57,2.29 -0.03,1.31 -1.71,-0.33 -3.98,-0.32 -4.77,-1.14 0.2,0.17 1.18,1.11 3.05,1.01 1.24,0.82 5.05,3.07 1.14,3.56 -0.82,1.12 -4.41,1 -1.66,1.07 0.15,1.25 2.24,-0.9 3.32,0.96 1.68,7e-4 -2.37,2.24 -0.01,0.92 1.46,1.66 -2.03,0.31 -0.33,1.92 0.25,0.71 -2.53,0.11 -0.44,0.9 0.21,2.07 -1.3,-0.07 -2.09,1.69 -0.34,-1.27 0.17,3.3 -1.32,1.9 0.31,1.21 -1.28,2.5 -1.15,1.82 -1.91,-0.55 1.16,1.12 -1.18,1.94 -2.52,-0.3 1.93,-0.49 0.12,1.08 0.75,1.16 -1.52,-0.46 -0.8,1.16 -1.3,-0.69 -1,1.85 -2.11,1.43 -1.44,0.56 -1.84,0.37 -1.2,1.22 -0.58,1.11 -3.91,1.83 -3.53,2.7 -0.54,1.17 -3.16,1.16 -3.37,1.31 -0.21,0.3 -1.88,0.26 -2.25,0.37 -0.4,-0.54 -0.32,1.21 -1.98,0.36 -1.09,0.06 -1.43,-1.98 -0.79,-1.66 -2.48,0.28 0.3,1.37 -0.8,2.65 -1.59,-2.37 0.45,1.1 -1.14,0.16 -0.53,2.04 -2.1,-0.49 -2.11,1.18 -1.28,-0.82 -3.27,1.61 -4.19,0.79 -0.95,0.09 -1.82,1.58 -1.18,1.78 1.08,2.17 -1.87,1.65 -1.57,0.11 -0.21,-1.58 0.77,-2.41 -0.73,-2.43 -0.66,1.54 -1.9,-0.84 -2.21,-0.27 -0.84,-1.36 -0.36,1.63 -2.6,0.24 -1.39,0.29 -4.02,-1.33 -2.89,-2.75 -0.33,-1.32 -3.39,-0.8 -4.13,-1.88 -1.6,1.63 -3.37,1.75 -4.75,2.01 -0.87,-0.55 -1.87,0.5 -2.97,-0.31 -0.93,1.27 -3.59,0.13 -1.88,2.76 1.13,2.12 -2.19,1.84 -1.82,-0.17 -3.05,2.72 -2.46,-1.51 -5.31,-0.98 0.41,-1.66 1.61,-2.8 -0.66,-3.07 -0.66,-2.14 -0.16,-3.51 -3.08,-2.08 -1.52,-0.11 -0.44,-4.15 1.31,-4.64 1.63,-0.67 1.84,-5.2 0.32,-5.63 -0.62,-0.82 -1.93,-3.56 -3.2,-1.93 -1.58,-0.67 -3.46,0.33 -2.03,-1.74 -0.71,-0.71 -1.24,0.1 -0.84,-1.18 -1.66,-0.28 -3.02,1.33 -4.67,0.18 -3,0.65 -5.1,5 -7.99,3.9 -2.19,-0.27 -4.92,-2.17 -6.72,0.26 -1.39,2.29 -0.88,0.42 -1.34,-0.74 -2.24,1.12 -6.05,-0.24 -7.37,0.15 -1.72,-1 -3.07,-1.32 -5.2,-2.73 -2.13,-0.8 -4.8,-3.35 -7.47,-3.95 -1.43,1.75 -3.37,-1.06 -4.89,-1.65 -1.25,-0.09 -1.77,-1.57 -2.84,-1.23 0.24,-1.36 -2.08,-4.64 0.61,-2.74 3.94,-1.31 -2.27,-3.7 -0.23,-5.46 -2.53,-0.9 -2.49,-4.23 -5.76,-3.62 -1.19,-0.91 -2.65,-0.68 -2.66,-2.99 -1.4,-0.97 -5.85,-1.1 -2.11,-2.04 -0.68,-1.91 -0.62,-4.36 -3.56,-3.51 0.02,-1.05 -0.58,-1.09 -0.48,-2.31 z m 97.06,56.63 c -1.11,3.9 4.72,3.69 5.27,0.66 1.63,-1.13 0.73,-3.74 -0.44,-2.35 -2.21,-0.55 -3.09,0.13 -4.83,1.69 z m 14.89,-8.96 c 1.82,-0.56 0.14,1.44 0,0 z\",\n          \"CA\": \"m 244.83,107.58 c 2.56,-1.73 -4.42,-1.05 -3.23,-0.93 1.16,0.78 3.66,0.35 3.23,0.93 z M 104.71,86.08 c 3.08,-0.45 -0.47,0.88 2.33,2.09 2.62,1.96 -2.81,-1.34 -2.42,-1.74 -1.02,0.29 -0.33,-0.53 0.09,-0.35 z m -1.61,-1.25 c -1.31,-3.08 3.61,-0.28 1.49,-0.2 -0.93,0.47 3.48,-2.79 1.31,-0.11 0.03,2.3 -3.46,1.11 -1.72,0.94 0.13,-0.07 -2.15,-0.68 -1.07,-0.63 z m 7.14,-1.3 c -1.97,0.46 -0.13,0.25 -0.04,0.57 0.33,0.02 0.37,-0.51 0.04,-0.57 z m 0.86,1.37 c 2.1,1.83 1.37,-0.53 -0.62,-0.93 l 0.14,0.3 z M 309.76,101.63 c -3.74,1.04 -2.32,-2.06 0.32,-2.47 -0.97,0.04 -3.66,0.15 -1.35,-0.7 -0.84,1.41 2.48,-1.8 2.19,-0.65 0.19,-0.53 -0.89,-1.18 0.45,-1.6 0.95,-2.81 2.42,-5.02 5.54,-5.58 2.59,-0.18 -1.89,0.8 0.31,1.17 -0.88,0.61 -4.78,5.96 -1.61,3.18 0.66,-0.31 3.99,0.11 1,0.89 -1.13,0.11 1.44,-0.04 -0.42,0.73 1.61,0.2 3.54,-0.84 2.04,1.08 1.8,-1.07 2.61,-1.46 5.38,-0.6 -0.87,1.02 -2.5,1.19 -1.2,1.4 0.05,0.34 0.89,0.09 -0.7,1.12 0.85,-0.39 5.1,-1.26 1.4,0.5 -1.56,0.18 0.51,0.26 -0.6,1.31 0.53,1.55 3.59,-3.11 1.88,-0.13 -0.79,1.96 2.57,-1.37 1.04,1.65 -1.29,3.05 -2.65,0.4 -2.49,0.31 -2.83,2.91 0.95,-4.13 -1.92,-1.48 -0.31,0.75 -1.34,0.25 -2.54,1.84 -5.04,0.91 3.13,-2.34 0.7,-1.86 0.01,-0.95 -1.74,0.99 -2.54,0.22 -0.35,0.19 1.48,-1.19 -0.49,-0.8 -1.06,1.54 -4.96,-0.09 -6.38,0.48 z m -13.97,-6.19 c 1.75,0.03 7.41,2.68 2.62,2 -1.7,-0.27 -9.04,-3.24 -2.62,-2 z m 4.16,7.1 c 0.66,-1.17 2.5,-1.07 0.33,-0.31 1.28,-1.24 -0.82,1.46 -0.33,0.31 z m 1.76,4.82 c -1.8,-2.58 4.69,-5.31 2.21,-1.89 0.47,0.45 -2.17,0.92 -0.8,0.9 -2.04,1.42 2.53,0.05 0.14,0.01 2.15,-0.94 -0.29,-0.55 1.6,-0.81 2.95,0.15 -1.22,2.57 -3.16,1.8 z m -6.54,-1.87 c -0.58,-0.96 -3.25,-1.11 -0.83,-2.23 -0.95,2.98 4.97,1.1 5.26,1.88 -1.31,0.29 -1.93,2.05 -2.6,0.23 -0.48,0.53 -1.25,0.39 -1.82,0.12 z M 146.14,38.73 c 2.04,2.16 5.73,2.16 9.08,2.11 1.9,0.06 2.05,3.48 5,1.99 3.34,-0.06 4.47,-0.1 8.62,-0.48 2.71,-0.39 5.75,-1.68 7.96,-1.82 0.12,1.1 4.45,0.21 3.52,1.24 2.83,-0.26 7.06,1.05 9.03,-0.86 -0.38,-0.8 -2.91,-0.99 -3.76,-0.03 1.4,-0.93 -2.45,-1.6 0.72,-0.97 2.01,-1.22 4.15,-0.13 5.74,-0.72 -1.83,-1.48 -4.91,-1.85 -7.57,-2.29 -1.3,-0.45 -3.98,-1.07 -2.25,-2.41 -2.43,-2.5 -4.5,-5.8 -8.66,-4.99 -3.42,-1.76 -2.11,2.72 0.38,3.84 -3.4,2.2 -3.08,-2.67 -6.23,-2.63 -1.42,-0.87 -5.32,-0.51 -1.4,0.18 0.95,0.32 -1.7,-0.12 0.11,0.65 -0.55,-0.65 -6.22,1.4 -4.5,0.11 2.51,-1.3 -6.37,-2.15 -5.77,-0.39 -0.62,-0 -4.26,0.38 -0.94,-0.68 -0.75,-3 -6.07,-0.2 -8.52,-0.27 -1.42,0.62 -5.7,1.08 -3.04,2.03 -1.61,0.03 -4.53,1.63 -1.3,1.71 3.11,-0.04 1.83,-0.01 1.51,0.64 2.2,0.34 7.16,-0.7 7.75,-0.15 -0.67,0.01 -3.39,0.09 -1.34,0.17 -1.74,0.94 -6.48,-0.16 -6.63,1.54 3.31,1.26 7.06,0.66 10.55,0.55 2.33,0.08 6.76,0.17 7.64,1.17 -4.22,0.32 -8.48,-0.56 -12.71,0.23 -1,0.12 -2.1,-0 -3.01,0.54 z m -51.48,2.87 c 1.51,-0.44 0.54,0.2 0,-0.73 2.66,0.85 -1.13,-0.61 1.69,-0.17 0.89,-0.89 6.58,-1.37 2.64,0.17 -1.82,0.74 1.69,2.23 -0.86,0.9 -1.04,-0.24 -2.37,0.11 -3.48,-0.17 z m -11.14,24.71 c -4.74,0.6 -2.53,-5.35 -2.97,-8.32 0.51,-5.66 -0.5,-11.32 0.04,-16.99 0.37,-3.03 6.07,-0.4 8.15,0.13 1.99,0.48 7.51,1.29 7.51,0.89 -1.1,-1.47 5.34,1.78 2.19,-0.64 2.81,-0.87 5.93,-2.03 6.76,-1.83 2.59,-0.42 4.86,-1.4 6.95,-1.35 1.76,1.12 -5.93,1.39 -3.63,2.45 0.33,-0.17 4.33,-2 5.58,-1.66 -1.4,1.69 4.21,-1.53 3.24,-1.01 -3.01,-1.53 3.09,-0.15 3.51,1.65 0.73,1.14 5.49,0.83 2.6,0.69 1.65,-0.06 -0.15,-1.24 2.02,-0.79 -3.09,-0.18 2.76,-1.13 -0.53,-0.74 -1.08,0.04 2.55,-0.88 1.76,0.74 2.39,-0.25 -1.7,1.07 0.84,1.05 3.31,-1.3 7.01,-1.88 10.62,-0.29 3.1,0.19 9.75,2.4 10.88,1.31 2.3,-0.71 9.6,1.99 3.82,2.28 -3.69,1.21 3.34,1.18 5,1.34 3.05,0.26 6.43,-0.99 8.67,-0.54 2.92,1.04 3.42,0.68 5.84,2.08 -1.21,0.61 -2.78,-0.51 -0.62,0.69 0.02,0.11 4.35,2.54 1.08,0.32 -0.2,-1.47 2.67,0.58 0.4,-1.56 -1.79,-2.45 -0.5,-1.93 2.44,-2.39 1.25,-0.6 4.56,-1.41 1.27,-1.14 -1.22,1.15 -5.07,0.43 -4.44,1.07 -2.82,0.55 -2.81,-1.33 0.45,-1.36 2.84,-1.2 5.87,-0.6 7.18,1.02 2.5,0.5 6.03,1.19 9.28,1.53 3.16,-0.39 6.32,0.22 9.42,-0.09 -3.13,-1.65 6.02,1.92 2.48,-0.46 -1.47,0.42 -3.22,-0.33 -2.65,-0.73 -1.46,-0.58 1.58,-0.36 2.14,-0.86 1.7,0.7 3.29,0.69 3.14,1.29 3.15,-2.04 -0.1,1.34 0.82,1.78 0.03,0.71 2.07,0.16 1.6,0.63 2.8,1.45 -4.59,-0.3 -0.84,1.17 1.91,1.41 -1.85,-1.34 1.34,-0.34 2.24,-1.01 -2.52,-3.19 1.31,-3.24 2.32,-0.41 5.92,-1.92 2.95,-2.58 1.52,0.95 -3.62,0.77 -0.77,-0.19 0.69,-0.24 -0.97,-1.12 1.23,-1 1.07,-0.19 -1.05,1.24 1.2,0.11 -1.98,-0.81 -6.79,-0.11 -8.7,-2.42 0.49,-1.44 2.05,-0.47 1.56,-1.36 -3.41,0.98 -1.2,-3.45 0.98,-1.7 0.81,-1.07 -2.56,-0.64 0.04,-1.02 1.52,-0.69 3.3,-0.36 0.61,-0.67 2.31,-0.94 1.96,1.17 4.35,0.52 1.51,0.23 2.43,2.42 2.9,2.66 1.31,1.26 5.29,1.89 1.1,1.83 -0.59,0.47 2.37,0.22 -0.18,0.8 -2.2,0.78 0.07,0.46 1.98,0.93 0.32,-0.62 2.69,-0.19 0.6,0.02 2.11,-0.14 4.46,0.1 1.28,0.73 -1.45,-0.18 2.86,0.97 1.26,2.35 2.09,1.79 1.56,-2.7 4.37,-2.24 1.94,-0.05 4.58,3.11 1.77,2.69 0.16,2.3 2.94,3.74 4.7,2.5 1.67,-1.64 2.36,-4.21 4.92,-4.09 -2.14,-0.41 2.15,-0.47 -0.59,-0.85 -1.27,-0.32 -2,-2.61 1.21,-1.98 1.52,0.28 6.69,0.22 5.83,0.88 -3.77,0.13 1.61,-0.21 0.99,0.83 2.21,-0.61 3.43,0.98 0.4,0.98 3.59,-0.39 1.24,1.58 -0.92,1.12 -1.08,0.83 2.57,1.41 3,3.55 -2.46,1.68 -6.78,3.08 -7.84,1.39 -1.45,-0.72 -0.92,-1.23 -3.01,-0.4 2.13,-0.37 2.4,0.17 3.84,1.87 -1.74,-0.44 -1.92,-0.44 -2.14,-0.01 -1.88,-0.53 -4.67,-1.55 -6.03,-0.58 5.01,0.23 -1.93,4.21 -4.04,2.76 -2.46,-0.63 -0.25,-0.53 -0.98,-0.62 -1.3,-0.23 -4.45,-1.31 -3.5,-0.51 -0.92,-0.36 -5.89,-0.27 -2.81,-0.25 3.62,0.89 7.31,1.87 10.82,2.38 -1.03,1.96 -5.91,3.47 -5.86,3.16 -2.55,-0.41 -1.86,-1.03 -3.11,0.91 -2.26,0.36 -8.59,-1.05 -9.49,-1.16 -1.29,0.69 5.54,0.37 3.02,1.39 2.48,-1.49 7.83,1.65 2.78,2.06 -2,-0.32 -2.91,0.06 -1.22,0.73 -2.3,-0.36 -2.13,1.41 -2.74,0.73 -0.46,1.4 -2,0.53 -1.39,1.69 -2.08,0.11 -1.69,3.18 -3.61,3.39 1.24,2.05 -1.5,4.67 0.69,4.72 1.72,0.47 -0.41,2.56 0.92,0.17 3.52,-1.7 5.11,4.92 4.09,5.11 2.05,-0.87 -0.14,0.49 2.28,-0.39 3.91,-0.93 8.29,0.43 11.65,2.49 1.68,0.86 7.67,1.82 6.77,3.05 3.47,-1.04 5.34,-0.15 8.43,0.06 -0.75,2.1 0.08,4.64 0.26,6.34 0.95,0.51 2.19,1.47 0.57,1.79 1.75,-0.47 5.9,2.21 2.48,3.28 1.45,-1.58 4.45,0.08 4.46,0.44 -2.57,-2.9 1.98,-1.26 1.46,-1.41 -0.03,-0.6 0.01,-1.95 0.9,-2.64 -0.74,-1.25 -1.02,-2.3 -1.44,-3.61 0.46,-0.89 -0.11,-1.27 -1.11,-2.3 -0.61,-1.94 5.15,-1.38 6.52,-3.51 4.22,-2.81 -0.03,-7.89 -3.79,-8.31 0.71,-1.66 2.34,-2.57 2.83,-3.18 2.16,-0.49 -1.96,-1.63 0.02,-2.24 -1.18,-0.38 -0.34,-0.96 -1.74,-0.73 1.34,-1.63 1.99,-2.18 -0.12,-3.43 1.39,-3.46 6.51,0.15 7.76,-0.76 1.59,0.83 7.15,-1.66 7.06,1.25 2.62,-0.24 1.07,0.89 3.46,0.75 -2.6,1.14 3.21,1.14 4.45,2.06 2.49,-1.25 0.42,0.81 0.74,2.26 -1.55,0.38 -5.34,-0.21 -1.48,0.2 2.84,-0.45 0.35,2.25 2.73,2.1 -0.79,0.38 -1.21,1 -1.63,0.92 -3.1,1.8 5.98,-1.97 3.87,2.16 -2.05,0.74 -3.51,1.21 -0.56,0.39 0.74,-0.84 2.92,-2.33 1.42,-0.37 1.54,-2.1 0.73,1.37 1.52,-0.15 2.02,-1.1 3.96,-2.16 4.54,-0.78 -0.45,-1.4 -0.11,-1.39 1.63,-1.63 -1.87,-0.2 -0.13,-1.63 0.85,-0.95 -3,-1.08 0.71,-0.99 -0.29,-1.45 0.91,-2.07 2.88,-0.97 0.98,-0.29 1.57,-0.58 2.12,1.13 2.7,1.58 -0.6,0.25 2.61,0.74 -0.48,1.01 1.67,-0.01 2.25,0.09 2.22,0.58 2.6,0.65 -3.13,1.67 0.2,1.16 1.49,-0.33 1.62,0.85 -0.52,1.25 1.9,-0.82 2.82,-0.05 2.23,0.08 0.83,-0.29 2.46,1.54 0.07,1.35 2.52,0.36 3.26,1.57 1.98,2.24 -0.58,0.44 -2.7,-0.45 -0.87,-0.35 -3.2,-0.39 1.42,0.76 -0.46,0.58 3.04,0.12 -1.17,0.41 1.49,0.85 -0.49,0.02 -1.23,0.41 0.92,0.26 -0.3,1.01 2.15,1.52 2.48,1.25 0.63,1.08 0.41,1.41 -0.1,1.83 -1.42,0.88 2.43,-1.21 0.72,0.34 2.06,-1.37 0.58,-0.05 2.32,-0.32 -1.99,1.75 -0.59,0.5 0.78,-0.21 -0.83,0.96 3.44,0.91 4.93,1.94 -0.91,0.27 -0.18,0.2 -2.27,0.57 -1.84,0.6 -5.63,1.13 -1.65,0.57 2.38,-0.14 -3.16,0.98 -4.22,1.44 -2.7,-0.93 -0.89,-0.3 0.64,0.4 -2.33,1.52 3.75,-1.61 5.49,-1.72 1.43,0.01 -2.41,-0.46 0.42,-0.41 1.33,-0.34 3.51,1.41 1.11,1.71 1.48,0.47 2.57,-1.08 3.17,0.01 0.44,-0.43 2.91,1.71 0.64,1.58 1.75,0.56 -0.62,0.7 1,1.17 -2.22,0.27 -1.65,-0.28 0.39,0.74 -2.99,-0.77 1.74,0.68 -1.38,1.45 -2.37,2.12 -6.86,0.27 -7.89,2.97 -1.65,1.5 -6.45,2.06 -7.47,1.84 -3.18,-0.9 -6.5,0.01 -9.77,-0.48 -3.36,-0.48 -4.38,1.16 -6.78,2.81 -2.39,0.17 -3.24,1.57 -5.77,3.28 -1.99,-1.07 -5.18,-0.85 -1.58,-0.48 5.12,0.4 -6.41,5.83 -0.69,3.68 3.03,-2.92 6.6,-5.2 10.86,-5.86 1.82,-1.26 7.93,0.03 6.2,0.88 1.62,1.52 -3.47,2.53 -4.77,1.78 -4.06,0.15 1.22,0.69 2,1.16 3.73,-1.32 0.07,1.86 0.75,1.84 1.83,0.1 0.7,3.59 3.79,2.65 -1.76,0.9 3.54,1.02 3.53,1.41 1.87,-1.26 6.01,1.52 2.29,1.42 -2.69,0.95 -5.02,1.96 -6.51,1.47 -0.37,0.6 -2.85,2.58 -3.65,2.69 -1.04,1.1 -3.75,-1.22 -1.3,-2.57 -2.36,0.6 1.63,-0.33 0.76,-0.7 2.73,-1.8 3.52,-0.2 5.5,-1.39 1.65,-0.88 -5.93,0.77 -2.59,-1.05 1.32,-0.18 -1.05,-1.65 -0.69,0.14 -1.72,1.42 -4,0.4 -3.9,1.17 -2.12,0.93 -3.27,-0.09 -4.35,-1.4 0.03,-2.33 -0.19,-5.65 -3.46,-4.3 -2.45,-1.44 -3.52,4.25 -5.14,5.43 -2.9,1.15 -7.13,0.8 -10.76,0.87 -2.86,0.95 -5.35,2.75 -7.94,2.49 5.27,0.89 -3.8,-0.49 -5.56,1.57 -1.62,1.44 2.98,0.61 1.28,1.92 -1.93,-0.43 -4.04,0.88 -3.2,0.9 -3.13,-1.58 -5.29,2.34 -7.94,1.28 -0.31,-1.39 2.97,-0.16 1.48,-1.37 1.6,-1.89 3.6,-4.31 3.26,-6.92 -0.97,-1.69 1.66,1.48 1.9,1.01 1.71,1.67 2.32,-1.01 2.7,-0.39 -1.01,-1.37 -1.51,-2.43 -3.69,-3.12 -1.7,-0.13 -2.37,-0.91 -5.5,-0.7 -2.21,-0.29 -4.55,-0.92 -4.02,-2.13 -1.25,-0.79 -0.48,-3.83 -3.11,-2.77 -1.63,-1.3 -2.66,-2.91 -5.18,-2.61 -1.96,-1.73 -1.99,1.66 -2.83,0.8 1.4,-2.08 -2.07,1.92 -0.71,0.05 -2.26,2.27 -5.62,0.96 -8.19,1.03 -2.23,-0.69 -4.28,-1.2 -6.83,-1.39 -1.67,0.55 -2.07,-3.73 -2.84,-0.91 -25.35,0.01 -50.71,-0.04 -76.06,0.02 -2.68,-0.23 0.16,-0.72 -1.56,-1.48 0.63,-0.24 -3,0.57 -1.83,-0.34 1.39,0.7 -0.1,-0.79 -0.32,-1.6 1.24,1.36 -2.46,1.77 -2,-0.42 2.07,-0.8 -2.61,1.02 -0.39,-1.08 0.32,-1.28 -1.91,2.58 -1.73,0.17 -1.48,1.22 -3.29,-0.16 -0.71,-0.12 1.57,-1.91 -1.47,1.23 -1.36,-0.4 -1.97,-0.13 0.79,0.11 -0.92,-0.51 -0.99,1.23 -4.7,-0.38 -1.06,-0.09 2.02,-0.15 -5.01,0.1 -1.14,-0.68 0.94,-0.02 -2.68,0.12 -0.33,-0.91 3.19,-0.33 1.8,0.01 -0.1,-0.34 -0.48,1.5 -1.85,-0.46 -0.45,-0.97 1.47,-1.47 2.44,0.87 2.2,-0.78 -2.45,0.23 0.84,-2.3 -1.41,-0.25 -3.01,1.39 -0.76,-1.05 -2.99,0.49 1.7,-2.23 -1.07,-1.48 -1.47,-3.57 1.57,0.74 4.05,0.59 0.74,0.17 -0.3,-1.19 0.68,-1.5 -0.94,-0.78 -1.22,2.51 -3.85,-1.63 -2.38,-0.97 2.73,-0.79 -2.3,0.68 -1.47,-1.41 2.99,1.86 -1.4,-0.85 1.53,0.03 -2.29,-0.51 2.4,-1.37 -0.15,-1.06 -0.32,-1.5 1.91,-0.87 0.29,-1.81 -0.41,3.34 -0.83,0.2 -0.77,-1.31 -2.81,-0.83 -5.59,-1.48 -6.98,-4.04 -1.8,-2.74 -5.22,-3.62 -7.04,-5.94 -2.86,-1.73 -4.34,2.92 -6.63,1.49 -2.57,-1.25 -4.45,-4.25 -6.79,-3.03 z M 221.95,34.56 c 2.71,1 5.66,0.09 8.24,1.27 -2.22,0.9 -9.4,-1.53 -5.2,1.22 1.53,0.7 2.86,0.59 2.55,0.77 0.85,0.02 3.21,0.3 2.68,-0.32 1.12,0.64 1.95,-0.71 1.86,0.68 1.49,0.87 4.22,0.59 2.18,0.28 3.62,0.1 7.47,0.79 10.93,0.47 -1.54,-0.51 -5.12,-1.38 -1.54,-0.59 1.34,0.63 6.02,1.49 2.2,0.35 0.08,-1.25 7.06,1.95 7.56,-0.38 -1.85,-1.2 -2.64,-0.17 -0.89,-1.44 -0.2,1.08 4.01,0.75 4.52,2.45 2.36,-0.76 -0.69,-0.06 1.66,-0.06 -1.72,1.35 2.73,-0.25 1,0.89 2.05,0.14 3.5,1.75 0.3,1.21 -2.45,1.88 2.27,0.12 3.42,0.41 1.54,-0.85 -0.26,0.19 1.01,0.3 0.43,0.41 2.55,1.08 2.17,0.23 0.79,-0.08 0.08,2.04 1.89,0.94 -0.33,0.35 5.21,3.53 0.97,4.11 1.44,1.85 5.43,-0.13 5.88,-0.08 2.46,1.07 4.84,1.21 3.7,1.53 1.81,0.54 -4.94,0.46 -4.75,1.06 0.01,-2.73 -6.31,-2.19 -8.61,-0.71 -1.09,1.08 4.69,2.44 0.63,2.21 -1.59,0.93 -6.76,0.13 -3.2,1.49 -1.08,1.55 0.2,-1.12 -2.6,-0.91 -2.86,-1.04 -3.86,0.32 -5.85,1.69 1.76,1.72 5.55,1.53 6.77,0.64 0.57,-0.23 4.81,0.61 3.08,-0.99 0.05,0.06 1.43,0.67 1.71,0.62 0.12,1.1 1.18,-0.27 2.6,-0.01 -0.96,1.59 3.24,2.18 2.96,2.51 0.09,-0.66 4.07,0.75 0.7,0.77 -2.35,0.11 4.13,1.16 1.91,1.18 2.86,0.97 4.35,0.24 6.19,1.79 2.74,0.47 5.5,1.08 8.25,1.35 -0.11,-1.4 -3.05,-2.23 -4.52,-3.16 0.28,0.51 -6.01,-2.56 -1.86,-1.87 0.75,0.85 2.44,1.17 0.93,-0.21 2.43,1.5 3.49,1.89 4.08,1.85 0.64,0.73 1.16,-0.32 1.42,0.39 0.89,-0.66 3.78,2.4 1.81,-0.11 3.01,0.9 -0.41,-1 0.83,-1.64 -1.68,-1.57 2.26,2.56 1.18,-0.34 -2.02,-0.73 1.47,0.53 -0.06,-0.55 -0.74,0.15 -1.62,-0.58 -2.38,-1.1 2.33,-0.84 -1.46,-0.09 -0.68,-1.53 -1.39,0.67 -1.8,-0.3 -3.29,-0.56 1.09,0.07 -2.18,-0.92 -0.55,-1 -0.61,-0.17 -1.18,-1.48 -2.49,-0.34 0.66,-1.39 -1.83,-1.01 -0.41,-1.69 -3.28,-0.22 -0.55,-0.65 0.36,0.35 1.4,0.92 3.34,-0.39 0.73,-0.91 -0.34,-0.79 1.69,0.46 1.59,-0.39 -2.57,-0.4 1.89,-1.03 1.78,0.63 0.62,-3.6e-4 2.8,0.28 2.55,-0.25 -3.14,2.77 5.99,-1.54 2.2,0.69 0.2,-0.06 -3.5,1.07 -0.92,1.05 1.72,-0.54 -1.63,0.94 0.94,0.09 -2.62,1.42 2.76,0.13 -0.19,1.01 1.53,0.83 1.55,-0.56 2.22,0.61 1.17,0.58 2.78,-0.06 1.4,-1.24 1.62,-0.12 -1.32,-0.27 0.4,-0.69 -0.89,-0.48 1.85,0.54 1.79,0.4 0.67,-0.07 -0.68,-0.71 1.16,-0.73 -2.52,-0.99 -0.79,-0.18 0.82,-0.38 -1.27,-0.83 -3.37,-0.63 -0.79,-0.79 -2.45,-0.74 4.59,0.41 1.13,-0.3 2.25,-0.38 -2.45,-1.11 0.97,-0.46 1.55,-0.43 -1.67,-1.37 -1.27,-0.96 -0.95,-0.51 -0.81,0.6 -1.97,0.07 -0.18,1.16 -0.94,-1.11 -1.87,0.21 -2.87,0.77 3.39,-1.95 -0.02,-1.18 -1.5,1.27 0.78,-0.56 -1.58,-0.05 -3.98,1.04 0.11,9e-5 -0.62,-0.1 -1.35,0.09 -1.97,0.32 -0.19,0.02 -3.48,-0.35 2.89,0.16 -0.07,-0.52 1.73,-0.83 -1.75,-0.41 -0.64,-1.02 -1.8,0.47 -1.63,0.18 -1.1,-0.59 -1.8,0.51 -0.91,1.28 -2.16,0.13 -1.76,1.97 0.61,-1.73 -1.97,0.31 -0.71,0.48 1.07,-1.45 -0.6,-0.45 -0.14,-0.72 -2.05,-0.68 -2.02,-0.37 1.82,-1.02 -3.16,-0.02 0.29,-0.66 3.62,-0.25 -1.59,0.13 -1.2,-0.42 -2.23,0.35 -3.54,-0.45 -1.47,-0.47 -2.95,-0.13 -3.87,-0.62 -0.53,-0.23 3.06,0.22 -1.26,-0.43 1.24,-0.2 -3.57,-0.65 3.2,-0.18 -0.81,-0.82 -1.4,0.06 -3.08,0.56 -0.81,-0.05 -1.69,-0.24 3.47,0.06 -0.32,-0.43 -2.79,-0.31 3.01,0.39 4.25,0.43 3.6,-0.32 -3.05,-1.18 -4.23,-1.1 -1.64,0.31 -5.3,0.06 -1.61,0.07 1.3,-0.57 6.18,0.08 5.48,-1.19 -2.02,-2.05 -6.01,1.39 -7.26,0.68 1.17,-0.37 5.27,-1.09 1.79,-1.36 -2.38,0.73 -3,1.41 -1.98,0.48 -0.04,-0.45 7.62,-1.24 2.53,-1.95 -1.79,-0.5 -5.98,1.51 -2.17,-0.25 -1.99,-1.75 -5.75,4.13 -3.67,0.87 -1.39,0.36 -3,0.73 -0.92,-0.28 2.35,0.43 3.3,-2.55 0.37,-0.87 -2.24,0.27 -3.61,1.29 -3.14,0.22 -1.43,-0.47 6.13,-0.74 2.1,-2.04 -2.47,-1.32 -4.97,2.51 -4.37,0.64 -1.21,0.07 -1.92,1.54 -0.58,-0.15 -0.29,-1.59 -2.71,1.19 -1.59,-0.17 -2.22,0.38 3.08,-1.33 -0.06,-0.85 -0.1,0.74 -1.76,-0.49 -2.05,1.28 -0.09,0.53 -0.27,-0.92 -0.62,-0.7 2.68,-0.88 -3.2,0.48 0.18,-0.36 -3.59,0.15 5.52,-0.88 0.49,-1.42 -1.76,0.39 -4.96,2.19 -1.67,0.37 -0.55,-0.71 -4.52,0.91 -1.06,-0.29 3.82,0.34 0.2,-1.94 -1.12,-1.17 -1.6,-1.42 -9.64,-0.02 -4.52,0.85 4.93,0.93 -4.8,-0.98 -1.85,0.48 1.22,0.45 2.74,1.09 0.5,0.32 1.89,1.25 -2.8,-1.31 -1.85,0.02 0.15,-0.46 -1.27,-1.66 -2.1,-0.86 -0.92,-1.7 -0.87,0.99 -0.75,0.25 -1.18,-0.77 -2.75,1.87 -2.85,0.28 2.17,0.26 -0.56,-0.31 1.3,-1.04 -2.36,-0 -2.3,0.98 -0.14,-0.53 1.4,-0.93 -1.83,-1.85 -2.94,-2.97 -2.09,-0.41 -6.81,0.29 -6.06,0.8 -1.51,-0.32 -5.69,0.56 -1.78,0.82 5.62,0.68 -6.33,-0.58 -1.39,0.53 1.79,0.35 3.42,0.63 0.69,0.19 -4.06,-1.18 -2.46,2.08 -0.25,1.35 1.59,-0.17 -1.23,0.49 1.24,0.8 1.01,0.88 -3.06,-1.56 -3.72,0.14 -2.2,-0.05 1.07,0.69 1,1 2.38,-1.22 2.32,3.18 0.62,1.73 1.64,-1.16 -7.5,1.08 -2.57,-0.17 1.14,-0.24 5.04,-0.29 1.75,-1.12 -2.5,-0.11 -2.64,-1.91 -3.1,-2.94 -2.31,-1.94 7.89,-3.35 2.28,-3.48 -3.25,0.13 -8.61,-0.33 -10.1,2.89 -2.02,0.44 -1.5,2.27 -1.83,3.77 z m 17.02,15.33 c -3.46,-1.07 1.37,1.92 1.69,0.82 -1.41,0.06 -0.8,-0.36 -1.69,-0.82 z m -0.03,9.98 c 1.39,2.91 8.62,-2.63 3.09,-1.16 -1.48,-0.19 -2.07,0.18 -3.09,1.16 z m -30.66,-27.28 c -1.81,0.47 2.85,0.93 2.9,-0.19 3.01,-1.16 -3.6,-1.76 0.63,-1.67 3.1,0.96 5.95,-0.21 6.97,-1.94 1.64,-0.5 3.5,-1.37 0.63,-1.39 -3.64,0.32 -7.1,-0.84 -10.81,-0.27 -3.63,-0.14 2.04,1.87 -1.22,1 -2.17,-0.37 -1.37,3.3 0.12,3.74 -1.18,1.25 2.23,0.47 0.8,0.72 z m 25.75,23.64 c 0.29,3.94 4.97,0.02 6.58,-1 2.13,0.26 4.2,2.58 7.81,1.32 1.24,-0.34 -0.29,-1 -1.25,-1.17 -2.11,0.15 -2.67,0.67 -2.12,-0.99 -2.59,-0.83 -6.29,-3.41 -8.61,-2.21 -0.52,-1.61 -3.19,-3.22 -3.68,0.18 -0.48,2.35 0.11,3.46 -2.81,3.95 0.12,1.08 3.17,-0.11 4.08,-0.09 z m -45.17,-24.25 c 3.8,-0.46 6.48,3.63 10.14,2.74 0.93,-0.26 -1.44,-2.07 0.17,-0.81 2.26,0.66 5.32,-0.78 4.35,-1.07 0.38,-0.85 -1.56,-0.61 0.47,-1 -0.04,-1.67 -2.77,-0.05 -2.57,-1.6 -1.62,-0.13 -4.72,0.32 -1.32,-0.67 1.67,-0.31 2.15,-0.61 0.62,-0.84 3.92,-0.12 -0.43,-1.57 -1.59,-0.84 -1.45,0.8 -5.86,-0.74 -5.09,-0.04 1.1,-0.05 -5.32,-0.06 -1.53,0.68 -0.99,0.09 -4.41,0.02 -1.21,0.74 1.76,0.03 4.83,0.28 1.28,0.42 1.9,1.07 0.27,0.08 0.1,1.26 -1.76,0.95 -5.62,-2.67 -5.98,0.13 0.14,0.4 3.11,0.53 2.16,0.9 z m -14.12,-3.1 c 2.24,0.22 5.97,3.17 6.62,-0.29 -1.89,-0.62 -5.27,-1.3 -6.62,0.29 z m 29.22,14.16 c 1.91,-0.7 4.92,-0.87 1.8,-1.6 -1.15,-0.65 -5.13,-3.31 -6.77,-1.62 2.04,0.59 -2.2,-0.14 -0.12,0.74 -1.81,-0.18 -4.73,1.57 -1.3,1.12 1.42,0.55 4.22,1.16 6.4,1.36 z m 45.69,-12.48 c 3.56,0.26 7.37,0.17 10.86,-0.09 -2.46,-1.8 -5.96,-2.44 -9.17,-2.05 -1.83,-1 -6.3,0.4 -2.53,1.1 0.44,0.19 0.59,0.68 0.84,1.04 z m 17.77,13.71 c -1.55,-0.69 -4.85,0.08 -1.36,0.7 0.54,0.38 3.29,-0.48 1.36,-0.7 z m -9.77,1.64 c 2.22,2.37 8.93,-1.35 4.35,-2.54 -1.39,-0.2 -5.97,0.43 -4.35,2.54 z m -3.45,-5.48 c -1.79,0.27 -3.67,2.44 -0.69,1.01 0.21,0.13 2.11,-1.15 0.69,-1.01 z m -4.31,-0.3 c 5.15,-1.14 -4.52,-0.79 -1.08,-0.33 l 0.5,0.12 z m 2.74,-18.71 c -2.32,-0.15 -2.08,1.4 0.05,0.73 -1.8,-0.43 -0.14,-0.18 -0.05,-0.73 z m -27.39,-1.39 c 0.43,1.41 0.18,-1.87 0.97,0.6 2.23,-0.02 2.72,-0.23 4.93,-0.19 0.99,-0.29 3.8,1.1 6.18,0.38 -2.31,-0.54 -1.89,-0.54 -0.08,-0.38 0.27,-1.28 4.2,1.23 2.77,-0.63 0.74,1.1 4.92,1.1 2.36,-0.19 1.3,0.8 1.93,-0.3 1.69,0.7 1.92,-0.5 3.39,0.45 3.05,0.98 2.86,-0.68 6.45,-0.28 8.4,-1.97 -1.31,-0.94 -5.27,0.78 -3.52,-0.91 -1.71,-0.65 -3.41,0.59 -3.84,-0.18 -1.52,-0.09 -7.18,-0.11 -2.83,-0.21 0.74,0.04 -2.86,-1.55 -0.18,-0.68 3.42,1.1 7.07,0.92 10.03,0.03 -0.04,-0.92 -2.59,-1.33 0.28,-1.16 1.63,0.32 8.82,-0.43 3.65,-0.56 -2.89,-0.26 7.18,-0 2.2,-0.85 -1.84,-0.04 -3.34,-0.32 -0.62,-0.21 1.92,0.69 5.12,-1.1 1.49,-1.04 -3,-0 -1.49,0.18 -1.61,-0.26 -1.45,-0.52 -7.94,1.17 -4.66,-0.02 -2.21,-0.28 -3.99,-0.11 -0.81,-0.12 1.76,0.12 7.78,-0.03 3.06,-0.3 -1.72,0.03 -5.1,-0.06 -1.51,-0.08 2.28,-0.63 7.24,1.14 7.93,0.18 0.4,-0.67 -6.5,-0.28 -7.74,-0.41 -3.17,-0.12 0.65,-0.38 1.46,-0.31 1.6,0.56 3.73,-0.16 0.84,-0.28 -3.45,-0.22 3.09,0.42 4.35,0.26 1.19,-0.16 7.87,-0.32 3.29,-1.04 -2.19,0.18 -2.73,-0.43 -0.25,-0.26 2.8,0.17 5.47,1.21 8.33,0.1 -3.29,-0.2 3.61,-0.39 -0.21,-0.85 -0.85,0.32 -5.31,0.31 -2.45,0.07 -2.95,-0.53 8.31,0.44 3.53,-1.3 3.49,1.42 6.85,-1.38 10.4,-1.6 1.58,-0.76 6.13,-0.33 5.94,-1.37 -3.32,-0.16 -6.7,0.43 -10.04,0.74 -2.98,0.61 -7.36,0.43 -2.64,0.08 1.95,-0.29 6.47,-0.55 6.8,-0.91 -2.4,-0.22 -5.78,0.49 -5.24,-0.2 -4.16,-0.76 3.11,0.64 4.59,-0.04 2.54,-0.07 4.72,-0.12 3.63,-0.22 4.22,-0.36 8.69,-0.25 12.67,-1.73 -1.97,-1.43 -5.27,-0.1 -5.6,-0.49 1.51,-0.47 -3.45,-0.69 -0.73,-0.78 -3.45,-0.49 -6.93,-0.07 -10.48,-0.08 -1.48,0.13 -6.05,0.61 -2.12,0.17 1.76,0.34 6.35,-0.62 2.28,-0.72 -4.28,0.14 -6.88,-0.27 -10.84,-0.3 -3.47,0.11 2.51,0.8 -1.24,0.45 -0.96,-1.2 -9.33,-0 -3.94,0.42 1.12,0.67 -3.67,-0.45 -4.99,-0.7 -1.87,0.32 -7.19,-0.53 -7.26,0.28 1.72,0.32 3.03,0.31 3.06,0.67 2.57,0.03 1.04,0.6 -0.63,0.52 1.18,-1.12 -6.23,-0.8 -4.76,-1.27 -1.66,0.31 -5.91,-0.46 -5.87,0.28 0.46,0.21 4.51,0.6 4.35,0.5 -2.02,0.34 -6.98,-0.82 -7.21,-0.16 5.35,1.05 -6.51,-0.45 -0.87,0.65 -1.68,-0.4 -4.39,0.47 -1.09,0.68 2.15,0.19 6.78,0.7 7.19,1.24 -3.19,-0.42 -6.77,-1.44 -9.8,-1.09 1.29,0.52 3.88,0.47 0.96,0.34 -2.88,-0.58 -7.8,-1.66 -8.62,-0.88 2.78,0.5 -5.6,0.08 -1.6,0.77 1.74,-0.31 5.95,0.84 1.87,0.43 1.18,0.42 -4.86,-0.7 -3.78,0.17 -3.31,-1.43 -5.85,0.41 -8.09,0.01 -1.79,-0.17 -8.35,1.18 -3.44,0.9 1.42,-0.36 6.26,0.04 2.37,0.06 -2.81,1.45 4.19,-0.05 5.53,0.05 3.08,0.18 2.28,0.16 -0.17,0.07 -1.6,-0.23 -6.35,0.82 -2.42,0.8 1.74,-0.03 -5.74,-0.06 -1.53,0.8 4.08,-0.18 8.23,-0.07 12.24,-0.98 3.81,0.26 -4.02,1.3 -5.65,0.94 -1.55,-0.22 -7.83,0.01 -3.69,0.84 4.19,1.31 7.99,-1.72 12.23,-1.08 1.47,-0.54 7.39,-0.18 3.29,-0.18 -2.88,0.61 -7.5,-0.29 -9.37,1.75 2.81,-0.34 6.24,1.21 8.62,-0.74 1.94,-0.27 -1.29,0.74 1.19,0.28 1.33,-0.72 5.21,-0.13 1.76,-0.16 -4.69,0.67 1.96,0.93 3.56,0.42 2.34,0.16 5.74,-1.7 5.37,-1.5 2.11,0.22 2.88,-0.74 3.34,-0.7 2.52,-0.44 2.76,0.02 0.09,0.21 -1.03,0.17 0.24,0.23 -1.75,0.48 -3.29,1.57 5.86,0.16 4.43,0.92 -2.06,-0.06 -7.47,1.4e-4 -7.17,0.78 1.89,0.01 6.11,-0.05 2.11,0.19 -3.77,0.21 -7.58,0.08 -11.33,0.47 -1.3,1.07 5.45,0.64 3.66,1.82 2.07,0.7 7.61,-0.06 2.51,0.51 -3.64,0.26 -6.99,-2.43 -11,-2.06 -1.31,-0.21 -7.75,-0.14 -3.73,0.92 3.6,0.72 -0.04,-0.6 -1.19,0.33 2.38,0.2 6.66,1.96 7.65,2.28 -1.65,-0.54 -4.61,0.01 -1.2,0.14 1.73,0.3 7.25,0.04 6.54,-0.02 -1.28,0.73 -6.41,0.18 -2.45,0.63 1.98,1.12 -4.75,-0.87 -7.35,-0.42 -2.11,-0.32 -5.18,0.72 -5.56,1 -2.26,0.34 1.27,1.26 -1.02,1.15 1.34,0.86 5.84,-1.66 3.84,0.19 3.04,-0.14 4.24,-1.95 4.07,-0.42 3.38,0.47 -0.1,-0.5 -0.85,0.39 5.16,-0.27 -5.39,0.29 0.08,0.57 3.03,0.07 0.18,-0.59 -1,0.19 1.63,-0.44 -0.98,0.82 1.3,0.46 1.21,-0.39 -0.15,0.77 2.06,0.35 1.94,-0.05 6.84,-2.96 2.95,-0.42 -0.4,0.22 -3.18,0.54 -1.25,0.88 -3.4,0.36 -6.03,-0.21 -9.04,-1.41 -1.65,-0.49 -5.65,0.01 -2.57,1.37 2.47,0.02 1.21,-0.05 1.85,0.28 1.82,0.91 -6.32,-0.29 -6.6,1.5 -1.53,0.72 1.85,1.39 1.9,0.38 z m -12.51,-3.14 c -2.8,-0.02 -6.17,-0.78 -8.66,0.32 2.53,0.58 6.54,0.9 8.66,-0.32 z m -1.82,4.12 c 1.71,-0.98 6.9,1.12 4.27,2.72 1.17,0.75 2.53,2.95 4.68,1.28 -0.05,2.09 7.18,-0.38 6.39,0.5 1.45,1.54 5.25,-0.07 6.91,0.56 2.39,-0.96 4.95,1.12 7.37,-0.98 2.5,1.53 6.29,1.19 8.98,0.2 -2.05,-0.7 4.76,0.05 0.77,-0.71 -3.66,0.36 3.57,-1.08 -0.37,-1.34 -1.24,-0.38 -6.4,-1.58 -9.94,-0.84 -1.68,0.03 -7.01,0.4 -6.27,0.96 1.15,0.08 -2.11,0.59 -2.38,-0.08 -2.27,-0.28 -4.74,-0.33 -6.02,-0.19 -1.03,0.01 -4.09,-0 -1.09,-0.56 -1.31,-0.92 -5,-0.36 -5.17,-0.68 2.33,-0.33 2.14,-0.21 0.57,-0.4 -4.8,-0.6 1.43,-0.23 1.54,-0.18 1.44,0.2 3.84,-0.17 0.94,-0.64 -1.35,-0.28 -6.33,-0.28 -2.36,-0.22 0.86,-0.64 -3.59,-0.82 -4.94,-0.46 -1.51,-0.65 -3.64,1.46 -2.2,-0.32 -3.15,-0.59 -6.64,-1.34 -9.82,-0.55 2.88,0.59 -2.14,0.27 0.77,0.78 0.94,0.34 3.95,0.11 1.28,0.43 1,0.78 5.24,0.32 1.96,0.63 1.36,0.23 2.75,-0.17 4.15,0.1 z m -2.52,1.8 c -1.67,0.15 -3.78,0.65 -2.96,0.86 0.25,-0.07 -3.05,1.2 -0.28,0.98 1.68,1.28 10.19,1.81 5.69,-1.29 -0.78,-0.33 -1.62,-0.49 -2.46,-0.55 z m -7.63,4.34 c -2.25,-0.08 -6.35,0.67 -3.12,0.8 0.94,-0.14 2.62,0.23 3.12,-0.8 z m -6.3,-2.43 c 1.95,-0.49 6.91,0.16 5.93,-0.76 -0.98,-0.36 -0.42,-1.07 1,-0.78 -0.7,-0.84 -1.17,-0.48 -0.45,-1.85 -0.44,-1.5 -4.66,-1.41 -2.97,-1.46 -1.84,1.17 -4.07,-0.63 -6.53,0.5 0.81,0.6 3.87,0.43 1.18,0.57 2.29,0.74 2.38,-0.08 1.44,0.79 1.94,0.66 -2.88,-0.43 -4.17,-1.21 -2.5,-0.37 -1.86,1.12 0.2,0.51 -2.51,0.49 0.26,0.71 0.11,1.16 3.11,0.63 -3.73,-0.55 -2.33,0.3 -3.66,0.88 3.03,0.71 4.25,0.37 2.03,-0.01 6.98,-0.52 2.4,0.04 0.61,0.34 -2.29,0.18 -0.3,0.29 -1.51,0.1 -0.95,0.24 -1.92,0.41 1.18,0.47 2.58,0.08 0.67,0.53 0.4,0.39 1,0.45 1.51,0.58 z m 8,-8.05 c 0.59,-0.63 3.62,0.21 5.55,-0.85 -3.24,-0.45 1.93,-0.65 -1.07,-1.05 -2.75,0.29 -5.61,-1.79 -8.38,-0.56 2.04,0.73 -1.78,0.08 0.61,0.95 0.63,0.38 5.09,0.7 1.38,0.69 -1.06,0.24 1.54,0.29 1.91,0.82 z m -22.65,-1.96 c 3.07,1.42 5.97,-0.12 8.83,0.63 2.41,-0.27 5.97,2.74 7.7,0.59 -1.74,-0.45 -1.52,-1.2 -2.01,-1.58 -2.37,-0.48 -5.02,-1.41 -7.65,-1.04 -2.3,-1.33 -5.88,-1.41 -8.24,-0.32 0.53,0.39 3.35,-0.06 1.54,0.82 1.6,-0.32 3.02,-0.53 2.88,0.17 1.79,-0.18 1.42,0.19 -0.07,0.31 3.68,0.42 -1.5,0.28 -2.52,0.27 z m 0.63,3.86 c 3.65,-0.13 -6.13,-3.42 -2.26,-0.72 0.63,0.55 1.51,0.51 2.26,0.72 z m -14.48,-2.28 c 2.73,-0.92 -3.86,-0.4 -5.02,-0.28 -2.04,-0.51 -6.71,0.96 -2.21,1.73 2.09,0.17 5.69,0.59 6.93,-0.85 -1.36,-0.04 -2.73,-0.65 -0.35,-0.58 z m -16.41,8.08 c 0.08,0.64 1.8,-0.2 2.61,0.13 1.2,0.81 2.85,-0.31 1.77,-0.71 1.61,0.24 1.21,-0.8 3.18,-0.34 -3.97,1.62 2.39,0.28 4.08,0.91 1.83,-0.86 3.62,-0.14 0.77,0.2 -1.82,0.23 -7.76,0.27 -6.94,1.29 4.16,1.61 8.39,-0.49 12.53,-0.89 3.24,-0.92 5.57,0.31 8.81,-0.22 4.38,-0.21 1.85,-4.77 -1.3,-2.84 1.73,1.03 -3.16,0.02 -2.86,0.11 0.88,-0.7 -2.53,0.02 -1.14,-1.26 -1.17,-1.88 -4.15,-1.17 -5.97,-0.03 1.67,0.5 4.13,0.73 1.22,1.39 2.13,-0.3 4.88,1.53 0.98,1 -2.52,0.58 -6.09,-0.95 -6.56,-1 0.85,-1.03 -4.96,-0.62 -6,-1.45 -1.53,-1.29 -7.51,0.23 -3.08,0.59 4.24,0.15 -7.21,-0.34 -2.67,0.93 1.44,-0.29 5.72,-0.06 1.95,0.12 -1.83,-0.32 -6.9,0.82 -2.38,0.81 2.03,-0.2 5.05,-0.63 1.55,-0.05 -2.06,-0.04 -6.99,1.04 -2.38,1.27 0.89,-0.15 1.15,-0.23 1.83,0.04 z m -4.54,-2.95 c -1.7,-0.11 -6.96,1.72 -2.4,1.7 0.6,-0.33 3.32,-0.6 2.4,-1.7 z m -6.46,0.79 c 2.43,0.56 -0.35,-2.6 2.02,-0.76 2.44,-0.46 -0.12,-1.35 2.26,-1.45 2.08,-1.56 0.32,1.94 3.27,0.87 0.85,-1.28 5.07,-0.49 2.59,-1.78 3.33,0.35 -2.38,-0.74 0.95,-0.79 2.88,-0.81 -4.56,-1.34 -3.15,-0.32 -3.97,-0.64 -7.71,0.62 -11.35,2.04 -1.63,0.42 -6.95,1.26 -3.67,1.37 -0.26,1.24 4.24,-0.02 4.98,0.16 1,0.29 0.75,0.76 2.09,0.67 z m -14.58,9.4 c -2.3,1.54 -1.01,1.55 0.54,1.65 3.42,0.13 6.1,4.07 9.46,1.34 3.81,0.68 5.01,-3.62 8.94,-3.85 2.34,-1.26 7.02,-0.58 8.27,-2.29 -2.96,-1.47 -8,-2.13 -9.93,-1.41 -1.54,-0.5 -2.05,0.53 -1.73,-0.27 -3.64,-0.98 -7.3,-0.82 -11.03,-0.58 -3.41,-0.58 -1.6,1.64 -0.6,2.18 -1.44,0.47 -3.24,1.27 -2.29,2.13 -1.83,-0.39 -0.58,0.41 -1.13,0.96 z m 42.07,-16.43 c 4.84,0.17 -2.13,-2.1 -3.6,-0.9 -1.48,0.21 -7.75,0.88 -3.46,0.84 2.41,0.09 4.68,0.21 7.06,0.06 z m 37.7,-4.58 c 2.59,0.46 -1.25,-0.02 1.43,0.8 1.38,0.45 7.38,-0.33 3.11,0.35 -1.88,-0.13 -3.02,0.14 -0.95,0.77 1.75,0.42 3.87,-0.67 3.34,0.09 1.68,-0.37 5.08,-0.8 4.62,-0.28 1.84,0.03 4.39,-0.01 1.12,0.08 -5.99,0.49 8.17,0.14 2.33,0.39 -2.42,0.32 -7.75,-0.34 -8.39,0.74 1.69,0.34 3.63,0.51 0.81,0.42 1.88,0.71 8.33,0.47 3.46,0.66 -2.71,0.42 3.58,1.14 4.97,1.15 1.26,-0.5 0.71,-0.8 2.98,-0.22 1.56,0.64 -2.85,-2.13 -0.15,-0.66 1.16,0.93 3.43,0.83 3.11,-0.38 1.57,0.29 2.33,0.35 1.21,-0.66 1.78,-1.99 -0.26,1.35 2.43,0.32 1.27,-1.67 7.19,-0.69 6.09,-1.91 -1.7,-0.84 -5.18,-0.2 -5.85,-0.62 2.82,-1.14 -2.02,-0.3 1,-0.83 -1.49,-0.81 -2.62,0.15 -1.91,-1.21 -1.43,-0.96 -3.51,-0.15 -2.11,0.57 -2.84,0.07 -1.14,-1.36 -4.36,-1.19 -3.03,0.01 -5.63,-2.64 -9.3,-2.54 -1.73,-0.44 -4.4,0.47 -1.16,0.52 4.81,0.36 -4.41,0.29 -0.62,0.44 -2.55,-0.24 -5.52,0.56 -2.85,0.78 0.98,0.09 3.49,0.28 1.02,0.29 5.34,0.82 -4.69,-0.06 -3.4,0.74 1.92,0.57 -4.53,0.16 -0.94,0.63 1.71,0.25 2.27,-0.16 2.51,0.36 1.16,0.33 4.81,-0.46 1.7,0.09 2.52,1.15 -6.92,-0.96 -4.83,0.22 z m -9.72,0.3 c 1.19,0.3 5.95,0.59 2.61,-0.65 -0.72,0.02 -2.82,-0.62 -2.61,0.65 z m 55.89,67.48 c 1.53,-0.33 0.9,-0.42 1.03,0.1 1.65,-1.15 0.91,0.32 1.58,-1.38 -0.59,2.99 1.24,-1.59 -0.84,-0.05 -1.3,1.74 0.63,-1.57 -1.05,0.46 l -0.44,0.4 z m -135.84,9.1 c 0.95,-1.81 0.57,1.37 1.15,-0.93 -1.24,-2.31 -2.12,1.15 -1.42,-0.37 1.49,0.27 -1.42,0.57 0.27,1.3 z m 5.07,7.51 c 0.64,0.57 4.07,0.48 1.67,1.68 3.17,-0.62 1.37,2.05 4.79,0.91 0.71,-0.85 -2.16,1.57 0.36,1.37 2.35,0.91 5.3,0.72 2.46,-1.11 -2.43,-1.05 -4.67,-4.86 -8.34,-4.36 -1.02,-0.82 -6.32,-1.3 -3.1,0.2 1.37,-0.69 1.6,-0.21 0.18,0.41 -0.28,0.95 2.41,0.35 1.99,0.89 z\",\n          \"SV\": \"m 222.03,196.98 c 0.88,-1.85 3.05,-2.65 4.44,-0.35 3.04,-1.49 2.33,3.55 -0.45,1.68 -0.11,-0.05 -3.19,-0.56 -3.99,-1.33 z\",\n          \"GY\": \"m 301.66,218.91 c 0.49,-1.79 1.12,-2.46 2.95,-3.04 -2.84,-1.04 1.95,-3.71 1.27,-3.93 2.24,1.68 -0.88,-0.82 1.59,0.77 2.39,0.75 2.17,4.25 2,4.69 1.27,-2.76 5.15,1.96 3.7,3.65 -2.72,-0.18 -3.01,4.7 -0.29,5.18 -10e-4,2.18 4.29,5.02 0.07,3.89 -2.38,0.99 -4.44,3.28 -6.58,0.57 -1.44,-1.81 -0.19,-4.74 0.04,-6.63 -0.61,-1.32 -1.37,-1.38 -1.21,-3.1 -1.67,0.2 -2.75,-0.41 -3.56,-2.05 z\",\n          \"BE\": \"m 478.93,91.9 c 2.32,-1.15 4.47,-0.04 6.06,-1.1 1.51,0.32 3.18,0.75 3.06,2.03 3.04,0.69 -0.46,2.11 -0.34,3.56 -2.48,-0.6 -2,-2.13 -4.33,-1.33 0.56,-1.8 -4.26,-1.27 -4.45,-3.16 z\",\n          \"GQ\": \"m 498.59,231.17 c 0.57,-0.61 -0.03,-2.96 2.29,-1.55 3.75,-1.68 3.3,5.15 -0.4,3.16 -0.91,0.03 -4.04,0.11 -1.89,-1.6 z\",\n          \"LS\": \"m 546.8,319.01 c 0.71,1.9 2.91,4.13 4.08,1.42 4.63,-0.16 1.3,-6.51 -1.79,-3.51 -0.99,0.45 -1.02,1.91 -2.29,2.09 z\",\n          \"BG\": \"m 533.97,112.48 c 1.59,-2.91 1.02,1.06 3.37,-0.12 3.37,1 6.48,-0.11 9.72,-0.88 2.31,0.28 5.98,1.47 2.27,2.81 -0.57,1.91 -1.71,1.69 0.14,3.21 -1.73,-0.14 -4.89,-0.3 -5.01,1.49 -2.34,1.77 -4.87,-1.4 -7.43,0.27 -2.24,0.89 -1.01,-2.22 -3.11,-2.68 -0.02,-1.82 2.99,-2.17 0.28,-3.6 z\",\n          \"BI\": \"m 552.39,243.34 c 0.66,-0.13 2.99,0.31 2.86,-1 2.1,-0.75 0.41,1.93 2.05,1.88 -0.8,1.38 -2.12,4.99 -3.98,3.28 -0.86,-1.35 0.21,-2.98 -0.93,-4.15 z\",\n          \"DJ\": \"m 587.83,204.6 c -0.8,-2.73 3.53,-6.12 4.51,-3.27 -0.46,1.17 -4.12,2.23 -0.91,1.75 1.34,1.79 -2.93,1.73 -3.6,1.52 z\",\n          \"AZ\": \"m 596.08,123.95 c 1.37,-0.12 4.67,1.29 3.26,2.25 -1.32,-0.22 -2.65,-1.04 -3.26,-2.25 z m 0.72,-4.49 c 1.06,-0.89 6.64,1.92 3.42,-0.83 1.16,-2.58 3.98,3.43 5.82,-0.11 2.25,-1.16 2.64,3.87 5.38,3.54 -0.25,-0.15 -3.6,0.66 -2.8,3.06 -0.52,1.23 -1.34,-0.09 -1.11,2.38 -2.4,0.12 -2.56,-1.81 -1.48,-2.65 -1.92,-2.61 -5.89,3.52 -5.2,-0.31 -0.9,-0.69 -3.39,-1.11 -1.41,-1.99 -1.93,-0.6 -1.07,-2.48 -2.18,-2.59 l -0.09,-0.14 z\",\n          \"MY\": \"m 776.03,229.79 c 0.94,1.19 3.66,1.54 4.54,1.91 -1.52,-0.7 0.64,-1.85 -0.2,-2.82 0.71,0.24 1.44,-2.13 3.47,-1.6 3.2,0.14 3.49,-7.1 6.03,-3.04 0.76,-0.77 0.48,-3.7 1.3,-1.03 1.04,0.24 -0.67,-1.97 1.23,-2.07 -0.71,-1.32 2.8,-2.95 3.42,-5.2 -0.23,1.83 1.43,-0.64 2.14,1.28 1.13,1.03 -1.26,2.58 1.24,1.51 -0.72,1.4 1.68,0.18 2.51,1.76 3.12,0.67 -3,0.96 -1.88,1.86 2.74,1.53 -1.92,0.86 -2.26,1.45 -1.8,-0.34 -4.97,-1.38 -5.12,1.37 -0.46,2.54 -1.76,3.45 -2.6,5.97 -2.13,1.99 -5.98,-1.42 -7.81,1.64 -2.57,0.56 -6.2,0.31 -6,-2.98 z m -26.46,-12.24 c 0.81,-1.87 3.14,1.48 2.99,2.15 0.86,-1.4 2.33,0.75 2.47,-1.61 3.54,1.64 4.14,5.64 3.78,9.14 1.49,1.41 2.95,5.27 1.51,4.14 -2.37,0.91 -5.07,-2.51 -7.43,-3.83 -0.75,-2.57 -2.09,-3.59 -2.65,-6.4 -0.03,-1.26 0.13,-2.5 -0.67,-3.59 z\",\n          \"PH\": \"m 820.11,207.51 c 0.82,1.58 -0.23,-2.89 0,0 z m -3.49,-7.05 c 0.99,1.44 3.32,3.35 0.62,3.2 -1.3,-0.61 0.15,1.59 0.72,1.89 0.16,3.43 1.86,0.36 0.58,-1.65 2.72,2.14 1.73,-1.54 1.01,-2.78 -0.18,-1.27 -2.04,-0.65 -2.93,-0.66 z m -2.51,7.05 c -1.05,4.34 3.36,-4.32 1.39,-2.87 -0.2,1.08 -0.99,1.88 -1.39,2.87 z m -0.55,-5.64 c 0.23,-1.55 2.22,1.26 2.48,0.23 -1.22,-1.33 -2.47,-3.02 -2.48,-0.23 z m -1.69,7.23 c 2.83,2.93 1.01,-2.32 2.62,-3.92 -2.35,-1.67 -1.28,2.68 -3.2,2.71 l 0.19,0.64 z m -1.84,6.41 c 0.78,1.98 2.03,-3.59 2.71,-1.05 0.9,-0.8 1.16,1.09 1.97,-0.84 2.89,0.63 -0.14,6.61 4.16,5.12 0.3,0.06 0.81,2.53 1.59,-0.01 -1.3,-1.4 0.21,-5.55 1.13,-2.03 0.43,2.55 0.28,-0.8 0.74,-0.69 1.78,-2.11 -1.11,-3.92 -0.11,-5.38 -0.33,-1.64 -3.69,-3.74 -2.16,-0.4 -1.91,-0.53 -1.87,1.23 -3.48,1.66 -0.94,1.41 -2.07,1.73 -1.41,-0.27 -1.34,-1.08 -3.18,1.53 -4.58,2.3 0.03,0.58 -0.28,1.11 -0.57,1.58 z m -0.15,-12.99 c 1.37,1.3 -1.23,5.28 2.16,2.82 2.7,-2.22 0.02,-1.86 -1.84,-3.29 z m -5.75,-12.27 c 0.17,2 1.5,6.03 2.43,3.8 2.23,0.61 -1.82,2.67 0.72,2.78 0.63,0.68 3.87,-1.27 4.8,1.72 -0.26,-1.32 -0.91,-3.18 0.93,-0.96 0.43,1.22 2.78,1.88 2.56,1.94 0.3,2.23 1.13,-1.46 -0.36,-1.02 -1.03,-1.16 -0.4,-1.39 0.4,-1.67 -1.58,-0.77 -1.61,-0.73 -2.22,0.11 -0.91,-2.69 -2.4,-0.92 -3.06,-0.55 -1.48,-1.61 -2.71,-5.38 0.33,-6.48 0.05,0.11 1.99,-2.95 0.09,-3.94 1,-2.9 -0.05,-1.62 -1.57,-2.04 -3.66,-2.61 -3.34,3.01 -3.47,5.26 0.66,3.49 -1.7,-1.12 -1.58,1.06 z m 1.47,7.51 c 1.09,1.87 3.92,5.29 3.14,0.86 -0.53,-1.08 -2.14,-1.26 -3.14,-0.86 z m -8.51,13.72 c 0.2,1.1 4.23,-2.57 4.46,-3.92 2.15,-0.13 2.43,-3.15 1.62,-3.68 -0.27,1.18 -0.08,1.27 -0.56,1.34 -0.2,1.79 -1.78,1.81 -2.8,3.74 -0.85,0.86 -2.18,1.29 -2.71,2.52 z m 12.81,5.73 c 1.89,1.01 0.24,-1.57 0,0 z\",\n          \"UY\": \"m 311.36,321.52 c 1.41,-2.04 4.89,-0.87 5.47,1.5 1.9,-0.63 4.87,2.28 6.66,3.89 1.83,0.85 -0.82,2.69 0.03,4.25 -1.55,3.07 -4.83,2.34 -7.67,2.58 -2.09,-0.87 -8.29,-1.8 -5.1,-5.16 -0.91,-2.46 0.84,-4.7 0.62,-7.05 z\",\n          \"CG\": \"m 502.78,246.68 c 0.46,-1.75 3.43,-0.13 1.65,-2.27 -0.84,-1.77 -0.21,-2.37 2.04,-2.28 -0.05,-3.58 2.35,2.6 3.6,-0.63 1.31,2.9 2.21,-2.62 2.08,-3.94 -1.87,-0.89 -2.27,-3.03 -0.2,-4.28 -0.2,-3.41 -4.84,0.65 -3.36,-3.12 1.95,-2.02 6.63,0.75 8.01,0.25 0.34,-2.92 1.85,-6.38 5.5,-4.76 3.6,0.03 -1.21,4.29 -0.3,6.41 -0.05,3.99 -1.97,6.86 -4.7,9.61 0.43,3.55 -2.12,6.63 -5.2,7.7 0.46,-3.72 -2.66,1.03 -3.68,-0.77 -1.35,-1.81 -3.39,3.15 -3.85,-0.45 -0.43,-0.58 -1.02,-1.01 -1.57,-1.47 z\",\n          \"RS\": \"m 527.66,115.24 c 1.53,-1.25 3.09,-1.55 4.56,0.4 -0.18,1.45 -3,2.01 -3.18,1.86 -0.05,-1.09 -1.47,-1 -1.68,-2.1 m -0.84,-9.68 c -2.48,0.14 -2.86,2.04 -0.82,2.79 -2.61,0.83 1.29,0.24 -0.71,1.91 -0.45,0.81 2.48,1.6 0.37,1.44 1.92,1.69 -2.56,1.04 0.33,2.32 1.77,1.82 3.34,-0.1 4.34,0.67 2.54,0.13 0.42,2.83 3.17,1.73 1.9,-0.05 0.7,-1.8 2.51,-2.46 -3.46,-1.24 0.89,-5.32 -2.67,-3.79 -2.5,-0.59 -0.92,-2.05 -3.85,-2.59 0.63,-1.14 -1.77,-2.19 -2.66,-2.01 z\",\n          \"ME\": \"m 523.1,115.89 c 0.25,-1.66 1.44,-3.47 2.89,-1.55 2.94,0.62 1.38,1.64 -0.11,1.93 0.18,2.71 -1.86,0.38 -2.22,-0.09 0.92,-0.03 -0.85,0.25 -0.57,-0.29 z\",\n          \"EE\": \"m 537.06,70.85 c 0.6,-1.04 1.34,-0.13 -0.09,-0.76 -0.13,-1.61 2.75,-1.72 4.84,-1.83 1.93,-0.52 7.06,0.13 7.88,0.44 -2.59,0.76 -1.03,3.56 -1.05,4.25 -2.65,2.53 -6.13,-2.06 -9.3,-0.16 1.53,-2.48 -0.87,-0.23 -1.83,-1.72 z m -2.39,-1.43 c -3.01,-0.05 0.01,1.64 0.91,0.45 -0.19,-0.33 -0.67,-0.19 -0.91,-0.45 z m -1.65,3.27 c 0.87,-1.16 5.33,-1.53 1.65,-1.89 -3.01,0.38 -1.52,0.02 -1.65,1.89 z\",\n          \"RW\": \"m 552,242.64 c 0.4,-2.57 3.25,-3.61 4.42,-3.65 1.72,1.72 1.16,4.36 -1.45,3.13 0.19,2.38 -2.84,0.96 -2.97,0.52 z\",\n          \"AM\": \"m 592.45,119.98 c 2.56,-0.33 5.77,-0.93 5.47,1.17 0.15,0.96 2.85,1.67 0.42,1.97 2.04,0.44 4.06,3.16 1.45,2.96 -0.61,-2.51 -2.88,-1.32 -4.53,-2.8 -4.29,-0.22 -0.87,-1.32 -2.81,-3.3 z\",\n          \"SN\": \"m 423.83,194.19 c 0.12,-0.09 2.64,-3.19 2.94,-4.92 2.88,-0.61 7.06,-0.8 8.5,2.4 1.83,1.52 3.8,3.4 3.27,5.66 1.46,0.88 3.16,4.02 -0.27,3.51 -2.77,-0.42 -5.35,-1.28 -8.53,-0.81 -1.93,1.34 -6.57,0.51 -2.35,0.14 1.63,0.26 2.32,-0.91 0.58,0.04 -1.62,-0.22 -4.09,0.03 -1.61,-1.6 2.45,-0.5 4.14,-1.3 6.73,-0.4 0.8,-0.66 -2.59,-1.21 -3.7,-1.32 -2.29,1.53 -4.4,-0.28 -3.54,-0.69 1.42,-1.28 -1.46,1.75 -0.92,-0.96 l -0.47,-0.65 z\",\n          \"TG\": \"m 471.48,204.3 c 2.11,0.43 3.17,0.03 2.83,2.29 2.39,1.59 2.1,5.22 2.19,7.95 -0.53,1.66 1.21,4.69 -1.64,3.54 -2.84,-1.32 -0.4,-4.57 -1.44,-6.53 -0.4,-0.76 0.18,-2.86 -0.71,-2.83 0.99,-1.66 -0.9,-3.13 -1.23,-4.41 z\",\n          \"ES\": \"m 481.01,124.75 c -3.23,1.01 -1.72,-2.19 -0.44,-1.14 0.66,0.42 1.44,-0.02 0.44,1.14 z m -34.51,-9.69 c -1.12,-1.61 3.86,-1.24 2.45,-1.98 2.63,-0.74 5.81,0.24 9.04,0.28 3.37,0.18 6.58,0.01 9.89,0.57 0.69,1.2 4.87,2.08 5.98,1.12 1.69,1.81 6.14,0.75 6.81,1.78 -0.36,3.24 -6.37,2.32 -7.21,4.71 -1.76,1.25 -3.38,3.65 -1.23,5.28 -3.13,1.3 -1.31,3.64 -4.82,3.61 -1.54,3.44 -6.17,0.78 -8.96,2.58 -1.53,1.81 -3.61,1.22 -4.39,-0.67 1.04,-0.9 -2.14,-1.43 -2.93,-1.86 -0.2,-1.79 2.55,-1.96 0.46,-3.16 2.46,-1.43 -2.21,-3.58 0.79,-3.38 0.67,-1.89 0.25,-4.13 2.15,-5.44 -1.02,-2.01 -5.14,0.52 -5.33,-1.24 -0.81,-0.18 -2.94,0.94 -1.19,-0.8 -1.06,0.5 -0.05,-0.05 -0.72,-0.56 0.34,-0.26 -0.71,-0.18 -0.43,-0.6 l -0.2,-0.07 z\",\n          \"GA\": \"m 496.4,238.12 c -0.6,-0.74 1.77,0.08 1.29,-2.52 -0.32,-1.18 3.34,0.41 0.71,-0.82 -1.45,-1.4 0.92,-0.16 0.33,-2.07 2.47,0.48 6.01,0.73 4.55,-2.89 1.57,-1.14 6.76,-1.49 5.26,1.87 0.18,0.66 4.28,-0.8 3.14,2.12 -3.42,2.04 1.38,3.08 0.44,5.63 -0.1,0.9 -1.19,4.99 -2.04,2.09 -1.61,3.01 -3.29,-2.85 -4.08,0.77 -2.37,-0.58 -2.23,1.44 -1.11,2.62 0.67,2.35 -1.95,-0.57 -2.11,1.79 -1.37,-1.68 -4.07,-4.42 -3.38,-4.01 -1.66,-0.56 -1.55,-2.01 -1.3,-1.68 -0.96,-0.41 -1.3,-2.68 -0.49,-0.72 1.96,0.14 -1.03,-0.93 -1.2,-2.16 z\",\n          \"HU\": \"m 516.57,103.77 c 2.11,-0.35 0.34,-2.99 2.43,-2.38 1.54,-1.19 4.7,0.77 6.02,-0.83 1.53,-0.8 3.17,-0.28 4.4,-1.58 1.7,0.3 5.87,0.26 5.56,2.12 -3.03,0.15 -3,4.63 -6.02,4.69 -3.59,-0.54 -7.33,2.83 -10.43,-0.55 -0.9,-0.17 -1.03,-1.52 -1.96,-1.47 z\",\n          \"MW\": \"m 562.64,274.16 c 0.55,-1.54 1.02,-3.52 1.93,-3.87 -1.59,-2.89 1.41,-4.69 -0.21,-6.99 -2.72,-2.02 1.67,-0.22 2.39,-0.63 1.41,1.41 1.32,4.73 1.73,5.49 -2.65,2.36 -0.17,5.96 2.15,7.65 1.58,2.22 0.74,5.14 -1.29,6.37 1.59,3.5 -2.26,-0.57 -2.26,-2.16 1.69,-2.24 0.19,-4.57 -2.08,-3.73 -0.59,-1.02 -1.84,-1.13 -2.34,-2.12 z\",\n          \"TJ\": \"m 658.73,125.13 c 1.18,-1.28 4.56,-0.9 4.21,-2.37 -1.87,-0.4 2.45,0.45 1.19,-1.61 1.26,0.02 5.5,-1.48 2.96,0.74 1.05,1.01 2.39,0.38 0.21,1.41 -1.41,-2.67 -5.48,2.23 -1.02,1.02 1.77,0.59 4.14,-0.45 6.02,1.07 1.94,-1.37 4.89,-0.84 4.35,1.59 2.44,-1.12 3.96,2.41 3.17,3.83 -1.95,-0.91 -3.11,0.52 -4.41,-0.44 -2.4,1.75 -6.63,2.78 -5.15,-1.37 -0.71,-0.18 -1.43,-2.98 -3.1,-0.56 -0.59,1.42 -0.71,1.64 -2.7,1.79 0.25,1.79 -2.81,-0.1 -3.84,1.52 -1.76,-1.7 1.84,-3.13 0.32,-5.05 0.18,-1.17 -1.73,-0.61 -2.23,-1.56 z\",\n          \"KH\": \"m 755.76,198.21 c 0.59,-3.27 5.73,-3.72 7.96,-2.65 1.54,0.74 2.61,1.15 2.58,-0.36 0.93,-0.6 3.89,-0.27 3.75,-0.38 -0.99,1.74 1.79,5.8 -1.09,6.48 -1.92,0.98 -1.78,1.07 -3.53,1.67 0.39,1.22 1.9,2.95 -0.33,1.71 -1.91,0.06 -3.33,2.31 -5.24,1.16 -1.45,0.92 0.24,-2.88 -1.42,-0.89 -1.22,-0.76 -0.38,-2.35 -1.48,-3.16 0.32,-1.4 -1,-2.27 -1.2,-3.58 z\",\n          \"KR\": \"m 822.96,129.52 c 0.55,0.4 1.63,-2.7 3.79,-1.66 2.05,-1.89 3.71,2.6 4.27,4.45 0.43,2.34 0.11,4.94 -2.71,4.64 0.09,1.13 -2.54,-0.58 -2.41,1.11 -0.67,-0.96 -0.84,1.65 -1.11,-0.18 -1.09,1.41 -2.53,1.09 -2.41,0.33 1.32,-0.25 -1.3,-1.14 0.86,-2.65 -1.8,0.25 1.81,-1.21 -0.11,-0.92 1.21,-0.17 -0.79,-1.02 -0.24,-1.92 -1.84,-0.48 0.09,-1.84 0.89,-0.5 0.43,-0.92 -0.31,-1.19 -0.81,-2.7 z\",\n          \"HN\": \"m 224.11,195.03 c 0.55,-2.12 3.29,-4.64 5.8,-3.75 3.09,0.04 4.62,-1.16 7.72,-0.16 2.35,0.74 1.48,0.96 1.03,1.19 0.14,0.13 1.39,0.51 1.63,0.41 -0.9,-0.61 2.59,1.32 -0.25,1 -2.54,0.7 -3.88,0.03 -5.35,2.23 -1.06,0.91 -3.73,0.28 -3.8,2.4 -0.9,1.88 -2.04,-1.1 -2.35,-0.67 0.17,-2.12 -3.09,-0.68 -4.43,-2.65 z\",\n          \"IS\": \"m 405.62,51.63 c 2.16,-0.72 4.6,-0.3 4.87,-0.3 3.05,-0.07 -3.66,1.31 0.45,1.08 0.6,0.6 -3.4,0.12 -4.54,0.62 -3.06,0.86 4.9,-0.38 3.77,1.05 1.24,0.15 2.59,-0.84 0.71,0.43 -0.23,0.35 0.11,0.02 1.38,0.02 -1.11,0.56 -1.87,0.98 -3.46,1.16 1.65,0.86 5.37,-0.27 6,0.57 0.56,0.2 5.43,1.94 7.36,0.32 1.74,-0.34 5.05,-1.16 7.59,-1.9 2.1,-0.2 2.25,-1.4 3.58,-1.59 -0.35,-0.14 1.01,-0.17 -0.66,-0.4 1.02,0.32 2.79,-0.46 0.57,-0.46 2.34,-0.37 -1.51,0.03 0.73,-0.68 -0.59,-1.36 -3.35,0.61 -1.9,-1.01 -2.62,0.82 0.43,-1.03 -2.22,-1.01 2.25,-1.38 0.06,-0.05 -1.29,-0.27 -1.94,-2.31 -2.55,1.21 -4.65,0.17 -0.86,1.48 -4.09,-1.44 -2.19,1.52 -1.07,-2.17 -3.68,-1.57 -4.19,-0.29 -2.21,-2.41 -1.78,0.14 -2.68,0.63 -1.63,-0.67 -1.58,1.8 -2.3,0.13 -1.44,-1.35 -0.37,0.03 -0.02,-1.27 0.3,-1.04 -7.13,-1.94 -3.28,-0.97 0.94,-0.19 -2.39,0.24 0.11,0.57 0.64,1.46 -3.73,-1.44 -2.37,0.21 -2.91,-0.64 1.75,0.89 -1.02,0.28 0.62,0.58 0.96,0.31 1.21,0.62 -1.59,-0.14 -2.67,-0.42 -1.44,0.41 -1.53,-0.52 -2.19,0.25 -0.11,0.35 z\",\n          \"NI\": \"m 228.97,198.89 c 2.22,1.54 1.82,-2.21 3.14,-1.96 1.8,-0.48 3.25,-0.98 4.5,-2.96 1.86,1.45 5.3,-2.12 4.28,0.65 -0.25,1.86 -0.79,4.26 -0.92,6.21 -0.06,-2.95 -0.25,1.59 -0.43,1.07 -0.08,1.24 0.94,4.96 -1.84,2.87 -3.7,0.58 -5.7,-2.53 -8.45,-4.88 -0.24,-0.2 -0.57,-0.68 -0.29,-1 z\",\n          \"CL\": \"m 276.37,385.59 c -0.05,-1.26 1.39,-0.84 0.65,-1.59 1.59,0.13 5.04,-1.84 4.57,1.54 0.28,3.88 0.23,5.47 -3.52,4.19 -0.61,-0.05 -2.89,0.29 -1.99,-0.31 -1.32,-0.12 -2.45,0.16 -3.87,-0.54 0.81,0.32 2.1,-0.39 3.66,-0.26 -1.03,0.77 3.05,0.44 0.34,-0.18 -2.36,-1.03 2.7,0.75 2.19,0 1.41,0.25 1.64,1.19 1.82,0.15 -1.76,-0.03 -4.75,-1.9 -1.19,-2.27 1.7,-1.56 -2.52,0.22 -2.66,-0.71 z m 0.26,-98.36 c 2.02,0.25 1.75,-4.14 3.23,-1.04 0.67,2.13 2.81,4.91 1.41,6.76 2.08,1.77 0.96,7.45 4.58,7.14 1.13,3.77 -4.88,3.71 -4.01,6.44 -0.2,1.91 0.59,4.02 -0.02,5.39 -2.29,1.49 -4.86,5.58 -3.56,8.57 -1.57,0.99 -2.42,4.09 -1.59,5.24 0.87,2.47 1.44,3.61 1.51,6.1 -2.23,1.13 -1.01,4.3 -2.21,5.7 -2.53,1.3 -1.36,4.75 -0.67,6.83 -2.18,1.13 -2.17,3.47 -2.36,4.99 -1.25,1.89 0.52,4.42 -1.11,5.57 0.01,2.29 1.19,2.52 1.22,4.43 -1.71,1.55 3.78,1.37 0.43,2.25 -3.22,-0.51 2.82,1.52 -0.57,2.37 0.34,1.34 -0.01,1.58 0.07,3.02 -0.61,1.46 -2.67,2.58 -1.64,4.61 -0.92,1.62 -4.95,3.2 -2.6,5.74 -0.14,2.05 3.62,-0.36 2.65,2.43 -0.47,3.82 6.22,1.32 8.79,2.7 3.36,0.62 -1.14,-0.41 -2.06,0.91 -2.43,0.02 -3.41,1.26 -3.24,3.58 -1.39,1.23 -5.33,-1.82 -3.06,-1.16 -0.68,0.34 1.72,-0.97 0.55,0.44 1.42,-0.91 3.15,-3.11 0.31,-1.56 -2.07,0.42 -1.23,0.09 -2.01,0.85 1.44,1.92 -4.32,-0.94 -0.61,-0.22 -2.27,-2.3 6.73,-1.24 1.42,-1.92 -1.04,0.64 -0.6,-0.68 -1.92,0.43 1.36,-0.03 -1.56,1.89 -1.2,0.55 0.06,-0.49 1.71,-1.5 0.13,-0.76 -1.35,1.4 -0.79,-1.71 -0.7,-1.26 2.17,0.51 1.54,-0.41 2.66,-0.09 -0.44,3.05 1.46,-2.61 -1.65,-1.74 2.46,0.16 1.67,1.45 -0.24,0.34 1.61,1.45 -0.76,0.42 -0.01,0.85 -0.55,0.96 -1.01,-0.22 -0.6,-0.65 -2.03,-0.12 -0.19,-0.88 -0.41,-0.81 0.36,-0.88 -2.69,-0.9 -0.39,-1.76 0.93,-0.49 0.61,-1.34 -0.61,0.07 -1.22,-1.17 1.08,-0.85 -0.96,-1.29 -2.23,-1.65 3.6,0.7 0.23,-0.81 0.76,-0.65 1.68,0.2 0.18,-0.78 0.06,-0.26 0.08,-1.16 1.53,-0.22 -2.34,-0.58 0.83,-3.46 -1.59,-0.6 -1.78,-1.82 1.42,-2.25 -0.36,-2.59 3.47,0.33 -2.49,-2.26 0.43,-1.15 -0.1,-1.19 4.23,1.11 1.71,-0.74 2.06,1.56 -0.88,-2.02 -0.68,-0.25 -2.66,0.18 -2.16,-0.88 -1.02,-0.42 1.18,0.03 -2.05,-1.18 0.26,-1.08 0.88,-0.99 -0.62,0.01 0.16,-0.9 -1.58,-1.09 -1.28,0.64 -2.57,-0.96 0.74,-0.86 -2.96,0.44 -1.14,0.62 -1.94,0.01 1.62,-1.89 1.86,-2.17 -1.22,0 -0.43,-0.85 0.83,-0.49 1.36,-0.61 1.81,1.23 -0.1,0.86 2.31,-0.08 1.35,0.39 1.99,0.86 0.77,-0.64 1.44,-1.95 0.22,-0.6 0.29,-1.86 1.88,-1.77 0.37,-1.87 0.92,-1.46 3.32,-0.04 0.33,-1.04 0.62,-1.23 4.04,-2.35 0.68,-2.97 0.43,-1.15 0.86,-1.04 0.37,-2.49 1.07,-1.47 0.63,-2.47 1.12,-3.09 1.33,1.3 0.21,-1.02 -0.45,-1.02 2.67,-1.44 0.6,-0.53 -0.81,-0.73 -2.55,2.03 -3.01,-3.42 -0.91,-4.9 1.79,-2.07 -1.93,-6.4 0.04,-7.44 1.43,-1.34 1.51,-3.41 3.03,-5.53 1.21,-3.42 2.91,-6.61 2.07,-10.33 -1.29,-2.93 2.03,-4.84 0.3,-7.64 2.01,-2.99 1.42,-7.08 2.93,-10.02 0.06,-3.01 -0.89,-5.37 0.45,-7.38 0.71,-3.26 0.45,-6.62 -0.05,-9.87 -0.4,-0.74 0.29,-1.76 -0.36,-2.34 z m -6.78,74.23 c 0.56,-1.88 -2.75,-0.01 -1.07,0.52 l 0.56,-0.17 z m -1.96,-8.14 c -1.8,-0.98 -3.3,4.48 -0.93,4.4 1.56,-1.42 -0.04,-2.28 1.05,-3.75 z m -3.57,22.95 c 1.89,-0.19 0.91,-1.17 0.82,-3.19 -1.3,-1.25 -0.81,0.99 -1.43,1.06 -0.68,0.31 -1.56,0.59 0.28,1.59 0.73,-3 0.68,0.64 0.33,0.55 z m 0.61,-3.67 c 0.49,-1.39 -0.84,-1.39 -0.53,-0.75 -1.24,0.1 -0.13,0.98 0.53,0.75 z m -1.6,0.03 c 0.75,-2.37 -2.08,-1.32 -0.39,-0.87 0.23,0.25 -0.02,0.69 0.39,0.87 z m 0.53,7.83 c 1.72,0.13 0.88,-1.72 0,0 z m 2.21,-1.79 c 0.43,-1.09 -2.4,-1.19 0,0 z m -1.46,0.76 c 3.02,-1.15 -1.99,-0.87 0,0 z m -1.63,-0.91 c 1.5,-1.81 -1.25,-0.65 0,0 z m 0.8,-1.39 c 0.78,-1.24 -0.56,-0.17 -0.87,-0.44 -0.26,0.69 0.43,0.93 0.87,0.44 z m 4.34,8.49 c 1.83,0.02 -3.39,-1.61 -3.22,-1.3 0.98,0.8 2.22,0.74 3.22,1.3 z m 9.71,5.08 c 1.02,0.7 2.43,1.2 1.75,0.05 1.18,0.28 3.17,1.85 3.46,0.99 -1.07,-0.7 -2.24,-0.5 -0.26,-0.61 -1.89,-0.56 -2.83,-0.44 -0.48,-0.73 -1.32,-0.58 -3.38,0.33 -4.47,0.31 z m -1.47,0.22 c 1.86,-0.63 -1.32,-0.36 0.45,-0.87 -1.44,0.44 -2.68,-0.18 -0.45,0.87 z m -0.07,-2.73 c 0.23,-1.03 0.35,-2.08 -1.05,-1 0.04,0.55 0.53,0.94 1.05,1 z m -2.1,-0.61 c -3.24,-0.16 2.74,1.87 0,0 z m -1.09,-0.2 c -2.37,-0.68 -0.37,1.88 -0.39,0.54 0.69,0.25 0.1,-0.34 0.39,-0.54 z m -3.2,0.54 c 3.23,-0.71 0.16,-1.7 -1.01,-2 -1.43,0.42 1.49,0.88 -0.77,0.48 -1.27,1.1 3.85,0.62 1.21,1.4 z m 16.09,2.7 c -1.18,-1.36 -5.24,-0.27 -2.03,0.39 0.09,-0.66 1.54,0.87 2.03,-0.39 z\",\n          \"MA\": \"m 435.34,157.82 c 3.51,-1.58 8.67,-3.15 9.9,-7.6 -1.92,-2.47 1.17,-6.42 3.2,-8.19 3.79,-0.7 6.09,-3.66 7.2,-7.08 2.19,-0.65 3.38,3 6.18,1.58 2.19,-0.14 3.29,-0.27 5.09,1.74 -0.08,1.96 1.14,5.01 1.62,6.42 -0.43,1.66 -4.65,-0.6 -6,1.76 -2.79,-0.04 0.86,2.65 -2.45,2.75 -2.89,1.88 -5.76,2.93 -8.95,3.73 -2.19,0.78 -3.99,2.27 -3.3,4.82 -4.14,0.35 -8.33,0.06 -12.49,0.08 z\",\n          \"LR\": \"m 440.03,216.14 c 1.83,-1.24 2.39,-4.03 4.44,-4.43 2.22,0.14 0.61,5.84 3.27,2.46 2.46,0.33 -1.11,4.3 2.27,3.96 2.12,1.34 1.66,7.23 -1.53,4.32 -3.12,-1.85 -5.71,-4.25 -8.45,-6.31 z\",\n          \"NL\": \"m 482.62,90.46 c 1.95,0.97 -0.52,-0.48 2.14,-0.3 1.14,-0.06 -3.78,-0.2 -0.57,-1.79 0.55,-2.7 8.79,-4.99 7.11,-0.85 -1.71,0.01 0.69,1.12 -0.61,1.98 -2.17,0.18 -2.33,0.02 -1.76,1.94 0.3,1.35 -2.06,2.03 -0.81,0.3 -2.1,-1.48 -4.93,-0.13 -6.42,-1.21 l 0.29,-0.07 z\",\n          \"CF\": \"m 511.86,218.62 c 1.77,-2.21 2.85,-4.56 5.73,-5.01 1.22,1.22 4.09,-0.82 6.16,-0.93 1.69,-1.38 -0.16,-2.94 3.02,-2.46 3.37,-0.04 4.4,-3.88 6.79,-5.2 3.27,-1.11 4.41,4.22 3.67,5.65 0.28,0.52 2.21,0.5 2.35,1.77 2.68,0.6 2.73,3.31 5.43,4.47 -0.45,1.76 3.81,3.45 2.66,4.3 -2.17,0.78 -4.86,-1.52 -6.36,0.42 -2.09,-0.85 -4.18,1.49 -6.17,0.83 -1.28,2.77 -6.09,0.99 -7.68,-0.78 -2.93,-1.92 -4.44,3.1 -4.31,3.91 -2.96,-0.58 -6.01,-0.26 -6.14,3.39 -0.3,0.07 -0.9,-2.78 -2.47,-3.26 -1.22,-2.01 -2.17,-4.62 -2.58,-6.92 z\",\n          \"SK\": \"m 518.91,98.85 c 2.51,-0.63 5.04,-3.35 7.51,-2.21 2.17,0.85 5.54,-0.96 7.91,1.06 -1.09,3.67 -5.16,-0.25 -7.14,2.45 -2.96,-0.08 -5.13,2.79 -8.14,-0.1 -0.1,-0.39 0.02,-0.81 -0.14,-1.2 z\",\n          \"LT\": \"m 530.27,77.87 c 3.05,-1.8 6.58,-0.36 9.84,-0.7 1.85,-0.36 7.4,2.36 5.18,3.35 -2.43,0.07 -1.76,2.97 -2.5,2.64 -2.47,0.5 -5.42,1.45 -7.68,-0.54 0.63,-3.74 -5.3,-0.28 -4.84,-4.74 z\",\n          \"ZW\": \"m 541.96,285.73 c 2.74,0.77 5.77,1.04 7.14,-2.41 3.04,-0.69 3.3,-4.86 7.14,-3.72 1.14,1.68 5.13,2 7.14,3.02 -0.44,2.08 0.95,4.75 -0.74,6.34 1.42,1.95 -0.04,3.83 -0.8,6.08 -0.79,2.91 -4.6,4.41 -7.82,3.01 -1.93,-1.33 -5.66,-1.22 -5.41,-4.73 -2.57,-1.13 -5.49,-4.18 -6.64,-7.58 z\",\n          \"LK\": \"m 693.19,214.25 c -1.23,4.36 3.86,6.27 5.71,2.37 0.06,-3.36 -1.74,-4.91 -3.65,-7.84 -2.19,-1.63 0.81,0.69 -1.39,-0.75 -0.85,0.54 3.19,1.28 0.23,0.77 -0.38,1.5 -0.88,4.98 -1.19,3.97 -0.03,0.52 0.24,0.98 0.29,1.48 z\",\n          \"IL\": \"m 566.95,147.85 c 1.69,-1.7 1.42,-5.7 3.8,-5.71 1.34,3.02 -2.94,1.31 -1.6,3.99 0.15,0.56 -1.06,2.06 1.16,0.9 -0.44,1.53 -1.37,8.03 -2.13,3.85 -0.53,-0.96 -0.8,-2.03 -1.22,-3.03 z\",\n          \"LA\": \"m 749.45,178.39 c 1.02,-1.22 1.78,-2.83 3.12,-3.15 1.11,2.39 2.6,-0.56 1.04,-2.12 1.25,-2.09 3.1,1.91 3.89,1.63 -0.97,2.9 2.55,2.37 3.97,2.31 0.59,1.1 0.04,1.11 1.49,2.11 -0.53,1.53 -4.67,1.18 -1.64,2.82 2.73,0.82 3.04,3.56 5.51,5.17 0.43,2.43 3.48,2.66 2.68,4.57 2.36,1.37 -0.81,4.58 -2.32,2.97 -1.92,0.35 -0.3,2.73 -2.87,1.18 -0.88,-0.47 0.94,-2.86 0.23,-3.61 0.57,-1.96 -3.33,-2.69 -2.12,-5.69 -1.55,-2.5 -3.98,-3.46 -5.69,-1.23 -1.67,-3 -5.88,3.86 -4.29,-0.92 0.59,-2.17 0.5,-4.24 -2.02,-4.08 0.79,-1.19 -0.1,-2.42 -0.98,-1.97 z\",\n          \"KP\": \"m 816.84,122.85 c 2.59,-1.48 5.26,-2.72 7.31,-4.69 0.86,1.47 5.12,1.43 3.03,-0.63 2.63,0.4 4.45,-1.79 5.8,-2.67 2.59,2.04 0.14,1.73 -1.31,3.76 0.92,3.33 -4.08,3.75 -6.09,5.33 -1.11,1.84 1.86,1.45 2.29,3.44 -1.5,1.01 -3.8,-0.13 -4.84,1.89 -1.84,0.14 -2.7,-0.88 -3.21,0.14 0.39,-0.52 -1.55,-0.36 -0.73,-0.93 -2.55,0.34 0.91,-2.31 1.1,-1.75 -2.6,0.02 1.52,-3.15 -1.87,-2.73 0.01,0.5 -1.79,-0.5 -1.45,-1.17 z\",\n          \"GR\": \"m 545.17,126.04 c -1.44,-0.12 -1.9,-1.54 0.25,-0.61 0.92,0.89 -0.13,0.09 -0.25,0.61 z m -6.34,10.56 c -3.34,-0.05 -0.37,-2.12 0.68,-0.43 1.73,-0.29 5.08,0.32 4.88,0.94 -2.12,0.27 -3.69,0.25 -5.56,-0.51 z m -1.48,-9.18 c -0.69,-1.04 -2.82,-1.58 -0.46,-1.36 1.55,0.16 4.59,4.29 1.65,1.57 -0.35,-0.18 -0.9,0.16 -1.19,-0.22 z m -8.51,0.26 c 2.24,1.03 -1.41,1.08 0,0 z m -1.41,-3.66 c 2.05,-0.05 2.05,-4.11 4.6,-3.45 2.38,-1.45 5.12,-0.88 7.76,-1.89 1.35,1.16 4.93,1.21 4.87,-0.43 2.5,0.73 -0.92,4.05 -2.73,2.24 -1.49,-0.14 -5.95,0.56 -2.92,1.66 1.81,1.58 -3.07,-1.43 -0.56,0.99 -0.98,-0.49 -2.57,-1.08 -0.83,0.16 -1.52,-0.38 -3.14,-3.48 -2.86,-0.2 1.16,1.09 2.41,3.54 0.78,1.83 -0.6,0.79 1.08,1.42 -0.98,1.31 1.52,0.94 4.64,0.97 4.02,3.5 -1.81,-1.95 -3.74,-0.36 -1.59,0.63 -1.18,0.51 -2.83,-1.15 -1.28,1.18 1.3,3.13 -1.11,-0.93 -1.39,1.49 -0.75,-1.26 -1.3,-1.77 -2.09,-1.03 0.25,-1.99 -3.16,-3.34 0.09,-4.11 1.16,0.66 5.81,1.14 2.4,-0.11 -1.57,-0.44 -4.82,0.91 -5.22,-1.74 2.97,0.28 -1.98,-0.52 -2.05,-2.04 z\",\n          \"TM\": \"m 617.39,118.21 c 2.91,-3.16 6.68,-0.85 9.06,1.25 2,-0.16 4.6,1 3.87,-1.84 1.02,-1.07 4.14,-1.36 3.4,-1.45 -0.27,-1.6 4.14,0.52 4.74,1.36 -0.37,2.12 2.58,2.39 4.69,2.11 1.64,3.69 4.97,5.76 8.74,7.21 1.42,1.64 6.38,0.8 4.33,3.74 -2.75,-1.31 -4.57,1.15 -5.97,3.21 -3.12,0.45 -2.77,2.05 -5.58,2.97 -1.73,-1.19 -3.96,-1.24 -3.1,-4.16 -3.28,0.38 -4.88,-3.4 -8.24,-3.13 -2.82,-1.64 -5.28,-1.49 -8.31,-0.63 -1.37,1.94 -4.87,2.62 -3.74,-0.96 1.59,-2.44 -3.48,-3.29 -1.37,-3.57 1.62,-0.1 -0.89,-1.71 -1.74,-1.3 0.12,-1.81 1.08,-3.34 -0.79,-4.81 z\",\n          \"EC\": \"m 247.34,241.79 c 0.56,-1.35 0.41,-4.3 1.59,-4.54 -0.23,-1.3 1.79,-2.25 0.9,-3.85 2.19,-0.37 3.44,-2.62 5.64,-0.29 1.79,0.8 3.64,2.47 5.35,1.47 1.38,1.31 2.48,1.02 1.69,1.84 2.06,2.8 -2.75,6.82 -6.09,7.42 -2.67,0.7 -1.82,6.03 -4.71,5.36 -0.68,-1.98 -4.7,-0.73 -2.12,-2.81 -0.74,-1.59 1.65,-2.89 1.07,-5.11 -0.88,2.01 -0.14,0.99 -1.14,1.43 -0.11,1.34 -1.7,-0.51 -2.16,-0.92 z m 2.63,1.34 c -1.83,1.11 0.51,0.96 0,0 z m -32.07,-7.51 c 2.44,0.88 -1.18,3.78 2,2.57 0.3,-0.63 -1.01,-3.21 -2,-2.57 z\",\n          \"BJ\": \"m 474.11,205.49 c 0.64,-2.71 4.8,-1.26 4.62,-4.35 2.63,-0.84 4.19,3.7 3.22,5.34 -0.27,2.61 -3.28,3.79 -2.53,6.89 0.52,2.5 0.56,5.54 -3,4.76 -0.07,-2.01 0.47,-6.02 -0.42,-8.64 0.25,-2.12 -1.84,-2.22 -1.88,-4 z\",\n          \"SI\": \"m 509.32,106.07 c 0.74,-0.2 -0.9,-1.4 0.83,-1.36 2.87,1.35 6.07,-2.33 7.79,0.18 -2.08,-0.27 -3.04,2.13 -3.97,2.88 -1.55,-1.27 -4.75,1.19 -3.91,-0.87 -0.71,-0.11 -0.23,-0.5 -0.75,-0.83 z\",\n          \"NO\": \"m 485.82,62.84 c 1.26,-0.31 3.08,-0.04 0.79,-0.26 1.08,-0.49 -1.94,-0.11 0.31,-0.42 -2.73,-0.44 1.77,-0.61 2.54,-0.58 2.96,-0.13 -3.4,0.05 -2.8,-0.32 0.18,-0.21 -1.19,-1.24 0.51,-0.14 -0.08,-1.13 3.05,0.62 1.67,-0.79 1.3,0.53 1.37,-1.1 2.56,0.3 -0.34,0.37 1.88,-0.53 -0.51,-0.78 -2.77,-0.03 0.17,-0 -0.91,-0.23 -1.15,-0.92 4.72,0.65 2.98,-0.4 2.37,-0.32 1.02,-0.03 -0.53,-0.15 2.37,-0.31 -2.71,0.23 -0.41,-0.24 -1.95,-1.52 6.06,1.08 2.37,-0.39 -0.46,-0.81 2.72,0.79 0.78,-0.16 -0.54,-0.18 0.32,-0.58 1.65,-0.55 -2.26,-0.71 3.37,-0.25 0.63,-0.7 2.72,-0.69 1.59,0.96 3.94,0.08 1.32,-0.25 -0.46,-0.58 2.03,-0.94 -0.86,-0.59 0.82,-0.83 -0.41,-0.8 -2.29,0.72 0.68,0.45 -1.89,1.28 -2.18,0.93 -1.04,-0.98 -1.87,-0.36 -2,0.03 2.16,-0.67 0.46,-0.77 1.65,-2.29 5.41,-0.44 4.07,-1.96 1.06,-0.19 0.73,-0.91 2.73,-0.54 -1.33,-0.24 -4.9,0.82 -2.23,0 -1.27,-0.01 0.67,-0.28 0.88,-0.6 1.91,-0.35 -0.95,0.49 1.42,0.09 2.26,-0.94 -0.76,0.24 -0.5,-0.61 -1.44,-0.76 2.85,0 0.29,-1.01 0.56,0.15 1.66,-1.02 1.99,-0.79 -3.53,-0.71 5.72,-0.93 1.35,-0.94 -2.63,0.49 0.03,-0.21 -0.97,-0.15 -2.11,-0.8 3.27,-0.55 -0.19,-0.97 1.21,-0.03 -0.25,-0.25 1.69,-0.19 -1.98,-0.16 1.79,-0.11 -0.69,-0.54 1.29,-0.53 3.4,-0 2.48,-0.74 1.64,-0.23 4.96,0.02 1.35,-0.35 -2.63,0.16 0.76,-0.49 -0.08,-0.73 0.18,0.17 3.04,0.75 2.27,-0.03 -3.82,0.08 2.74,-0.95 -1.72,-0.34 -2.44,0.43 1.74,-0.48 -0.75,-0.43 0.35,-0.01 5.19,-0.57 1.31,-0.54 0.83,-0.93 3.01,0.03 2.66,0.31 -0.19,-0.22 2.1,-0.43 0.06,-0.61 0.73,-0.28 -1.14,-0.71 1.36,-0.05 -2.96,-1.35 2.82,0.09 2.15,-0.69 2.17,-0.11 -5.74,0.1 -1.42,-0.83 2.36,0.29 -0.05,-0.37 1.87,-0.17 -1.1,-0.4 1.91,-2.29 2.33,-1.5 2.88,0.47 -2.03,-0.96 1.02,-0.36 2.6,0.67 0.2,0.31 0.52,-0.27 -0.36,0.29 -0.21,-1.03 1.65,-0.76 -0.92,2.87 1.93,-2.06 1.63,0.51 -2.83,1.89 2.37,-0.36 0.96,0.08 0.67,-1.45 1.02,-0.35 2.54,-0.88 2.11,1.14 1.05,-0.53 0.67,-0.46 -4.2,-0.81 2.66,-0.25 1.5,-0.5 1.56,-0.3 1.82,0.72 0.1,0.55 1.62,-0.21 3.8,0.73 2.37,-0.46 0.51,-0.18 3.93,-1.1 3.42,-1.5 -0.84,-0.62 4.06,-0.76 3.55,-0.03 -2,-0.06 -2.62,3.07 -0.8,1.13 1.27,-1.29 4.18,-1.93 3.05,-0.85 0.08,1.6 1.9,-0.07 2.23,-0.36 1.63,-0.17 -1.82,-0.38 0.53,-0.66 1.45,-0.88 4.14,0.8 0.91,0.71 1.69,0.19 -1.86,0.61 0.84,0.26 0.39,0.46 -2.03,0.69 0.52,0.55 -1.21,1.59 2.05,-2.74 2.68,-0.49 2.12,-0.11 2.92,0.19 4.66,0.99 -1.47,1.05 -6.54,0.26 -5.78,0.68 2.79,0.32 1.98,1.46 4.58,0.78 2.52,0.96 -1.66,0.18 -2.23,1.2 -1.23,0.67 -3.88,1.43 -1.48,-0.43 -2.59,-1.43 -7.34,-2.38 -9.52,0.4 -0.81,3.51 -5.16,0.84 -7.65,2.03 -2.68,-0.31 -4.71,-2.68 -6.62,-1.11 -2.13,-0.47 -0.16,0.84 -1.93,1.38 1.27,1.67 -5.73,-1.77 -5.14,1.27 -2.3,-0.22 -6.17,1.15 -4.97,3.04 -1.87,1.2 -3.41,2.53 -4.9,2.95 1.17,2.75 -4.41,3.41 -1.14,4.9 -2.33,0.59 -6.57,0.68 -5.72,4.14 0.71,1.64 -0.32,3.59 2.18,3.87 -0.48,1.36 -2.55,1.05 -0.79,2.71 -0.75,1.79 -3.15,1.78 -2.61,4.23 -1.65,-0.06 -3.3,-1.91 -2.68,-2.73 -0.44,1.06 -1.26,1.03 -0.85,1.82 -2.91,0.76 -2.77,1.61 -6.29,3.04 -1.51,0.83 -4.6,0.12 -4,-0.19 -3.57,-0.14 -3.22,-2.92 -1.57,-1.96 3.17,-0.69 -1.7,0.39 -0.07,-0.73 2.73,-0.65 -2.07,0.06 1.27,-1.03 -1.4,0.45 -2.04,0.14 -1.83,0.63 -1,-0.98 -1.25,1.04 -1.45,-0.77 0.61,0.23 -0.14,0.15 1.61,-0.14 -0.48,-0.38 1.39,-0.2 -0.64,-0.45 1.16,-0.92 2.5,-1.84 2.68,-1.25 2.87,-2 -2.26,0.61 -2.59,0.33 0.21,-0.74 -2.15,0.38 -1.05,-1.04 1.41,0.37 0.99,-0.89 -0.44,-0.22 -1.36,-1.08 2.3,-0.14 -0.5,-0.98 -0.02,-0.36 4.94,-1.06 5.19,0.03 0.68,-0.38 2.26,-0.56 1.62,-1.31 0.43,-0.23 -1.2,1.23 -1.35,0.52 -0.78,-0.42 -6.28,1.02 -4.57,-0.44 1.71,-0.1 -0.99,0.12 -0.92,-0.13 z m 58.18,-26.95 c 1.4,-0.42 -3.26,-0.53 -0.61,0.12 z m -7.07,0.64 c -1.13,-0.1 -1.93,0.41 -4.02,0.38 -1.04,0.42 3.23,0.58 4.02,-0.38 z m -12.74,3.08 c 0.69,-0.98 -1.04,0.02 -1.39,0.06 0.27,-0.41 -1.24,1.38 1.39,-0.06 z m -5.05,1.12 c 0.92,-0.07 -1.34,0.93 1.02,0.37 3.71,-0.07 0.34,-1.81 -0.11,-0.84 1.43,0.21 -2.1,-0.12 -0.91,0.47 z m -4.35,1.58 c -0.36,0.38 -1.74,1.62 0.24,0.71 -0.45,1.34 5.44,-1.86 1.36,-0.69 -0.61,1.24 0,-1.89 -1.16,-0.11 l 0.23,0.1 z m -1.49,0.33 c 3.52,-0.83 -1.42,-1.19 -0.91,-0.12 1.28,-0.2 1.46,-0.52 0.91,0.12 z m -3.59,1.17 c 0.03,0.68 2.78,-0.85 0.05,-0.35 0.45,0.42 -0.75,0.04 -0.05,0.35 z m 20,-26.23 c 1.3,0.65 6.35,-1.22 4.36,0.4 1.8,0.27 5.88,-1.01 6.15,-1.4 -0.88,-0.35 -5.46,0.11 -3.2,-0.94 -1.86,-0.19 -5.96,-0.41 -6.72,0.29 2.63,0.3 0.29,1.07 -0.6,1.64 z m -6.29,-6.99 c -3.2,0.5 3.52,1.05 4.83,0.56 1.93,-0.27 7.79,0.02 2.96,0.31 -1.05,-0.01 -3.58,-0.05 -1.09,0.23 -1.45,-0.02 -5.49,-0.27 -2.02,0.45 3.57,0.43 6.3,-0.3 8.6,0.78 3.9,-0.08 6.43,-0.98 9.59,-1.82 2.52,-1.37 -3.26,-1 -4.41,-1.29 -3,-0.64 -3.17,0.19 -6.22,0.31 1.44,-1.86 -2.02,-0.77 -2.25,0.49 -1.74,-0.8 -1.66,-0.54 -4.15,-0.9 -1.83,-0.94 -3.16,-0.83 -2.83,0.02 -2.44,-0.38 -0.91,0.06 -1,0.53 -1.9,-0.54 -4.83,-0.28 -3.25,0.09 0.33,0.22 2.75,0.09 1.23,0.24 z m -20.56,2.17 c 1.43,0.89 1.1,-0.97 2.49,0 -2.27,0.33 1.45,0.91 -1.14,0.67 -3.69,0.56 6.63,1.44 1.44,1.39 1.84,1.17 7.55,0.74 6.04,-0.63 1.64,0.22 3.04,-0.75 2.54,0.55 2.3,0.1 4.53,-1.15 3.41,0.1 3.93,0.29 -3.43,-0.03 -4.61,0.87 -1.97,0.48 -2.26,-0.11 -3.99,0.62 3.09,1.01 6.56,-0.07 9.79,-0.05 0.24,1 -6.32,0.02 -5.92,0.87 1.73,-0.02 5.43,0.79 1.74,0.25 -1.88,-0.45 -6.66,0.09 -2.25,1.16 1.45,0.41 7.32,0.15 3.01,0.52 -1.21,0.56 4.19,1.65 3.74,0.18 1.03,-1.41 3.41,-2.01 4.35,-3.3 1.63,-0.1 0.89,-1.78 3.66,-1.56 1.49,0.13 6.64,-0.54 2.61,-0.84 -2.92,-0.48 -5.6,-0.41 -6.96,-1.93 -0.79,0.3 -3.04,0.67 -1.18,-0.4 -3.75,-1.72 -6.96,10e-4 -4.33,2.1 -1.55,-0.66 -5.56,-3.79 -6.28,-0.8 -1.96,-0.68 -2.15,-0.85 -4.29,-0.82 1.67,-0.05 6.21,-0.84 1.93,-0.68 -2.82,0.37 -4.57,-0.1 -6.49,0.69 0.91,-0.1 -1.62,0.23 0.7,1.03 z m 2.37,2.41 c -1.6,-0.8 -6.01,-2.2 -2.23,-0.37 0.19,0.02 3.62,1.26 2.23,0.37 z\",\n          \"MD\": \"m 545.77,99.88 c 2.16,-1.57 4.18,0.57 5.96,0.53 1.43,0.26 2.23,2.93 1.96,2.89 2.88,1.16 0.75,2.71 -0.8,1.4 -0.73,1.37 -3.41,5.07 -3.05,1.08 1.27,-2.27 -2.61,-4.76 -4.07,-5.9 z\",\n          \"LB\": \"m 569.26,142.56 c 0.93,-1.57 2.6,-6.43 4.07,-3.4 -0.89,1.41 -2.1,3.21 -4.07,3.4 z\",\n          \"NP\": \"m 694.09,154.14 c 0.44,-1.98 1.75,-3.37 3.45,-3.38 2.26,-2 5.02,3.31 7.74,2.77 1.15,2.11 3.46,1.87 4.73,2.94 1.1,0.54 2.98,0.38 5.37,0.84 1.99,-0.52 0.5,2.96 0.69,3.95 -2.76,0.44 -5.03,-0.77 -7.68,-0.9 -2.02,-2.49 -4.77,-1.25 -7.1,-2.59 -2.56,-0.64 -5.72,-2.18 -7.2,-3.63 z\",\n          \"ER\": \"m 572.96,193.02 c 1.46,-3.19 1.28,-6.2 5.2,-7.02 2.35,-1.7 2.05,5.09 3.76,6.81 0.36,0.9 0.66,-2.05 1.19,0.41 2.35,0.45 4.82,3.36 6.16,4.47 1.19,1.37 3.37,3.11 0.05,2.85 -2.3,-2.41 -4.43,-6.15 -8.29,-5.72 -0.95,-0.46 -2.9,0.78 -4,-1.06 -0.53,1.56 -0.73,2.6 -2.01,1.23 -1.79,1.42 -2.11,-0.3 -2.05,-1.98 z\",\n          \"US\": \"m 39.4,68.72 c 2.12,0 5.18,-0.56 5.03,-1.27 -1.37,0.24 -4.62,-0.06 -5.03,1.27 z m -2.83,3.6 c 1.56,1.95 3.92,0.16 0.44,-0.05 z m 93.97,55.56 c -2.1,-1.68 -2.06,-4.52 -3.45,-6.43 1.29,-1.2 -0.18,-3.87 -0.51,-5.8 0.03,-2.69 1.18,-2.04 1.07,-4.81 0.64,-2.31 0.08,-5.98 2.07,-5.16 -1.83,-0.29 -2.6,-0.64 -1.21,-1.37 -2.05,-0.06 0.71,-1.42 -0.98,-0.82 -0.61,-1.79 -3.25,-5.33 0.69,-3.45 2.66,0.08 4.48,0.44 2.04,2.21 0.91,0.69 0.04,-1.37 1.69,-1.13 -0.1,1.81 -0.8,1.18 -1.33,2.02 1.29,0.4 2.83,-2.18 1.4,-3.55 -1.06,-0.23 0.75,-0.82 -0.68,-1.65 4.14,-0.26 8.43,-0.05 12.63,-0.12 21.22,0 42.45,0 63.67,0 0.91,-2.58 1.69,1.99 3.95,1.21 2.54,-0.61 3.95,0.79 6.01,1.34 1.49,-0.47 5.36,-0.02 5.2,0.42 -2.03,0.48 -5.87,2.25 -6.06,3.48 1.45,0.16 3.57,-1.22 3.22,0.14 2.55,0.31 6.38,-2.29 7.03,-0.57 2.84,1.09 5.88,0.96 9.07,0.22 -0.19,1.54 2.5,0.4 2.58,1.82 -0.46,1.52 -5.21,-0.99 -7.18,1.42 0.41,-1.34 -2.3,-0.14 -2.59,1.75 -1.95,1.22 -0.74,1.2 0.68,0.46 -0.91,2.73 -2.75,6.57 -0.09,8.99 5,-0.33 1.65,-5.17 3.02,-7.5 -0.02,-1.89 2.7,-2.63 2.22,-1.81 -0.32,1.22 1.23,-2.01 1.37,-1.35 0.55,-2.08 6.21,0.31 4.66,3 -1.91,0.84 -2,3.23 0.26,1.15 2.45,-1.08 2.74,4.46 0.99,4.09 -1.5,1.24 -2.29,2.82 0.36,2.78 -1.13,0.65 4.19,-0.03 5.39,-1.1 2.29,-0.52 5.75,-1.94 5.26,-3.92 2.22,-0.25 8.31,0.81 7.45,-2.17 0.96,-2.37 6.22,-3.12 9.36,-2.62 3.05,0.22 5.28,-0.17 7.03,-2.44 0.47,-2 2.25,-5.46 4.42,-3.82 3.84,-1.28 1.87,4.47 3.91,5.86 2.36,0.89 -1,1.61 -1.92,2.03 -1.09,-0.48 -1.77,0.7 -2.37,-0.16 -1.62,2.63 -2.84,0.88 -2.92,1.85 -0.57,-0.52 -2.76,2.76 -2.77,3.72 -0.5,1.65 3.15,2.57 2.26,1.27 1.44,2.18 -2.44,0.77 -2.26,1.3 -1.36,-0.01 -0.81,-0.79 -2.35,0.69 -1.85,-0.55 -5.89,1.74 -5.94,0.93 0.08,-1.86 -0.43,1.42 -0.64,1.54 1.07,0.31 0.31,2.04 -0.01,1.54 -0.9,2.28 -2.37,3.6 -3.89,0.92 2.26,-2.12 -1.68,0.74 0.9,2.02 1.32,1.16 -1.51,4.32 -2.25,4.43 1.62,-2.59 -0.02,-2.12 -0.66,-3.71 1.06,0.17 -0.7,-0.53 0.22,-0.82 -1.12,-0.18 2.34,-2.82 0.01,-1.31 -1.19,0.08 -0.93,0.86 -0.68,2.93 -1.98,-2.35 1.7,2.29 -1.13,-0.09 -2.04,0.95 0.34,-3.01 -1.33,-0.26 1.01,0.12 4.53,3.02 1.45,1.58 -0.68,-0.81 3.05,3 0.07,1.22 2.49,1.99 0.13,0.79 -1.37,0.35 2.31,1.44 3.97,0.8 4.64,4.16 -1.47,-3.21 -0.73,-1.15 -1.05,-1.15 -0.61,0.62 -1.78,0.54 -2.16,0.44 0.48,0.52 2.54,0.87 2.11,0.85 2.07,-0.15 -1.61,1.89 -1.63,1.17 -2.95,-1.31 2.28,1.44 -1.22,0.87 1.2,0.56 2.95,0.18 0.85,1.03 -3.03,-0.38 -2.37,2.59 -5.29,2.47 -1.86,1.13 -1.92,2.25 -3.66,3.11 -2.2,1.15 -1.84,0.89 -2.24,1.35 -0.94,1.12 -1.34,1.62 -1.66,2.36 -0.67,0.46 -0.34,3.97 0.86,5.96 1.3,1.56 1.85,5.71 0.94,2.06 -0.69,0.74 2.79,4.86 1.56,7.37 0.64,2.75 -3.75,2.38 -2.46,1.67 -1.2,-0.96 -3.12,-3.38 -2.47,-3.59 -0.87,0.38 -0.31,-1.65 -1.14,-0.72 -1.58,-0.99 -0.03,-3.68 -0.91,-2.8 -1.33,1.64 1.35,-4.09 -1.62,-4.2 -1.3,-3.9 -4.43,-0.17 -5.84,-1.39 -1,-1.43 -0.58,-0.62 -3.17,-1.53 2.66,-0.46 -3.13,0.42 -1.44,-0.27 -0.33,-0.07 -1.32,0.56 -1.31,0.44 -1.8,1.72 -0.82,-2.43 -2.08,-0.11 -2.05,0.26 -4.43,0.11 -5.98,0.62 1.83,0.12 1.44,0.49 2.23,0.54 1.48,0.19 -1.78,1.62 1.17,1.98 0.42,2.21 -1.79,-1.1 -2.75,-0.55 0.67,1.59 -3.11,0.78 -3.19,-0.15 -1.68,-1.66 -4.03,1.09 -5.44,-1.14 0.53,-0.41 -2.14,1.69 -1.44,-0.17 0.3,1.13 -4.08,2.03 -1.94,1.22 -0.53,-0.07 -2.13,-1.1 -1,0.52 -2.02,1.83 -3.54,2.46 -3.8,2.22 -1.35,-0.93 -0.48,0.94 -1.72,0.68 -1.48,0.86 -0.03,0.86 -1.96,1.41 2.07,1.13 -2.37,1.66 0.19,1.61 -1.17,1.85 2.48,5.04 -1.08,3.42 -4.63,0.08 -4.65,-5.18 -7.45,-7.69 -1.23,-3.51 -6.12,-3.84 -7.55,-0.56 -3.97,-0.74 -4.02,-5.1 -7.47,-6.6 -2.22,-2.17 -5.82,-1.46 -7.53,0.12 -3.92,0.02 -7.79,0.07 -11.46,-1.56 -4.73,-1.54 -6.98,-3.2 -12.12,-1.91 -1.1,-3.53 -5.01,-4.7 -8.26,-5.41 -1.69,-0.62 -1.71,-3.37 -3.9,-4.43 -1.73,-0.97 0.03,-2.81 -2.33,-3.35 -1.29,-2.34 0.66,-0.68 0.52,-1.17 0.25,-2.59 -2,0.3 -2.1,-1.48 0.73,0.67 -0.18,-0.45 -0.31,-0.41 z M 104.4,80.81 c 0.33,1.25 2.04,0.65 1.2,-0.13 -0.11,-0.61 -0.94,-0.94 -1.29,-1.14 -0.46,-0.02 2.06,0.19 -0.19,-1.1 -0.89,-0.84 -3.75,-1.73 -2.38,-0.68 -2.16,0.77 1.6,-0.15 0.42,1.52 1.05,-0.32 1.26,0.87 0.18,0.86 0.69,0.15 1.7,0.05 2.06,0.68 z m 0.1,-3.67 c -2.34,0.7 2.58,1.37 -0.2,0.35 l 0.21,-0.12 z m -3.29,-0.28 c 2.41,-0.24 -0.19,-1.07 1.79,-0.84 -2.17,-1.81 -3.48,-1.06 -1.79,0.84 z m -7.89,-4.1 c 1.12,1.18 2.64,1.85 1.61,0.35 1.83,1.35 4.07,0.41 1.03,-0.14 -1.4,-0.69 2.07,0.54 1.38,-0.34 -1.51,-0.94 -1.71,0.28 -2.26,-0.83 -2,-0.35 -1.08,1.03 -1.29,0.8 -0.66,-0.5 -1.34,-0.24 -0.47,0.15 z m 6.37,5.31 c -0.01,-0.77 1.79,-2.12 0.45,-1.96 -1.55,-1.36 -0.65,0.17 -0.73,1.05 0.26,-0.11 -0.42,0.78 0.28,0.91 z m -2.69,-1.66 c 0.4,-1.03 1.59,2.83 1.3,-0.2 -0.84,-2.96 -3.62,-2.69 -1.9,-0.7 -0.6,0.36 1.04,0.37 0.6,0.89 z M 0.07,57.92 c -0.4,-1.9 5.96,0.26 2.01,-0.03 -1.59,0.66 -0.57,0.63 -2.01,0.03 z M 20.67,80.91 c -1.34,-0.5 -1.14,0.58 -1.77,0.11 1.22,-0.83 4.87,-3.75 6.46,-2.6 0.35,0.4 2.71,0.41 1.19,-0.48 2.49,-2.14 5.1,-1.84 7.04,-4.16 2.94,1.25 -1.15,-2.12 2.2,-1.81 -3.58,-0.13 3.7,-4.04 -0.4,-1.86 -1.86,1.57 -4.72,-0.66 -2.12,-0.48 -2.6,-1.73 -1.27,3.51 -3.8,0.64 -1.82,-0.72 -4.13,-0.54 -6.71,0.48 -0.61,-0.02 1.89,-1.72 -0.33,-1.64 1.49,-1.38 -2.1,-3.72 -0.13,-4.18 -1.65,0.26 -0.43,2.97 -3.37,2.31 -2.26,0.51 -4.6,-1.57 -5.32,-2.26 0.81,-1.41 2.91,0.03 2.49,0.1 0.64,-0.75 3.62,0.47 1.28,-0.66 1.91,-0.57 -5.18,0.24 -3.21,-0.77 -1.12,-1.18 -0.77,0.65 -2.64,-0.74 1.02,-0.52 -2.33,-0.86 0.32,-0.9 -0.94,-0.56 2.18,-3.04 3.26,-2.16 -1.33,-0.27 1.28,-1.29 -0.53,-0.44 -0.88,-1.58 1.84,-0.74 0.88,-1.63 2.88,-0.58 1.38,1.17 3.97,0.24 1.37,-1.94 7.74,0.22 5.33,-3.41 -2.71,-0.4 2.89,-0.61 0.23,-1.59 -0.7,0.36 -2.98,0.31 -4.67,1.54 -0.62,-0.83 -2.2,-1.05 -0.89,-0.26 -2.9,-1.25 -7.61,1.13 -9.42,-1.3 -3.9,-1.57 3.76,-0.3 -0.4,-1.33 -2.08,0.34 -5.88,-1.45 -2.97,-0.96 1.88,-0.94 3.67,-1.4 5.92,-1.25 -2.66,-0.56 6.5,-2.5 4.29,-0.4 0.32,0.68 5.32,1.26 6.89,0.05 3.27,0.23 -1.44,-0.02 -1.57,-0.95 -3.08,-1.31 0.04,-0.48 1.12,0.3 1.36,0.43 6.18,0.27 2.37,-0.36 -0.73,0.47 -4.09,0.17 -2.23,-0.92 -2.45,-1.03 -4.35,0.94 -7.06,-1.7 -1.65,-1.27 -6.85,-1.73 -6.54,-2.33 2,-2.26 7.61,-1.14 9.13,-2.59 2.26,-3.26 5.43,-2.28 8.87,-3.57 -0.37,1.11 0.32,0.47 1.97,0.2 -3.35,0.42 -1.08,-1.3 -0.36,-0.75 4.21,1.35 7.14,-3.3 10.49,-0.78 -3.14,1.51 0.55,-0.02 1.71,-0.13 1.84,0.3 0.02,1.06 2.4,0.87 2.04,-1.23 7.42,0.57 4.26,0.68 2.93,0.38 5.81,0.31 9.47,0.19 3.54,0.82 7.19,0.78 10.75,1.26 3.13,0.64 5.69,-1.02 8.99,0.57 5.49,-0.45 2.11,5.94 3.07,9.47 0.65,5.66 -0.39,11.42 0.14,17.05 1.93,1.51 5.09,-0.95 5.87,1.33 2.45,1.47 5.47,4.28 7.14,0.99 3.25,-1.67 4.58,2.07 7.43,2.95 2.73,2.04 3.75,5.53 7.2,5.96 2.91,-0.05 4.17,3.88 1.06,4.73 -0.43,-0.14 -1.2,-0.77 0.58,-1.57 -1,1.16 -2.73,-0.19 -0.38,0.05 -1.54,-0.37 -0.74,-3.32 -2.81,-1.78 0.23,-0.76 -2.33,2.61 -1.14,-0.16 0.25,-1.29 2,-0.1 -0.16,-1 0.54,1.59 -2.17,-1.07 -0.19,-0.1 -1.39,-1.21 -1.71,-1.91 -3.82,-2.35 1.92,-0.47 -0.2,-0.37 -0.38,-1.4 2.86,1.19 -1.63,-1.11 1.31,-0.45 -2.03,-0.04 -1.48,-0.27 -2.63,-1.03 2.12,-1.23 -2.64,0.72 -2.56,-1.52 -1.39,-3.25 -1.37,-0.67 -0.21,1.37 -0.78,-0.06 -3.5,-0.43 -1.91,-1.68 -1.16,0.41 -3.82,-0.64 -3.15,0.07 1.24,0.19 3.5,1.5 1.06,1.36 -0.35,0.97 -4.8,-1.66 -5.23,-2.26 -1.97,0.64 -4.62,-2.08 -2.4,-1.81 -0.08,0.76 2.12,-0.31 -0.26,-0.45 -2.5,1.73 -4.67,-0.19 -6.26,0.02 -2.92,-0.98 -7.63,1.05 -8.66,-1.54 1.63,-1.19 -3.96,1.85 -2.33,-0.39 -1.99,0.22 -0.65,-0.38 -2.67,-0.13 3.29,-0.61 -2.25,-0.23 0.86,-1.07 -1.41,0.17 -3.88,0.35 -3.56,0.28 -0.9,1.2 -1.15,-0.87 -0.97,-0.57 -0.84,0.92 -2.12,-0.02 -0.89,0.61 -3.1,0.9 1.81,0.48 -1.22,1.4 3.19,-1.11 0.67,0.89 1.28,0.62 -0.36,1.79 -3.91,0.06 -3.91,1.21 -0.34,-0.05 -2.06,1.11 -2.04,0.69 -1.52,0.4 -2.66,1.72 -4.47,0.64 1.73,-0.82 3.58,-1.19 0.78,-0.91 -1.15,-0.94 2.13,-1.74 0.78,-2.95 1.59,-1.26 6.46,-0.37 6.08,-0.55 -2.11,0 -3.05,-1.57 -0.34,-1.59 -2.86,0.34 -5.31,0.77 -7.89,2.48 -0.42,2.05 -3.85,-0.08 -1.12,1.68 -1.77,0.87 -1.55,0.52 -3.27,1.61 -2.15,0.5 -0.73,0.95 1.12,1.69 -3.04,0.92 -1.89,2.07 -4.37,2.23 -2.09,1.25 -4.42,1.37 -4.9,2.88 -2.63,0.77 -2.93,1.18 -5.09,1.68 -0.74,0.59 1.6,0.19 0.03,1.2 0.26,-0.8 -2.29,0.3 -2.85,0.95 -0.77,-0.7 -2.72,0.37 -4.25,0.69 -2.45,0.36 1.11,-0.77 -1.44,-0.56 -0.68,2 -2.34,1.34 -2.73,1.35 0.35,0.11 0.1,0.54 -0.14,0.36 z m 26.99,-8.45 c 1.93,-0.85 3.42,-0.67 0.41,-1.24 -0.19,0.63 -2.14,0.53 -0.41,1.24 z m -2.98,3.04 c -0.67,1.22 1.57,-0.57 1.01,-0.48 1.9,-0.39 0.78,-0.73 2.64,-0.74 -2.75,-0.74 2.92,0.27 0.56,-1.22 -0.86,-0.19 -2.3,-0.51 -2.04,-0.25 -1.04,0.87 -2.82,-0.49 -1.47,0.92 -0.85,0.3 0.26,0.88 -1.18,-0.24 -3.45,-0.69 0.16,2.92 -0.51,1.47 -1.1,0.14 2.13,-0.32 0.99,0.54 z M 8.31,66.85 c 1.35,0.96 6.08,0.52 3.05,-1.04 -0.44,0.04 -5.38,0.22 -3.05,1.04 z m 17.8,12.93 c -1.12,1.49 1.56,0.1 0,0 z m 36.12,-12.93 c -0.52,1.89 3.71,-2.69 0.58,-0.16 z M 14.45,82.02 c 0.46,1.06 5.29,-0.53 4.55,-0.44 -0.89,-1.32 -3.62,-0.52 -4.55,0.44 z m -7.91,3.79 c 2.65,-0.21 5.15,-1.86 2.83,-2.13 -2.47,0.5 1.02,0.87 -1.38,1.1 1.05,0.67 -3.21,0.78 -1.44,1.03 z M 106.8,80.01 c 0.83,-0.58 0.7,-0.69 0.73,0.13 0.87,0.7 2,-1.92 -0.5,-1.82 0.13,0.39 -0.84,0.05 -0.23,1.69 z m -8.44,-6.19 c 1.08,-0.61 -0.74,2.49 1.17,0.71 1.96,0.03 -1.92,-3.63 0.88,-0.96 -0.99,-2.16 -4.33,-3.14 -2.05,0.25 z m 881.51,16.69 c -0.15,-1.56 3.37,-0.74 0,0 z m 16.68,-33.32 c -2,1.09 -3.57,-1.54 -0.74,-0.51 1.3,-0.8 4.62,0.32 2.98,0.96 -0.08,-0.58 -3.3,-0.68 -2.25,-0.45 z m -10,31.78 c -3.35,0.61 -0.63,0.14 1.28,0.03 0.08,-1.38 -0.06,-0.71 -1.28,-0.03 z m -8.59,1.35 c 2.07,-0.17 2.04,-1.3 0,0 z m -0.77,0.17 c 2.08,-1.56 -1.65,-0.91 0,0 z m -25.36,-3.25 c 3.52,-0.32 -2.58,-1.27 -0.45,-0.18 l 0.19,0.1 z M 40.21,182.25 c 3.59,-0.27 1.71,-4.09 -0.35,-3.14 -0.51,0.81 -0.55,2.33 0.35,3.14 z m -1.97,-4.52 c 3.2,-0.59 -2.98,-2.16 0,0 z M 227.78,102.47 c 1.48,-2.16 -4.13,2.08 0,0 z m 40.46,18.76 c -2.1,0.97 -1.64,-1 1.1,-0.77 1.53,-0.1 2.19,-1.01 1.41,0.06 4.61,-1.37 -1.64,1.1 -2.51,0.71 z\",\n          \"KZ\": \"m 635.48,106.92 c 0.85,0.58 0.85,1.1 1.4,0.98 -0.06,1.45 -2.75,-0.73 -1.37,-0.98 m -34.27,-8.19 c 1.87,-1.3 -0.29,-2.91 1.88,-4.33 0.77,-2.08 4.91,3.38 3.99,-0.56 -0.22,-1.67 5.03,-2.02 5.66,-3.84 2.5,1.26 3.81,-0.22 6.2,0.77 2.81,-0.79 4.79,4.77 4.62,1.32 2.54,2.56 4.49,-0.52 7.02,-0.04 1.56,0.8 3.36,-1.01 4.84,0.91 2.25,1.26 2.97,-1.12 5.37,0.13 4.15,-1.28 0.43,-2.62 -1.75,-3.35 -2.3,-0.64 4.55,-0.85 1.32,-2.37 0.62,-1.47 6.13,-0.31 2.29,-1.49 -2.87,-0.18 1.71,-1.17 -1.18,-0.99 -1.25,-1.99 3.47,-0.56 5.06,-1.45 2.11,-0.76 5.14,-0.05 6.85,-1.43 3.21,-0.32 6.7,-0.54 9,-1.89 1.36,-0.49 4.81,-0.11 6.37,0.69 0.83,1.68 -0.1,3.23 2.83,2.23 0.89,-0.92 1.32,1.48 1.88,0.55 -0.43,-0.19 5.25,-0.11 1.72,1.04 2.26,1.53 5.58,-1.12 8.38,-1.86 2.56,-0.65 0.87,0.29 0.7,0.89 3.19,1.36 5.73,3.73 7.7,6.55 0.84,2.51 2.64,3.17 3.86,1.09 1.75,1.5 4.49,2.17 7.47,0.82 2.83,1.04 4.28,4.83 7.79,4.13 1.77,-1.65 1.23,0.86 3.1,1.28 -2.05,-0.27 -2.18,2.4 -4.57,2.28 0.3,1.93 -0.29,4.78 -2.86,3.6 -2.35,0.22 -5.16,-1.75 -5.54,1.95 -1.78,1.45 -0.09,2.31 -0.4,3.3 -2.16,-0.69 -5.75,-0.33 -7.13,0.85 2.3,-0.22 0.81,3.12 2.35,4.62 -1.09,0.68 -1.69,0.94 -1.55,2.8 -3.23,-2.28 -7.38,-2.07 -11.24,-2.07 -2.43,1.3 -7.39,-3.12 -7.37,1.39 -2.92,-1.13 -6.59,-1.72 -8.04,1.07 -1.93,0.67 -5.37,1.79 -5.58,4.09 -1.83,-0.48 -1.91,-2.53 -4.49,-1.42 -1.63,-0.37 -1,-2.74 -2.74,-3.09 1.03,-2.29 -1.64,-3.09 -3.39,-4.11 -2.22,0.8 -4.63,-0.29 -6.91,0.43 -2.26,-0.9 -5.8,-3.2 -5.06,-5.65 -2.74,-0.28 -1.35,-0.29 -0.6,-0.7 -0.37,-0.54 0.4,-0.87 -1.21,-0.94 -0.69,-2.11 -0.39,2.46 -1.53,0.68 -1.61,-0.35 -2.77,1.73 -5.65,1.57 -5.86,-0.35 -2.77,6.16 -3.42,9.74 -0.79,4.85 -4.39,-3.89 -7.64,-1 -1.94,1.39 -3.02,1.34 -1.61,-1.03 0.38,-0.93 -3.8,-0.84 -3.84,-2.55 -0.49,-1.71 -5.18,-3.45 -1.17,-3.16 2.17,0.77 1.7,0.06 0.4,-0.86 0.58,-2.69 6.52,-0.37 5.37,-1.44 -0.75,-0.8 1.98,-4.85 -1.49,-4.23 -2.7,-0.43 -5.14,-0.39 -7.64,1.08 -0.69,-0.24 -2.03,1.33 -3.14,-0.52 3.21,0.38 -1.77,-4.38 -3.24,-2.86 -0.39,0.14 -1.02,-0.86 -0.39,-0.93 -0.16,-0.54 -0.54,-0.79 -1.12,-0.79 -0.49,-0.05 -0.8,-0.43 -0.51,-0.89 z\",\n          \"SZ\": \"m 557.32,310.75 c 1.26,2.66 4.82,1.23 3.68,-1.1 -1.1,-2.6 -3.34,-0.91 -3.68,1.1 z\",\n          \"UZ\": \"m 634.94,107.63 c 2.49,0.38 1.12,2.32 0.89,2.72 -1.58,0.97 -0.69,-0.89 -0.98,-0.64 1.01,-1.7 -0.67,0.41 0.09,-2.08 z m -7.78,1.44 c 1.67,-0.03 7.15,-2.58 6.73,-0.72 -1.66,2.59 1.05,2.25 2.03,3.18 0.97,0.87 3.67,-0.43 4.43,-1.27 2.09,2.38 4.37,3.47 7.5,2.72 2.67,0.25 5.12,-0.95 6.82,1.84 1.29,-0.11 -0.59,3.17 1.78,2.97 -0.51,3.95 4.61,0.47 4.78,3.45 1.45,-0.04 2.7,-3.27 5.3,-3.4 1.18,-1.19 4.61,-1.27 1.45,-0.08 -3.27,0.81 2.64,3.36 2.68,0.97 0.4,2 6,1.64 2.49,2.82 -1.22,0.94 -3.79,1.37 -6.13,0.45 2.54,-1.53 -0.46,-1.91 -1.88,-0.75 -1.91,-1.12 -0.27,2.46 -2.47,1.25 0.35,-0.03 0.17,2.48 -2.73,1.7 -3.17,1.35 2.25,1.41 0.93,3.28 1.64,1.79 -1.59,4.69 -3.64,3.06 -1.43,-0.27 0.25,-2.77 -2.4,-2.43 -3.38,-1.17 -7.08,-2.94 -9.81,-5.29 -0.68,-3.64 -3.37,-3.1 -6.13,-3.51 0.41,-2.53 -2.07,-2.53 -3.94,-3.75 -2.78,-0.67 0.42,1.77 -1.96,0.57 -0.85,1.13 -3.88,1.11 -2.72,3.36 -5.77,1.58 -1.93,-7.55 -3.09,-10.4 z\",\n          \"MN\": \"m 715.47,97.3 c 2.21,-1.36 4.58,-0.74 6.08,-2.4 2.56,-0.79 5.4,-2.44 7.78,-2.08 1.76,0.76 4.35,0.26 5.77,2.15 3.17,-0.53 7.33,2.18 9.44,-1.13 -2.94,-2.15 1.68,-5.81 3.83,-4.23 2.9,1.17 7.1,0.22 7.76,3.94 3.36,2.26 6.88,-0.66 10.43,0.34 3.49,0.12 5.14,3.12 8.55,3.04 3.6,0.7 7.68,-0.1 10.9,-1.49 3.04,-2.41 6.37,0.05 9.52,0 -1.05,1.66 -1.83,3.52 -3.06,5.03 1.09,1.42 4.03,0.25 5.64,0.57 2.34,-2.62 9.85,4.62 3.86,3.15 -3.45,-0.03 -6.71,0.89 -8.92,3.33 -3.61,-0.16 -6.31,3.89 -9.99,1.24 -2.64,0.18 -2.1,2.81 -0.75,3.9 -3.19,1.47 -5.91,4.43 -9.81,3.6 -3.87,-0.76 -7.6,2.86 -11.05,1.72 -3.6,0.51 -6.48,-2.04 -9.86,-2.18 -3.79,0.03 -7.61,-0.37 -11.42,-0.41 -2.84,-0.96 -3.18,-5.25 -6.83,-5.27 -2.75,-2.39 -8.44,0.46 -9.88,-3.04 2.35,-1.88 -0.41,-6.01 -2.61,-6.12 -1.91,-0.46 -5.47,-1.59 -5.22,-3.38 z\",\n          \"BT\": \"m 718.13,159.29 c 1.2,-1.82 3.41,-4.27 5.2,-2.5 2.47,-0.34 3.75,1.18 3.95,3.26 -3.04,-0.14 -6.66,1.35 -9.15,-0.76 z\",\n          \"NC\": \"m 927.62,293.83 c 1.71,1.96 4.72,3.95 6.28,4.45 3.03,0.03 -2.85,-2.47 -3.41,-3.67 -1.14,-0.87 -5.55,-4.18 -2.87,-0.78 z\",\n          \"FJ\": \"m 971.09,281.12 c -2.23,-0.19 -6.1,3.14 -2.02,1.59 1.31,0.61 2.75,-1.28 0.65,-0.15 0.53,-0.42 0.79,-1.08 1.36,-1.45 z m -5.31,8.4 c 2.08,-0.7 -0.46,-0.63 0,0 z m -1.54,-2.83 c 2.75,1.62 4.33,-1.95 1.39,-2.17 -1.03,-0.23 -3.15,1.74 -1.39,2.17 z\",\n          \"KW\": \"m 601,153.77 c 0.56,-1.79 3.68,-4.46 4.28,-1.29 -2.6,-0.55 3.37,3.63 -0.75,2.94 -1.1,-0.89 -1.42,-2.21 -3.53,-1.65 z\",\n          \"TL\": \"m 815.54,262.09 c 2.29,-1.66 1.58,1.43 0.01,-0.01 m 3.21,-0.55 c 0.81,0.53 5.95,-1.08 5.79,-2.43 -1.86,0.72 -6.82,-0.29 -5.79,2.43 z\",\n          \"BS\": \"m 267.62,176.8 c 0.17,-1.42 3.32,-0.79 0.79,-0.07 z m -8.13,-12.64 c -0.72,-1.44 2.35,2.69 1.06,1.5 0.67,-0.84 -0.6,-1.2 -1.06,-1.5 z m -1.78,-1.31 c -0.33,-0.79 0.35,-3.18 -2.04,-2.86 1.85,-0.39 2.76,1.35 2.04,2.86 z m -1.2,6.06 c 0.21,0.35 -1.09,-1.92 -0.14,-1.27 -0.3,0.42 1.04,-0.31 0.43,1.01 z m -1.5,-4.16 c 3.19,1.57 -1.35,3.32 -0.11,1.1 0.29,-0.29 0.18,-0.76 0.11,-1.1 z\",\n          \"VU\": \"m 938.23,281.65 c 1.61,-0.58 -1.85,-0.74 0,0 z m -1.79,0.66 c 2.46,-0.54 -2.57,-3.16 -0.26,-0.67 l 0.07,0.35 z m -1.18,-4.14 c -0.37,-0.81 -1.02,0.61 -1.56,-1.17 -0.6,1.6 1.95,4.29 1.56,1.17 z\",\n          \"FK\": \"m 371.78,390.14 c 1.36,-0.97 -1.93,-2.38 -3.9,-2.41 -3.05,-0.14 0.58,0.28 0.74,0.68 1.16,0.24 2.29,0.94 3.16,1.73 z m -65.58,-7.9 c 1.78,1.15 1.13,-0.67 2.93,-0.17 -1.32,-0.96 3.77,-0.56 2.02,-1.48 0.92,-0.53 -1.79,-0.21 -0.97,0.15 -0.75,-1.74 -2.42,0.03 -2.42,0.37 -0.86,-0.02 -0.93,1.02 -1.56,1.13 z m -1.55,-2.08 c 0.91,0.01 0.35,-0.34 0,0 z m 0.78,0.07 c -1.32,0.17 -2.19,-0.12 -0.23,0.83 -3,-0.14 0.37,0.45 -0.87,0.2 -0.08,1.01 -2.44,0.7 -0.81,1.17 1.24,-0.02 6.78,-3.02 1.91,-2.2 z\",\n          \"GM\": \"m 425.26,198.03 c 0.71,0.78 4.95,-0.82 1.67,-0.13 -2.57,-0.56 2.45,-0.38 3.36,-1.13 0.97,0.82 5.3,1.12 1.67,1.51 -2.03,-2.19 -5.77,2.16 -6.69,-0.26 z\",\n          \"QA\": \"m 612.64,164.51 c -0.22,-1.8 2.78,-3.37 2.25,0.05 0.69,2.01 -2.87,3.02 -2.25,-0.05 z\",\n          \"JM\": \"m 254.5,184.26 c 1.77,-2.44 8.32,1.83 4.21,0.87 -1.02,1.21 -2.73,-0.09 -4.21,-0.87 z\",\n          \"CY\": \"m 561.46,137.2 c 1.04,-0.9 5.64,-1.47 5.97,-1.65 -1.79,1.36 -1.58,1.89 -3.94,2.84 -0.7,-0.33 -1.76,-0.28 -2.03,-1.19 z\",\n          \"PR\": \"m 288.97,185.11 c -1.94,1.26 -5.5,-1.35 -2.16,-1.59 0.95,0.19 4.71,0.05 2.16,1.59 z\",\n          \"PS\": \"m 568.89,145.08 c 2.09,-3.37 1.99,4.04 -0.09,1.92 1.69,-1.65 -0.49,0.09 0.09,-1.92 z\",\n          \"BN\": \"m 788.31,222.72 c 1.27,-0.22 3.44,-2.27 1.95,0.11 0.51,2.62 -1.33,0.75 -1.95,-0.11 z\",\n          \"TT\": \"m 300.22,207.39 c 2.05,-0.48 0.12,-3.15 2.58,-1.96 0.31,2.2 -0.78,1.84 -2.58,1.96 z\",\n          \"PF\": \"m 57.69,285.59 c 1.46,0.8 -1.48,-1.8 -0.45,-0.06 z\",\n          \"WS\": \"m 991.64,273.63 c -1.72,1.32 3.38,0.32 0,0 z\",\n          \"LU\": \"m 487.81,95.39 c 0.65,-2.6 3.8,2.42 0.17,0.89 0.5,-0.17 -0.04,-0.74 -0.17,-0.89 z\",\n          \"KM\": \"m 592.41,269.2 c 0.31,-2.77 -1.68,-1.13 0,0 z\",\n          \"FO\": \"m 452.8,60.76 c -2.56,-1.32 1.36,1.68 0,0 0.91,0.61 0.44,-0.7 -0.34,-0.19 z\",\n          \"SS\": \"m 566.64,207.99 c -0.19,2.08 0.23,4.73 -2.7,4.14 -1.45,2.41 2.99,1.96 3.64,4.3 1.51,1.46 1.41,4.35 3.61,4.48 1.29,3.62 -5.24,-0.17 -6.05,3.95 -2.72,0.1 -4.39,0.87 -6.86,0.14 -1.77,2.62 -3.4,-4.33 -5.5,-1.69 -2.28,0.44 -5.15,-0.75 -5.45,-3.69 -2.8,-1.08 -2.37,-4.15 -5.49,-5.07 0.86,-2.33 -4.24,-1.45 -2.5,-3.64 1.26,-1.32 1.02,-3.42 2.14,-5.03 3.11,-1.81 2.65,4.17 5.98,2.03 1.8,0.07 3.66,2.2 4.99,-0.26 1.68,-0.25 2.29,-3.22 4.19,-0.41 2.39,0.9 4.63,-3.17 4.68,-5.07 -0.07,-1.62 -1.35,-1.85 0.96,-1.89 0.29,-1.86 2.27,-0.18 1.05,1.26 -0.23,2.66 2.99,4.66 2.5,6.51 l 0.51,0.04 z\"\n        }\n      }\n    }\n  });\n  return Mapael;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/vendor/libs/jquery-mapael/maps/world_countries.js\n");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.6.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-03-02T17:08Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif (  true && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n\t\t// Support: Chrome <=57, Firefox <=52\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t\t// We don't want to classify *any* DOM node as a function.\n\t\t// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n\t\t// Plus for old WebKit, typeof returns \"function\" for HTML collections\n\t\t// (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\" &&\n\t\t\ttypeof obj.item !== \"function\";\n\t};\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.6.0\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( _i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.6\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2021-02-16\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem && elem.namespaceURI,\n\t\tdocElem = elem && ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rcombinators.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n}\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the primary Deferred\n\t\t\tprimary = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tprimary.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( primary.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn primary.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );\n\t\t}\n\n\t\treturn primary.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Support: Chrome 86+\n\t\t\t\t\t\t// In Chrome, if an element having a focusout handler is blurred by\n\t\t\t\t\t\t// clicking outside of it, it invokes the handler synchronously. If\n\t\t\t\t\t\t// that handler calls `.remove()` on the element, the data is cleared,\n\t\t\t\t\t\t// leaving `result` undefined. We need to guard against this.\n\t\t\t\t\t\treturn result && result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\twhich: true\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\t// Suppress native focus or blur as it's already being fired\n\t\t// in leverageNative.\n\t\t_default: function() {\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\t//\n\t\t// Support: Firefox 70+\n\t\t// Only Firefox includes border widths\n\t\t// in computed dimensions. (gh-4529)\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n\t\t\t\ttr.style.cssText = \"border:1px solid\";\n\n\t\t\t\t// Support: Chrome 86+\n\t\t\t\t// Height set through cssText does not get applied.\n\t\t\t\t// Computed height then comes back as 0.\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\t// Support: Android 8 Chrome 86+\n\t\t\t\t// In our bodyBackground.html iframe,\n\t\t\t\t// display for all div elements is set to \"inline\",\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\n\t\t\t\t// Ensuring the div is display: block\n\t\t\t\t// gets around this issue.\n\t\t\t\ttrChild.style.display = \"block\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t} ) :\n\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\n\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || Object.create( null ) )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, parserErrorElem;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {}\n\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\n\tif ( !xml || parserErrorElem ) {\n\t\tjQuery.error( \"Invalid XML: \" + (\n\t\t\tparserErrorElem ?\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\n\t\t\t\t\treturn el.textContent;\n\t\t\t\t} ).join( \"\\n\" ) :\n\t\t\t\tdata\n\t\t) );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} ).filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} ).map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\noriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script but not if jsonp\n\t\t\tif ( !isSuccess &&\n\t\t\t\tjQuery.inArray( \"script\", s.dataTypes ) > -1 &&\n\t\t\t\tjQuery.inArray( \"json\", s.dataTypes ) < 0 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( {\n\t\tpadding: \"inner\" + name,\n\t\tcontent: type,\n\t\t\"\": \"outer\" + name\n\t}, function( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each(\n\t( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t}\n);\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn jQuery;\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jquery/dist/jquery.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/vendor/libs/jquery-mapael/maps/world_countries.js");
/******/ 	
/******/ })()
;