/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/js/demo.js":
/*!********************************************!*\
  !*** ./resources/assets/vendor/js/demo.js ***!
  \********************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/**\n * AdminLTE Demo Menu\n * ------------------\n * You should not use this file in production.\n * This file is for demo purposes only.\n */\n\n/* eslint-disable camelcase */\n(function ($) {\n  'use strict';\n\n  setTimeout(function () {\n    if (window.___browserSync___ === undefined && Number(localStorage.getItem('AdminLTE:Demo:MessageShowed')) < Date.now()) {\n      localStorage.setItem('AdminLTE:Demo:MessageShowed', Date.now() + 15 * 60 * 1000); // eslint-disable-next-line no-alert\n\n      alert('You load AdminLTE\\'s \"demo.js\", \\nthis file is only created for testing purposes!');\n    }\n  }, 1000);\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function createSkinBlock(colors, callback, noneSelected) {\n    var $block = $('<select />', {\n      \"class\": noneSelected ? 'custom-select mb-3 border-0' : 'custom-select mb-3 text-light border-0 ' + colors[0].replace(/accent-|navbar-/, 'bg-')\n    });\n\n    if (noneSelected) {\n      var $default = $('<option />', {\n        text: 'None Selected'\n      });\n      $block.append($default);\n    }\n\n    colors.forEach(function (color) {\n      var $color = $('<option />', {\n        \"class\": (_typeof(color) === 'object' ? color.join(' ') : color).replace('navbar-', 'bg-').replace('accent-', 'bg-'),\n        text: capitalizeFirstLetter((_typeof(color) === 'object' ? color.join(' ') : color).replace(/navbar-|accent-|bg-/, '').replace('-', ' '))\n      });\n      $block.append($color);\n    });\n\n    if (callback) {\n      $block.on('change', callback);\n    }\n\n    return $block;\n  }\n\n  var $sidebar = $('.control-sidebar');\n  var $container = $('<div />', {\n    \"class\": 'p-3 control-sidebar-content'\n  });\n  $sidebar.append($container); // Checkboxes\n\n  $container.append('<h5>Customize AdminLTE</h5><hr class=\"mb-2\"/>');\n  var $dark_mode_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('dark-mode'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('dark-mode');\n    } else {\n      $('body').removeClass('dark-mode');\n    }\n  });\n  var $dark_mode_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($dark_mode_checkbox).append('<span>Dark Mode</span>');\n  $container.append($dark_mode_container);\n  $container.append('<h6>Header Options</h6>');\n  var $header_fixed_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('layout-navbar-fixed'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('layout-navbar-fixed');\n    } else {\n      $('body').removeClass('layout-navbar-fixed');\n    }\n  });\n  var $header_fixed_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($header_fixed_checkbox).append('<span>Fixed</span>');\n  $container.append($header_fixed_container);\n  var $dropdown_legacy_offset_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-header').hasClass('dropdown-legacy'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-header').addClass('dropdown-legacy');\n    } else {\n      $('.main-header').removeClass('dropdown-legacy');\n    }\n  });\n  var $dropdown_legacy_offset_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($dropdown_legacy_offset_checkbox).append('<span>Dropdown Legacy Offset</span>');\n  $container.append($dropdown_legacy_offset_container);\n  var $no_border_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-header').hasClass('border-bottom-0'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-header').addClass('border-bottom-0');\n    } else {\n      $('.main-header').removeClass('border-bottom-0');\n    }\n  });\n  var $no_border_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($no_border_checkbox).append('<span>No border</span>');\n  $container.append($no_border_container);\n  $container.append('<h6>Sidebar Options</h6>');\n  var $sidebar_collapsed_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('sidebar-collapse'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('sidebar-collapse');\n      $(window).trigger('resize');\n    } else {\n      $('body').removeClass('sidebar-collapse');\n      $(window).trigger('resize');\n    }\n  });\n  var $sidebar_collapsed_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_collapsed_checkbox).append('<span>Collapsed</span>');\n  $container.append($sidebar_collapsed_container);\n  $(document).on('collapsed.lte.pushmenu', '[data-widget=\"pushmenu\"]', function () {\n    $sidebar_collapsed_checkbox.prop('checked', true);\n  });\n  $(document).on('shown.lte.pushmenu', '[data-widget=\"pushmenu\"]', function () {\n    $sidebar_collapsed_checkbox.prop('checked', false);\n  });\n  var $sidebar_fixed_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('layout-fixed'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('layout-fixed');\n      $(window).trigger('resize');\n    } else {\n      $('body').removeClass('layout-fixed');\n      $(window).trigger('resize');\n    }\n  });\n  var $sidebar_fixed_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_fixed_checkbox).append('<span>Fixed</span>');\n  $container.append($sidebar_fixed_container);\n  var $sidebar_mini_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('sidebar-mini'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('sidebar-mini');\n    } else {\n      $('body').removeClass('sidebar-mini');\n    }\n  });\n  var $sidebar_mini_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_mini_checkbox).append('<span>Sidebar Mini</span>');\n  $container.append($sidebar_mini_container);\n  var $sidebar_mini_md_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('sidebar-mini-md'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('sidebar-mini-md');\n    } else {\n      $('body').removeClass('sidebar-mini-md');\n    }\n  });\n  var $sidebar_mini_md_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_mini_md_checkbox).append('<span>Sidebar Mini MD</span>');\n  $container.append($sidebar_mini_md_container);\n  var $sidebar_mini_xs_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('sidebar-mini-xs'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('sidebar-mini-xs');\n    } else {\n      $('body').removeClass('sidebar-mini-xs');\n    }\n  });\n  var $sidebar_mini_xs_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_mini_xs_checkbox).append('<span>Sidebar Mini XS</span>');\n  $container.append($sidebar_mini_xs_container);\n  var $flat_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-flat'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-flat');\n    } else {\n      $('.nav-sidebar').removeClass('nav-flat');\n    }\n  });\n  var $flat_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($flat_sidebar_checkbox).append('<span>Nav Flat Style</span>');\n  $container.append($flat_sidebar_container);\n  var $legacy_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-legacy'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-legacy');\n    } else {\n      $('.nav-sidebar').removeClass('nav-legacy');\n    }\n  });\n  var $legacy_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($legacy_sidebar_checkbox).append('<span>Nav Legacy Style</span>');\n  $container.append($legacy_sidebar_container);\n  var $compact_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-compact'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-compact');\n    } else {\n      $('.nav-sidebar').removeClass('nav-compact');\n    }\n  });\n  var $compact_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($compact_sidebar_checkbox).append('<span>Nav Compact</span>');\n  $container.append($compact_sidebar_container);\n  var $child_indent_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-child-indent'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-child-indent');\n    } else {\n      $('.nav-sidebar').removeClass('nav-child-indent');\n    }\n  });\n  var $child_indent_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($child_indent_sidebar_checkbox).append('<span>Nav Child Indent</span>');\n  $container.append($child_indent_sidebar_container);\n  var $child_hide_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-collapse-hide-child'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-collapse-hide-child');\n    } else {\n      $('.nav-sidebar').removeClass('nav-collapse-hide-child');\n    }\n  });\n  var $child_hide_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($child_hide_sidebar_checkbox).append('<span>Nav Child Hide on Collapse</span>');\n  $container.append($child_hide_sidebar_container);\n  var $no_expand_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-sidebar').hasClass('sidebar-no-expand'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-sidebar').addClass('sidebar-no-expand');\n    } else {\n      $('.main-sidebar').removeClass('sidebar-no-expand');\n    }\n  });\n  var $no_expand_sidebar_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($no_expand_sidebar_checkbox).append('<span>Disable Hover/Focus Auto-Expand</span>');\n  $container.append($no_expand_sidebar_container);\n  $container.append('<h6>Footer Options</h6>');\n  var $footer_fixed_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('layout-footer-fixed'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('layout-footer-fixed');\n    } else {\n      $('body').removeClass('layout-footer-fixed');\n    }\n  });\n  var $footer_fixed_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($footer_fixed_checkbox).append('<span>Fixed</span>');\n  $container.append($footer_fixed_container);\n  $container.append('<h6>Small Text Options</h6>');\n  var $text_sm_body_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('text-sm');\n    } else {\n      $('body').removeClass('text-sm');\n    }\n  });\n  var $text_sm_body_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($text_sm_body_checkbox).append('<span>Body</span>');\n  $container.append($text_sm_body_container);\n  var $text_sm_header_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-header').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-header').addClass('text-sm');\n    } else {\n      $('.main-header').removeClass('text-sm');\n    }\n  });\n  var $text_sm_header_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($text_sm_header_checkbox).append('<span>Navbar</span>');\n  $container.append($text_sm_header_container);\n  var $text_sm_brand_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.brand-link').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.brand-link').addClass('text-sm');\n    } else {\n      $('.brand-link').removeClass('text-sm');\n    }\n  });\n  var $text_sm_brand_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($text_sm_brand_checkbox).append('<span>Brand</span>');\n  $container.append($text_sm_brand_container);\n  var $text_sm_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('text-sm');\n    } else {\n      $('.nav-sidebar').removeClass('text-sm');\n    }\n  });\n  var $text_sm_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($text_sm_sidebar_checkbox).append('<span>Sidebar Nav</span>');\n  $container.append($text_sm_sidebar_container);\n  var $text_sm_footer_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-footer').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-footer').addClass('text-sm');\n    } else {\n      $('.main-footer').removeClass('text-sm');\n    }\n  });\n  var $text_sm_footer_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($text_sm_footer_checkbox).append('<span>Footer</span>');\n  $container.append($text_sm_footer_container); // Color Arrays\n\n  var navbar_dark_skins = ['navbar-primary', 'navbar-secondary', 'navbar-info', 'navbar-success', 'navbar-danger', 'navbar-indigo', 'navbar-purple', 'navbar-pink', 'navbar-navy', 'navbar-lightblue', 'navbar-teal', 'navbar-cyan', 'navbar-dark', 'navbar-gray-dark', 'navbar-gray'];\n  var navbar_light_skins = ['navbar-light', 'navbar-warning', 'navbar-white', 'navbar-orange'];\n  var sidebar_colors = ['bg-primary', 'bg-warning', 'bg-info', 'bg-danger', 'bg-success', 'bg-indigo', 'bg-lightblue', 'bg-navy', 'bg-purple', 'bg-fuchsia', 'bg-pink', 'bg-maroon', 'bg-orange', 'bg-lime', 'bg-teal', 'bg-olive'];\n  var accent_colors = ['accent-primary', 'accent-warning', 'accent-info', 'accent-danger', 'accent-success', 'accent-indigo', 'accent-lightblue', 'accent-navy', 'accent-purple', 'accent-fuchsia', 'accent-pink', 'accent-maroon', 'accent-orange', 'accent-lime', 'accent-teal', 'accent-olive'];\n  var sidebar_skins = ['sidebar-dark-primary', 'sidebar-dark-warning', 'sidebar-dark-info', 'sidebar-dark-danger', 'sidebar-dark-success', 'sidebar-dark-indigo', 'sidebar-dark-lightblue', 'sidebar-dark-navy', 'sidebar-dark-purple', 'sidebar-dark-fuchsia', 'sidebar-dark-pink', 'sidebar-dark-maroon', 'sidebar-dark-orange', 'sidebar-dark-lime', 'sidebar-dark-teal', 'sidebar-dark-olive', 'sidebar-light-primary', 'sidebar-light-warning', 'sidebar-light-info', 'sidebar-light-danger', 'sidebar-light-success', 'sidebar-light-indigo', 'sidebar-light-lightblue', 'sidebar-light-navy', 'sidebar-light-purple', 'sidebar-light-fuchsia', 'sidebar-light-pink', 'sidebar-light-maroon', 'sidebar-light-orange', 'sidebar-light-lime', 'sidebar-light-teal', 'sidebar-light-olive']; // Navbar Variants\n\n  $container.append('<h6>Navbar Variants</h6>');\n  var $navbar_variants = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  var navbar_all_colors = navbar_dark_skins.concat(navbar_light_skins);\n  var $navbar_variants_colors = createSkinBlock(navbar_all_colors, function () {\n    var color = $(this).find('option:selected').attr('class');\n    var $main_header = $('.main-header');\n    $main_header.removeClass('navbar-dark').removeClass('navbar-light');\n    navbar_all_colors.forEach(function (color) {\n      $main_header.removeClass(color);\n    });\n    $(this).removeClass().addClass('custom-select mb-3 text-light border-0 ');\n\n    if (navbar_dark_skins.indexOf(color) > -1) {\n      $main_header.addClass('navbar-dark');\n      $(this).addClass(color).addClass('text-light');\n    } else {\n      $main_header.addClass('navbar-light');\n      $(this).addClass(color);\n    }\n\n    $main_header.addClass(color);\n  });\n  var active_navbar_color = null;\n  $('.main-header')[0].classList.forEach(function (className) {\n    if (navbar_all_colors.indexOf(className) > -1 && active_navbar_color === null) {\n      active_navbar_color = className.replace('navbar-', 'bg-');\n    }\n  });\n  $navbar_variants_colors.find('option.' + active_navbar_color).prop('selected', true);\n  $navbar_variants_colors.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_navbar_color);\n  $navbar_variants.append($navbar_variants_colors);\n  $container.append($navbar_variants); // Sidebar Colors\n\n  $container.append('<h6>Accent Color Variants</h6>');\n  var $accent_variants = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  $container.append($accent_variants);\n  $container.append(createSkinBlock(accent_colors, function () {\n    var color = $(this).find('option:selected').attr('class');\n    var $body = $('body');\n    accent_colors.forEach(function (skin) {\n      $body.removeClass(skin);\n    });\n    var accent_color_class = color.replace('bg-', 'accent-');\n    $body.addClass(accent_color_class);\n  }, true));\n  var active_accent_color = null;\n  $('body')[0].classList.forEach(function (className) {\n    if (accent_colors.indexOf(className) > -1 && active_accent_color === null) {\n      active_accent_color = className.replace('navbar-', 'bg-');\n    }\n  }); // $accent_variants.find('option.' + active_accent_color).prop('selected', true)\n  // $accent_variants.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_accent_color)\n\n  $container.append('<h6>Dark Sidebar Variants</h6>');\n  var $sidebar_variants_dark = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  $container.append($sidebar_variants_dark);\n  var $sidebar_dark_variants = createSkinBlock(sidebar_colors, function () {\n    var color = $(this).find('option:selected').attr('class');\n    var sidebar_class = 'sidebar-dark-' + color.replace('bg-', '');\n    var $sidebar = $('.main-sidebar');\n    sidebar_skins.forEach(function (skin) {\n      $sidebar.removeClass(skin);\n      $sidebar_light_variants.removeClass(skin.replace('sidebar-dark-', 'bg-')).removeClass('text-light');\n    });\n    $(this).removeClass().addClass('custom-select mb-3 text-light border-0').addClass(color);\n    $sidebar_light_variants.find('option').prop('selected', false);\n    $sidebar.addClass(sidebar_class);\n    $('.sidebar').removeClass('os-theme-dark').addClass('os-theme-light');\n  }, true);\n  $container.append($sidebar_dark_variants);\n  var active_sidebar_dark_color = null;\n  $('.main-sidebar')[0].classList.forEach(function (className) {\n    var color = className.replace('sidebar-dark-', 'bg-');\n\n    if (sidebar_colors.indexOf(color) > -1 && active_sidebar_dark_color === null) {\n      active_sidebar_dark_color = color;\n    }\n  });\n  $sidebar_dark_variants.find('option.' + active_sidebar_dark_color).prop('selected', true);\n  $sidebar_dark_variants.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_sidebar_dark_color);\n  $container.append('<h6>Light Sidebar Variants</h6>');\n  var $sidebar_variants_light = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  $container.append($sidebar_variants_light);\n  var $sidebar_light_variants = createSkinBlock(sidebar_colors, function () {\n    var color = $(this).find('option:selected').attr('class');\n    var sidebar_class = 'sidebar-light-' + color.replace('bg-', '');\n    var $sidebar = $('.main-sidebar');\n    sidebar_skins.forEach(function (skin) {\n      $sidebar.removeClass(skin);\n      $sidebar_dark_variants.removeClass(skin.replace('sidebar-light-', 'bg-')).removeClass('text-light');\n    });\n    $(this).removeClass().addClass('custom-select mb-3 text-light border-0').addClass(color);\n    $sidebar_dark_variants.find('option').prop('selected', false);\n    $sidebar.addClass(sidebar_class);\n    $('.sidebar').removeClass('os-theme-light').addClass('os-theme-dark');\n  }, true);\n  $container.append($sidebar_light_variants);\n  var active_sidebar_light_color = null;\n  $('.main-sidebar')[0].classList.forEach(function (className) {\n    var color = className.replace('sidebar-light-', 'bg-');\n\n    if (sidebar_colors.indexOf(color) > -1 && active_sidebar_light_color === null) {\n      active_sidebar_light_color = color;\n    }\n  });\n\n  if (active_sidebar_light_color !== null) {\n    $sidebar_light_variants.find('option.' + active_sidebar_light_color).prop('selected', true);\n    $sidebar_light_variants.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_sidebar_light_color);\n  }\n\n  var logo_skins = navbar_all_colors;\n  $container.append('<h6>Brand Logo Variants</h6>');\n  var $logo_variants = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  $container.append($logo_variants);\n  var $clear_btn = $('<a />', {\n    href: '#'\n  }).text('clear').on('click', function (e) {\n    e.preventDefault();\n    var $logo = $('.brand-link');\n    logo_skins.forEach(function (skin) {\n      $logo.removeClass(skin);\n    });\n  });\n  var $brand_variants = createSkinBlock(logo_skins, function () {\n    var color = $(this).find('option:selected').attr('class');\n    var $logo = $('.brand-link');\n\n    if (color === 'navbar-light' || color === 'navbar-white') {\n      $logo.addClass('text-black');\n    } else {\n      $logo.removeClass('text-black');\n    }\n\n    logo_skins.forEach(function (skin) {\n      $logo.removeClass(skin);\n    });\n\n    if (color) {\n      $(this).removeClass().addClass('custom-select mb-3 border-0').addClass(color).addClass(color !== 'navbar-light' && color !== 'navbar-white' ? 'text-light' : '');\n    } else {\n      $(this).removeClass().addClass('custom-select mb-3 border-0');\n    }\n\n    $logo.addClass(color);\n  }, true).append($clear_btn);\n  $container.append($brand_variants);\n  var active_brand_color = null;\n  $('.brand-link')[0].classList.forEach(function (className) {\n    if (logo_skins.indexOf(className) > -1 && active_brand_color === null) {\n      active_brand_color = className.replace('navbar-', 'bg-');\n    }\n  });\n\n  if (active_brand_color) {\n    $brand_variants.find('option.' + active_brand_color).prop('selected', true);\n    $brand_variants.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_brand_color);\n  }\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/vendor/js/demo.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/vendor/js/demo.js"]();
/******/ 	
/******/ })()
;